Search.setIndex({"docnames": ["autoapi/trieste/acquisition/combination/index", "autoapi/trieste/acquisition/function/active_learning/index", "autoapi/trieste/acquisition/function/continuous_thompson_sampling/index", "autoapi/trieste/acquisition/function/entropy/index", "autoapi/trieste/acquisition/function/function/index", "autoapi/trieste/acquisition/function/greedy_batch/index", "autoapi/trieste/acquisition/function/index", "autoapi/trieste/acquisition/function/multi_objective/index", "autoapi/trieste/acquisition/function/utils/index", "autoapi/trieste/acquisition/index", "autoapi/trieste/acquisition/interface/index", "autoapi/trieste/acquisition/multi_objective/dominance/index", "autoapi/trieste/acquisition/multi_objective/index", "autoapi/trieste/acquisition/multi_objective/pareto/index", "autoapi/trieste/acquisition/multi_objective/partition/index", "autoapi/trieste/acquisition/optimizer/index", "autoapi/trieste/acquisition/rule/index", "autoapi/trieste/acquisition/sampler/index", "autoapi/trieste/acquisition/utils/index", "autoapi/trieste/ask_tell_optimization/index", "autoapi/trieste/bayesian_optimizer/index", "autoapi/trieste/data/index", "autoapi/trieste/experimental/index", "autoapi/trieste/experimental/plotting/index", "autoapi/trieste/experimental/plotting/inequality_constraints/index", "autoapi/trieste/experimental/plotting/plotting/index", "autoapi/trieste/experimental/plotting/plotting_plotly/index", "autoapi/trieste/index", "autoapi/trieste/logging/index", "autoapi/trieste/models/gpflow/builders/index", "autoapi/trieste/models/gpflow/index", "autoapi/trieste/models/gpflow/inducing_point_selectors/index", "autoapi/trieste/models/gpflow/interface/index", "autoapi/trieste/models/gpflow/models/index", "autoapi/trieste/models/gpflow/optimizer/index", "autoapi/trieste/models/gpflow/sampler/index", "autoapi/trieste/models/gpflow/utils/index", "autoapi/trieste/models/gpflux/builders/index", "autoapi/trieste/models/gpflux/index", "autoapi/trieste/models/gpflux/interface/index", "autoapi/trieste/models/gpflux/models/index", "autoapi/trieste/models/gpflux/sampler/index", "autoapi/trieste/models/index", "autoapi/trieste/models/interfaces/index", "autoapi/trieste/models/keras/architectures/index", "autoapi/trieste/models/keras/builders/index", "autoapi/trieste/models/keras/index", "autoapi/trieste/models/keras/interface/index", "autoapi/trieste/models/keras/models/index", "autoapi/trieste/models/keras/sampler/index", "autoapi/trieste/models/keras/utils/index", "autoapi/trieste/models/optimizer/index", "autoapi/trieste/models/utils/index", "autoapi/trieste/objectives/index", "autoapi/trieste/objectives/multi_objectives/index", "autoapi/trieste/objectives/multifidelity_objectives/index", "autoapi/trieste/objectives/single_objectives/index", "autoapi/trieste/objectives/utils/index", "autoapi/trieste/observer/index", "autoapi/trieste/space/index", "autoapi/trieste/types/index", "autoapi/trieste/utils/index", "autoapi/trieste/utils/misc/index", "autoapi/trieste/version/index", "bibliography", "index", "notebooks/active_learning", "notebooks/active_learning_for_binary_classification", "notebooks/ask_tell_optimization", "notebooks/asynchronous_greedy_multiprocessing", "notebooks/batch_optimization", "notebooks/code_overview", "notebooks/data_transformation", "notebooks/deep_ensembles", "notebooks/deep_gaussian_processes", "notebooks/expected_improvement", "notebooks/explicit_constraints", "notebooks/failure_ego", "notebooks/feasible_sets", "notebooks/inequality_constraints", "notebooks/mixed_search_spaces", "notebooks/multi_objective_ehvi", "notebooks/multifidelity_modelling", "notebooks/openai_gym_lunar_lander", "notebooks/qhsri-tutorial", "notebooks/recovering_from_errors", "notebooks/rembo", "notebooks/scalable_thompson_sampling_using_sparse_gaussian_processes", "notebooks/thompson_sampling", "notebooks/trust_region", "notebooks/visualizing_with_tensorboard", "tutorials"], "filenames": ["autoapi/trieste/acquisition/combination/index.rst", "autoapi/trieste/acquisition/function/active_learning/index.rst", "autoapi/trieste/acquisition/function/continuous_thompson_sampling/index.rst", "autoapi/trieste/acquisition/function/entropy/index.rst", "autoapi/trieste/acquisition/function/function/index.rst", "autoapi/trieste/acquisition/function/greedy_batch/index.rst", "autoapi/trieste/acquisition/function/index.rst", "autoapi/trieste/acquisition/function/multi_objective/index.rst", "autoapi/trieste/acquisition/function/utils/index.rst", "autoapi/trieste/acquisition/index.rst", "autoapi/trieste/acquisition/interface/index.rst", "autoapi/trieste/acquisition/multi_objective/dominance/index.rst", "autoapi/trieste/acquisition/multi_objective/index.rst", "autoapi/trieste/acquisition/multi_objective/pareto/index.rst", "autoapi/trieste/acquisition/multi_objective/partition/index.rst", "autoapi/trieste/acquisition/optimizer/index.rst", "autoapi/trieste/acquisition/rule/index.rst", "autoapi/trieste/acquisition/sampler/index.rst", "autoapi/trieste/acquisition/utils/index.rst", "autoapi/trieste/ask_tell_optimization/index.rst", "autoapi/trieste/bayesian_optimizer/index.rst", "autoapi/trieste/data/index.rst", "autoapi/trieste/experimental/index.rst", "autoapi/trieste/experimental/plotting/index.rst", "autoapi/trieste/experimental/plotting/inequality_constraints/index.rst", "autoapi/trieste/experimental/plotting/plotting/index.rst", "autoapi/trieste/experimental/plotting/plotting_plotly/index.rst", "autoapi/trieste/index.rst", "autoapi/trieste/logging/index.rst", "autoapi/trieste/models/gpflow/builders/index.rst", "autoapi/trieste/models/gpflow/index.rst", "autoapi/trieste/models/gpflow/inducing_point_selectors/index.rst", "autoapi/trieste/models/gpflow/interface/index.rst", "autoapi/trieste/models/gpflow/models/index.rst", "autoapi/trieste/models/gpflow/optimizer/index.rst", "autoapi/trieste/models/gpflow/sampler/index.rst", "autoapi/trieste/models/gpflow/utils/index.rst", "autoapi/trieste/models/gpflux/builders/index.rst", "autoapi/trieste/models/gpflux/index.rst", "autoapi/trieste/models/gpflux/interface/index.rst", "autoapi/trieste/models/gpflux/models/index.rst", "autoapi/trieste/models/gpflux/sampler/index.rst", "autoapi/trieste/models/index.rst", "autoapi/trieste/models/interfaces/index.rst", "autoapi/trieste/models/keras/architectures/index.rst", "autoapi/trieste/models/keras/builders/index.rst", "autoapi/trieste/models/keras/index.rst", "autoapi/trieste/models/keras/interface/index.rst", "autoapi/trieste/models/keras/models/index.rst", "autoapi/trieste/models/keras/sampler/index.rst", "autoapi/trieste/models/keras/utils/index.rst", "autoapi/trieste/models/optimizer/index.rst", "autoapi/trieste/models/utils/index.rst", "autoapi/trieste/objectives/index.rst", "autoapi/trieste/objectives/multi_objectives/index.rst", "autoapi/trieste/objectives/multifidelity_objectives/index.rst", "autoapi/trieste/objectives/single_objectives/index.rst", "autoapi/trieste/objectives/utils/index.rst", "autoapi/trieste/observer/index.rst", "autoapi/trieste/space/index.rst", "autoapi/trieste/types/index.rst", "autoapi/trieste/utils/index.rst", "autoapi/trieste/utils/misc/index.rst", "autoapi/trieste/version/index.rst", "bibliography.rst", "index.rst", "notebooks/active_learning.pct.py", "notebooks/active_learning_for_binary_classification.pct.py", "notebooks/ask_tell_optimization.pct.py", "notebooks/asynchronous_greedy_multiprocessing.pct.py", "notebooks/batch_optimization.pct.py", "notebooks/code_overview.pct.py", "notebooks/data_transformation.pct.py", "notebooks/deep_ensembles.pct.py", "notebooks/deep_gaussian_processes.pct.py", "notebooks/expected_improvement.pct.py", "notebooks/explicit_constraints.pct.py", "notebooks/failure_ego.pct.py", "notebooks/feasible_sets.pct.py", "notebooks/inequality_constraints.pct.py", "notebooks/mixed_search_spaces.pct.py", "notebooks/multi_objective_ehvi.pct.py", "notebooks/multifidelity_modelling.pct.py", "notebooks/openai_gym_lunar_lander.pct.py", "notebooks/qhsri-tutorial.pct.py", "notebooks/recovering_from_errors.pct.py", "notebooks/rembo.pct.py", "notebooks/scalable_thompson_sampling_using_sparse_gaussian_processes.pct.py", "notebooks/thompson_sampling.pct.py", "notebooks/trust_region.pct.py", "notebooks/visualizing_with_tensorboard.pct.py", "tutorials.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.combination</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.function.active_learning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.function.continuous_thompson_sampling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.function.entropy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.function.function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.function.greedy_batch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.function</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.function.multi_objective</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.function.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.interface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.multi_objective.dominance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.multi_objective</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.multi_objective.pareto</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.multi_objective.partition</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.rule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.acquisition.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.ask_tell_optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.bayesian_optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.experimental</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.experimental.plotting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.experimental.plotting.inequality_constraints</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.experimental.plotting.plotting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.experimental.plotting.plotting_plotly</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.logging</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflow.builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflow.inducing_point_selectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflow.interface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflow.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflow.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflow.sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflow.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflux.builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflux</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflux.interface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflux.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.gpflux.sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.interfaces</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.keras.architectures</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.keras.builders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.keras</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.keras.interface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.keras.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.keras.sampler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.keras.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.models.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.objectives.multi_objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.objectives.multifidelity_objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.objectives.single_objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.objectives.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.observer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.space</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.types</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.utils.misc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trieste.version</span></code>", "Bibliography", "Trieste documentation", "Active learning", "Active learning for binary classification", "Ask-Tell optimization interface", "Asynchronous Bayesian Optimization", "Batch Bayesian optimization", "An overview of Trieste types", "Data transformation", "Deep ensembles", "Deep Gaussian processes", "Introduction to Bayesian optimization", "Explicit constraints", "Failure regions", "Active learning of feasibility regions", "Inequality constraints", "Mixed search spaces", "Multi-objective optimization", "Multifidelity modelling", "OpenAI Gym", "Batching with Sharpe Ratio", "Recovering from errors", "High-dimensional Bayesian optimization", "Scalable Thompson sampling", "Thompson sampling", "Trust region Bayesian optimization", "Visualizing with Tensorboard", "Tutorials"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 56, 59, 61, 62, 67, 68, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 89, 90], "reduc": [0, 9, 15, 16, 18, 38, 40, 46, 48, 66, 79, 82], "builder": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 16, 27, 30, 38, 42, 43, 46, 66, 67, 69, 70, 77, 78, 79, 80, 81, 87, 89], "interfac": [0, 1, 2, 3, 4, 5, 6, 7, 9, 15, 16, 17, 18, 19, 26, 27, 30, 31, 33, 35, 36, 38, 40, 41, 42, 44, 46, 48, 49, 52, 71, 73, 74, 90, 91], "acquisitionfunctionbuild": [0, 4, 5, 6, 7, 9, 10, 16, 79], "model": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 16, 17, 18, 19, 20, 25, 26, 27, 53, 56, 57, 58, 60, 62, 64, 65, 69, 83, 84, 85, 86, 91], "probabilisticmodeltyp": [0, 3, 4, 5, 6, 7, 9, 10, 16, 17, 18, 19, 20, 30, 31, 42, 43, 71], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 83, 91], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 24, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 61, 62, 64, 68, 71, 72, 73, 75, 77, 78, 80, 81, 83, 85, 89, 90], "A": [0, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 68, 71, 72, 74, 76, 84, 86, 90], "build": [0, 1, 3, 4, 5, 6, 8, 9, 10, 16, 29, 30, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 51, 59, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 86, 87, 88], "an": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 61, 62, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "acquisitionfunct": [0, 1, 3, 4, 5, 6, 7, 9, 10, 15, 16, 18, 25, 42, 43], "whose": [0, 9, 15, 21, 44, 46, 48, 52, 61, 62, 71, 73, 77, 90], "output": [0, 2, 4, 5, 6, 9, 10, 15, 16, 17, 18, 19, 21, 25, 26, 30, 32, 33, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 56, 59, 64, 65, 69, 71, 72, 73, 75, 77, 79, 81], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "calcul": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 16, 25, 30, 31, 33, 35, 36, 42, 43, 59, 69, 76, 81, 83, 84, 85], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 56, 57, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91], "number": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90], "other": [0, 1, 5, 6, 9, 14, 15, 16, 19, 25, 26, 29, 30, 32, 33, 36, 38, 40, 42, 43, 46, 48, 59, 61, 62, 68, 71, 73, 74, 75, 77, 82, 83, 84, 85, 87, 90], "": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "how": [0, 6, 7, 9, 10, 16, 19, 20, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91], "compos": [0, 9], "defin": [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 27, 29, 30, 31, 35, 36, 42, 43, 44, 46, 53, 56, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 90], "method": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 51, 52, 59, 64, 66, 70, 71, 72, 73, 74, 75, 78, 79, 80, 82, 84, 85, 86, 87, 89, 90], "_reduc": [0, 9], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 81, 82, 83], "function": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "At": [0, 9, 16, 30, 33, 68, 71, 72, 83, 87], "least": [0, 3, 5, 6, 9, 10, 16, 42, 43, 45, 46, 70, 71, 73, 74, 87], "one": [0, 1, 3, 4, 5, 6, 7, 9, 10, 15, 16, 18, 19, 20, 21, 26, 29, 30, 31, 33, 35, 38, 39, 42, 43, 44, 45, 46, 48, 50, 51, 53, 56, 59, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 80, 81, 82, 83, 85, 87, 89, 90], "must": [0, 3, 4, 5, 6, 7, 9, 12, 13, 14, 16, 19, 20, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 59, 66, 70, 71, 76, 77, 79, 80, 86, 90], "provid": [0, 1, 2, 3, 5, 6, 9, 15, 16, 17, 19, 27, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 52, 59, 62, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 84, 85, 86, 87, 89], "rais": [0, 1, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 54, 56, 58, 59, 61, 62, 69, 71, 75, 82, 85], "invalidargumenterror": [0, 1, 3, 4, 5, 6, 7, 9, 12, 13, 14, 21, 30, 31, 33, 35, 38, 41, 42, 43, 46, 50, 54, 56, 58, 59], "If": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 58, 59, 60, 61, 62, 68, 71, 73, 75, 76, 82, 85, 90], "specifi": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 29, 30, 31, 33, 35, 36, 38, 40, 41, 42, 43, 46, 47, 48, 51, 59, 69, 71, 72, 73, 74, 75, 77, 78, 82, 85, 87, 88, 89], "properti": [0, 4, 6, 9, 16, 17, 19, 20, 30, 32, 33, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 53, 54, 56, 59, 61, 62], "collect": [0, 2, 3, 5, 6, 7, 9, 10, 14, 16, 19, 25, 53, 57, 59, 68, 69, 70, 76, 80, 87, 89], "abc": [0, 9, 10, 16, 17, 19, 30, 31, 32, 35, 38, 39, 41, 42, 43, 46, 47, 53, 57, 59, 61, 62], "sequenc": [0, 1, 6, 7, 9, 15, 16, 18, 19, 21, 25, 29, 30, 33, 35, 42, 43, 44, 46, 59, 62, 66, 76, 78], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "initialis": [0, 4, 6, 9, 19, 20, 29, 30, 32, 79, 82], "prepare_acquisition_funct": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 70, 71, 77, 79], "map": [0, 4, 5, 6, 7, 9, 10, 16, 18, 19, 20, 31, 38, 40, 46, 48, 51, 57, 58, 61, 62, 64, 71, 78], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 83, 85, 87, 89, 90, 91], "tag": [0, 4, 5, 6, 7, 9, 10, 16, 18, 19, 20, 53, 57, 58, 59, 60, 62, 71, 77, 79, 80], "dataset": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 58, 60, 62, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 20, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 57, 58, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91], "none": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 59, 62, 68, 69, 71, 72, 75, 77, 78, 79, 80, 81, 82, 85, 89, 90], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "first": [0, 5, 6, 8, 9, 10, 16, 18, 20, 26, 28, 30, 31, 35, 42, 43, 46, 48, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 89], "each": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 57, 59, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90], "__init__": [0, 5, 9, 16, 20, 30, 35, 38, 41, 42, 43, 74, 79, 82, 85], "those": [0, 4, 5, 6, 7, 9, 15, 16, 19, 20, 59, 67, 70, 77, 79, 83, 84, 87, 88, 90], "observ": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 50, 51, 53, 57, 65, 66, 67, 68, 69, 70, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "over": [0, 1, 3, 4, 5, 6, 7, 9, 10, 15, 16, 17, 18, 19, 20, 29, 30, 31, 33, 51, 53, 54, 56, 59, 65, 68, 69, 70, 71, 72, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "update_acquisition_funct": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 71], "updat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 18, 19, 20, 26, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 43, 46, 48, 49, 60, 64, 67, 68, 70, 71, 72, 73, 74, 78, 80, 81, 82, 84, 89], "unus": [0, 1, 4, 6, 9, 16, 17, 90], "abstract": [0, 9, 10, 16, 17, 19, 24, 30, 31, 32, 35, 38, 39, 42, 43, 44, 46, 47, 59, 61, 62, 89], "input": [0, 3, 9, 10, 15, 16, 17, 18, 19, 21, 25, 26, 29, 30, 33, 35, 36, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 56, 59, 66, 67, 68, 69, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 86], "tensortyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 71, 87], "constitu": [0, 9, 85], "sum": [0, 4, 6, 9, 30, 35, 38, 41, 42, 43, 69, 84], "result": [0, 5, 6, 7, 9, 12, 13, 14, 16, 18, 20, 21, 26, 42, 43, 46, 48, 51, 52, 53, 57, 58, 59, 61, 62, 66, 68, 69, 70, 76, 77, 78, 79, 81, 84, 86, 90], "element": [0, 3, 6, 9, 15, 20, 44, 45, 46, 58, 80, 87], "wise": [0, 9], "product": [0, 3, 5, 6, 9, 16, 23, 59, 71, 76, 77, 79, 80, 81], "map_fn": [0, 5], "callabl": [0, 2, 4, 5, 6, 7, 8, 9, 16, 17, 25, 26, 28, 30, 35, 38, 40, 41, 43, 44, 51, 53, 56, 57, 59, 61, 62, 74], "accept": [0, 5, 6, 8, 9, 28, 30, 33, 71, 78, 82], "just": [0, 3, 5, 6, 9, 16, 19, 20, 21, 30, 31, 33, 35, 42, 43, 59, 66, 68, 70, 71, 75, 78, 82, 83, 85], "appli": [0, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 21, 25, 36, 46, 48, 61, 62, 64, 68, 83, 87, 89], "given": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 15, 16, 18, 19, 20, 25, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 46, 47, 48, 49, 53, 54, 60, 62, 71, 75, 78, 79, 83, 85], "its": [0, 3, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 30, 31, 33, 35, 38, 41, 42, 43, 46, 48, 49, 51, 59, 61, 62, 68, 70, 72, 73, 74, 75, 79, 80, 82, 83, 85, 87, 89, 90], "For": [0, 1, 2, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 19, 20, 21, 26, 29, 30, 32, 33, 35, 38, 39, 40, 42, 43, 46, 47, 48, 50, 51, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 89, 90], "exampl": [0, 4, 6, 9, 15, 16, 19, 21, 30, 31, 33, 46, 50, 51, 53, 59, 61, 62, 66, 68, 70, 71, 72, 73, 74, 75, 76, 80, 81, 83, 86, 89, 90, 91], "lambda": [0, 46, 48, 67, 68, 90], "x": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 17, 18, 25, 26, 30, 33, 35, 36, 38, 41, 42, 43, 46, 48, 49, 54, 56, 58, 59, 61, 62, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "would": [0, 3, 5, 6, 9, 10, 15, 16, 19, 30, 36, 46, 48, 66, 68, 71, 73, 75, 76, 78, 79, 84], "gener": [0, 3, 5, 6, 7, 8, 9, 10, 15, 16, 17, 19, 20, 25, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 49, 51, 53, 54, 59, 61, 62, 64, 65, 67, 71, 73, 75, 79, 81, 83, 84, 85, 86, 89, 90], "neg": [0, 2, 3, 4, 6, 7, 9, 20, 30, 35, 38, 41, 46, 48, 50, 73, 82, 83, 84], "contain": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87], "bayesian": [1, 3, 5, 6, 7, 9, 10, 16, 19, 20, 29, 30, 31, 33, 35, 37, 38, 44, 45, 46, 48, 53, 56, 64, 65, 66, 71, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 91], "activ": [1, 6, 9, 16, 44, 45, 46, 64, 73, 91], "learn": [1, 6, 9, 16, 38, 39, 40, 44, 45, 46, 48, 64, 65, 68, 73, 77, 83, 91], "predictivevari": [1, 6, 9, 66], "jitter": [1, 4, 6, 7, 8, 9, 30, 33, 35, 38, 41, 42, 43, 61, 62, 70], "float": [1, 3, 4, 6, 7, 8, 9, 12, 13, 14, 16, 18, 20, 25, 26, 28, 29, 30, 33, 35, 36, 37, 38, 41, 42, 43, 53, 56, 59, 61, 62], "default": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 28, 29, 30, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 57, 59, 61, 62, 68, 70, 72, 73, 74, 75, 76, 77, 80, 84, 85, 89, 90], "singlemodelacquisitionbuild": [1, 3, 4, 5, 6, 7, 9, 10, 16, 71, 77], "supportspredictjoint": [1, 5, 6, 9, 30, 32, 35, 43, 71], "determin": [1, 3, 4, 5, 6, 7, 9, 15, 16, 20, 29, 30, 35, 37, 38, 42, 43, 44, 46, 56, 66, 78], "predict": [1, 3, 4, 5, 6, 7, 9, 17, 26, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 64, 67, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 88, 89], "covari": [1, 3, 4, 6, 7, 8, 9, 16, 20, 30, 32, 33, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 61, 62, 66, 73, 84], "matrix": [1, 3, 4, 6, 7, 9, 16, 30, 32, 33, 35, 36, 38, 41, 42, 43, 44, 45, 46, 59, 66, 82, 86], "batch": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 18, 19, 30, 32, 33, 35, 36, 38, 40, 41, 42, 43, 46, 47, 48, 49, 51, 57, 59, 64, 69, 71, 73, 76, 78, 80, 85, 87, 91], "point": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90], "size": [1, 3, 4, 5, 6, 7, 9, 10, 15, 16, 18, 19, 20, 21, 25, 26, 29, 30, 31, 33, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 69, 70, 73, 78, 79, 81, 82, 84, 85, 87, 89], "1": [1, 3, 4, 5, 6, 7, 9, 10, 15, 16, 17, 18, 20, 21, 25, 26, 30, 32, 33, 35, 36, 38, 41, 42, 43, 46, 48, 50, 53, 54, 56, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "same": [1, 2, 4, 6, 9, 12, 13, 14, 15, 16, 20, 21, 25, 30, 33, 35, 38, 41, 42, 43, 44, 45, 46, 59, 61, 62, 70, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90], "maxim": [1, 2, 5, 6, 7, 9, 15, 16, 30, 31, 33, 64, 70, 71, 83], "varianc": [1, 4, 5, 6, 9, 26, 29, 30, 31, 32, 33, 35, 37, 38, 39, 42, 43, 46, 47, 48, 53, 56, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 86, 88, 89], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91], "when": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 28, 29, 30, 33, 35, 36, 38, 40, 41, 42, 43, 44, 46, 48, 50, 59, 64, 65, 66, 68, 69, 71, 73, 74, 76, 77, 78, 79, 80, 82, 83, 85, 87, 89, 90], "stabilis": [1, 4, 6, 7, 9, 30, 35, 42, 43, 61, 62], "choleski": [1, 4, 6, 7, 8, 9, 30, 33, 35, 36, 38, 41, 42, 43, 61, 62], "decomposit": [1, 4, 6, 7, 9, 30, 31, 33, 35, 36, 38, 41, 42, 43, 61, 62, 64], "predictive_vari": [1, 6, 9], "see": [1, 2, 4, 5, 6, 9, 15, 16, 27, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 43, 46, 48, 49, 51, 53, 54, 56, 59, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90], "mac92": [1, 6, 9, 64, 66], "detail": [1, 2, 4, 5, 6, 8, 9, 15, 16, 19, 30, 31, 33, 35, 37, 38, 42, 43, 46, 49, 53, 54, 56, 67, 68, 73, 74, 76, 78, 79, 81, 83, 88, 89], "note": [1, 2, 3, 5, 6, 7, 9, 10, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 56, 59, 61, 62, 64, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90], "need": [1, 3, 5, 6, 9, 10, 16, 26, 29, 30, 32, 33, 36, 38, 40, 44, 46, 48, 51, 62, 66, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 89], "suppli": [1, 6, 9, 46, 48], "joint": [1, 6, 9, 30, 32, 33, 35, 42, 43, 71, 81], "margin": [1, 6, 9, 30, 32, 33, 38, 39, 40, 42, 43, 46, 47], "distribut": [1, 3, 4, 6, 7, 9, 17, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 64, 71, 72, 73, 74, 75, 77, 78, 80, 86, 88], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 54, 56, 59, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90], "can": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 25, 29, 30, 31, 32, 33, 35, 36, 38, 40, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91], "expens": [1, 6, 9, 20, 30, 31, 35, 64, 65, 66, 68, 71, 73, 74, 76, 78, 79, 81, 82, 87], "comput": [1, 3, 4, 6, 8, 9, 11, 12, 16, 20, 30, 32, 33, 35, 36, 46, 49, 52, 61, 62, 64, 66, 69, 70, 78, 83, 84, 87], "object": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 24, 25, 26, 27, 29, 30, 33, 36, 42, 43, 44, 46, 48, 49, 50, 52, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91], "expectedfeas": [1, 6, 9, 78], "threshold": [1, 4, 6, 9, 12, 14, 16, 76, 78, 79, 81], "alpha": [1, 6, 9, 25, 26, 30, 36, 73, 74, 78, 80, 82], "delta": [1, 4, 6, 9, 30, 33, 78], "int": [1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 61, 62, 71, 77, 79, 80, 81, 89], "probabilisticmodel": [1, 2, 3, 4, 5, 6, 7, 9, 16, 17, 19, 20, 25, 26, 30, 35, 38, 41, 42, 43, 46, 47, 52], "expect": [1, 4, 5, 6, 7, 8, 9, 10, 16, 20, 31, 64, 67, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 86], "feasibl": [1, 4, 6, 7, 9, 59, 73, 76, 79, 81, 91], "identifi": [1, 6, 9, 16, 59, 78], "failur": [1, 6, 9, 15, 16, 64, 78, 83, 91], "region": [1, 6, 7, 9, 12, 13, 14, 16, 25, 30, 31, 59, 64, 66, 67, 73, 76, 79, 87, 91], "It": [1, 5, 6, 9, 16, 19, 30, 31, 33, 38, 42, 43, 46, 50, 56, 61, 62, 65, 68, 71, 72, 73, 77, 78, 80, 82, 84, 85, 88], "implement": [1, 3, 5, 6, 7, 9, 15, 16, 20, 30, 31, 33, 35, 36, 42, 43, 44, 51, 59, 62, 66, 69, 71, 73, 75, 78, 79, 80, 82, 84, 86, 87, 88, 89], "two": [1, 3, 4, 5, 6, 7, 8, 9, 15, 21, 42, 43, 44, 46, 48, 59, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 82, 86], "relat": [1, 6, 9, 10, 18, 78, 82], "sampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 26, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 91], "strategi": [1, 6, 7, 9, 12, 14, 30, 35, 69, 73, 78, 89], "call": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 43, 46, 48, 49, 59, 61, 62, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 85, 89, 90], "bichon": [1, 6, 9, 64, 78], "criterion": [1, 6, 9, 64, 68, 78], "BES": [1, 6, 9, 64, 78], "08": [1, 6, 9, 64, 78, 85], "ranjan": [1, 6, 9, 64, 78], "rbm08": [1, 6, 9, 64, 78], "goal": [1, 6, 9, 10, 66, 78, 83], "both": [1, 3, 5, 6, 9, 15, 20, 29, 30, 31, 32, 33, 35, 38, 39, 41, 42, 43, 46, 47, 59, 66, 69, 71, 73, 74, 79, 80, 81, 82, 84, 85, 86, 88], "criteria": [1, 6, 9, 64, 68, 78], "mean": [1, 4, 5, 6, 7, 8, 9, 16, 26, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 53, 56, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 87, 88, 90], "close": [1, 5, 6, 9, 20, 21, 59, 69, 72, 73, 78, 80, 84, 89], "high": [1, 3, 4, 6, 9, 15, 16, 30, 31, 64, 66, 70, 78, 84, 89, 91], "neighbourhood": [1, 6, 9], "around": [1, 5, 6, 7, 9, 15, 16, 18, 30, 35, 38, 41, 42, 43, 70, 73, 74, 78, 80, 85, 89], "estim": [1, 3, 4, 5, 6, 8, 9, 10, 26, 29, 30, 31, 37, 38, 46, 47, 64, 70, 72, 73, 74, 75, 78, 89], "contour": [1, 6, 9, 25, 64, 66, 67, 70, 75, 76, 77, 78, 79, 80, 81, 85, 88, 89], "line": [1, 6, 9, 68, 69, 70, 73, 75, 78, 79, 80, 81, 85, 87, 90], "percentag": [1, 6, 9, 78], "posterior": [1, 4, 5, 6, 7, 9, 16, 30, 32, 33, 35, 36, 38, 41, 64, 66, 67, 70, 73, 74, 78, 88], "alloc": [1, 6, 9, 31, 64, 70, 73, 78, 87], "new": [1, 2, 3, 4, 5, 6, 7, 9, 10, 15, 16, 19, 20, 24, 28, 30, 31, 33, 35, 36, 38, 41, 42, 43, 46, 49, 50, 59, 60, 61, 62, 68, 69, 72, 79, 80, 82, 85, 86, 87, 88, 89, 90], "valu": [1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 25, 29, 30, 33, 35, 36, 37, 38, 40, 44, 45, 46, 47, 50, 51, 54, 56, 59, 60, 61, 62, 64, 65, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 90], "2": [1, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 18, 20, 21, 24, 25, 26, 28, 30, 32, 33, 35, 36, 37, 45, 46, 48, 50, 53, 54, 56, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "valueerror": [1, 3, 4, 5, 6, 7, 9, 12, 13, 14, 16, 17, 19, 20, 21, 28, 30, 33, 35, 36, 38, 40, 41, 42, 43, 44, 46, 47, 48, 50, 54, 56, 58, 59, 61, 62, 69, 82], "argument": [1, 3, 6, 9, 15, 19, 20, 29, 30, 38, 39, 40, 44, 46, 47, 48, 51, 61, 62, 73, 75, 76, 77, 81, 85, 89, 90], "scalar": [1, 4, 6, 9, 25, 28, 30, 33, 35, 59, 61, 62, 90], "posit": [1, 3, 4, 5, 6, 7, 9, 10, 17, 20, 25, 26, 30, 35, 37, 38, 41, 42, 43, 59, 78, 82, 83], "greater": [1, 3, 4, 5, 6, 7, 9, 15, 29, 30, 36, 59, 68, 71, 72, 78, 81], "than": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 20, 21, 26, 29, 30, 31, 33, 35, 36, 37, 38, 40, 42, 43, 46, 48, 50, 59, 61, 62, 65, 66, 68, 70, 71, 73, 74, 75, 78, 80, 81, 83, 84, 85, 87], "option": [1, 4, 5, 6, 9, 10, 12, 14, 16, 18, 19, 20, 24, 25, 26, 28, 29, 30, 32, 33, 38, 40, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 57, 59, 68, 71, 74, 76, 79, 80, 81, 82, 89], "bichon_ranjan_criterion": [1, 6, 9], "problem": [1, 4, 6, 7, 9, 14, 15, 16, 21, 29, 30, 33, 35, 45, 46, 53, 54, 56, 64, 68, 69, 84], "f": [1, 4, 6, 9, 25, 26, 30, 33, 35, 36, 61, 62, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 89], "formal": [1, 6, 9, 78], "excurs": [1, 6, 9, 78], "set": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 42, 43, 44, 45, 46, 48, 53, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 91], "gamma": [1, 6, 9, 30, 33, 78], "ge": [1, 6, 9, 78], "t": [1, 3, 6, 9, 16, 17, 18, 19, 20, 28, 30, 35, 36, 42, 43, 51, 59, 60, 61, 62, 64, 68, 69, 71, 72, 73, 74, 75, 76, 78, 80, 84, 85, 89], "c": [1, 3, 4, 6, 9, 59, 61, 62, 64, 75, 76, 78, 84], "some": [1, 4, 6, 9, 16, 20, 25, 26, 30, 31, 33, 46, 49, 67, 68, 69, 71, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 90], "bgl": [1, 6, 9, 64, 78], "12": [1, 6, 9, 15, 30, 32, 33, 36, 64, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89], "more": [1, 2, 4, 5, 6, 8, 9, 12, 14, 15, 16, 19, 20, 26, 30, 31, 33, 35, 42, 43, 46, 48, 56, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 81, 83, 85, 86], "turn": [1, 6, 9, 68, 69, 73, 78, 82], "out": [1, 6, 7, 9, 12, 14, 16, 28, 59, 62, 68, 69, 73, 74, 76, 78, 79, 81], "probabilist": [1, 6, 9, 16, 17, 26, 32, 35, 42, 43, 44, 46, 47, 48, 49, 50, 64, 65, 68, 72, 73, 74, 75, 89], "classifi": [1, 6, 9, 78], "where": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 58, 59, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90], "probabl": [1, 4, 5, 6, 7, 9, 16, 17, 64, 73, 76, 78, 79, 81], "larger": [1, 2, 6, 9, 12, 14, 30, 35, 37, 38, 50, 56, 70, 73, 78, 79, 87], "idea": [1, 6, 9, 53, 54, 68, 78, 84], "mani": [1, 6, 9, 20, 53, 56, 69, 71, 73, 78, 81, 83], "sequenti": [1, 2, 3, 5, 6, 9, 30, 32, 33, 44, 46, 64, 66, 69, 70, 78, 89], "we": [1, 2, 3, 4, 5, 6, 7, 9, 10, 15, 16, 17, 20, 21, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "follow": [1, 3, 4, 5, 6, 7, 8, 9, 15, 17, 19, 20, 30, 31, 35, 46, 48, 59, 62, 71, 77, 78, 79, 80, 82, 83, 87, 89, 90, 91], "formul": [1, 6, 9, 16, 46, 48, 83, 87], "common": [1, 4, 6, 9, 15, 45, 46, 51, 69, 72, 73, 78, 80, 83], "express": [1, 3, 6, 9, 30, 35, 59, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "mathbb": [1, 4, 6, 9, 17, 59, 65, 67, 78, 82, 86], "e": [1, 2, 3, 4, 5, 6, 7, 9, 10, 15, 16, 17, 18, 20, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 59, 64, 66, 67, 68, 70, 71, 73, 74, 76, 78, 81, 82, 84, 85, 87, 90], "max": [1, 3, 4, 6, 9, 25, 26, 46, 48, 64, 72, 76, 78, 81], "0": [1, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 46, 48, 50, 53, 56, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "m": [1, 3, 4, 5, 6, 7, 9, 10, 16, 30, 31, 32, 33, 35, 38, 41, 42, 43, 46, 48, 54, 56, 58, 59, 64, 69, 78], "here": [1, 3, 4, 5, 6, 9, 29, 30, 33, 36, 37, 38, 42, 43, 45, 46, 48, 49, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 89, 90], "standard": [1, 4, 5, 6, 7, 8, 9, 16, 20, 21, 26, 30, 33, 46, 48, 70, 71, 72, 73, 74, 75, 76, 78, 83, 84, 87], "deviat": [1, 4, 6, 7, 9, 16, 26, 72, 73, 78, 84], "obtain": [1, 6, 9, 15, 17, 19, 30, 33, 36, 38, 40, 76, 78, 79, 80, 81, 86], "while": [1, 6, 9, 15, 20, 30, 33, 50, 67, 68, 69, 72, 73, 74, 77, 78, 83, 86, 90], "anoth": [1, 6, 9, 59, 69, 73, 78, 84], "act": [1, 6, 9, 44, 46, 47, 73, 78, 86], "current": [1, 2, 3, 4, 5, 6, 7, 9, 10, 16, 17, 19, 20, 26, 28, 30, 31, 33, 35, 42, 43, 46, 48, 69, 70, 71, 73, 74, 75, 78, 83, 85, 89], "boundari": [1, 6, 9, 12, 14, 16, 29, 30, 36, 67, 78], "want": [1, 6, 9, 16, 20, 46, 48, 50, 66, 67, 68, 69, 73, 78, 83, 84], "so": [1, 2, 3, 4, 5, 6, 9, 12, 13, 18, 20, 29, 30, 31, 33, 38, 39, 42, 43, 46, 48, 49, 60, 62, 66, 67, 68, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91], "differ": [1, 4, 6, 7, 9, 10, 12, 14, 15, 16, 21, 30, 33, 35, 36, 38, 40, 41, 42, 43, 46, 48, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 89, 90, 91], "equat": [1, 4, 5, 6, 7, 9, 70, 78, 81], "abov": [1, 6, 9, 12, 14, 15, 46, 48, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89, 91], "larg": [1, 3, 4, 6, 7, 9, 15, 16, 18, 30, 31, 33, 46, 48, 49, 56, 64, 66, 70, 72, 73, 74, 78, 82, 83, 85, 87], "possibl": [1, 6, 7, 9, 18, 38, 40, 42, 43, 46, 48, 51, 67, 69, 71, 72, 73, 78, 83, 85, 89, 90], "onli": [1, 3, 4, 5, 6, 7, 9, 10, 15, 16, 17, 18, 19, 20, 21, 25, 28, 30, 31, 33, 35, 36, 38, 41, 42, 43, 44, 45, 46, 49, 50, 52, 62, 65, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89], "allow": [1, 3, 5, 6, 7, 9, 15, 16, 20, 29, 30, 31, 33, 35, 38, 40, 41, 42, 43, 46, 48, 51, 71, 74, 75, 80], "integratedvariancereduct": [1, 6, 9, 78], "integration_point": [1, 6, 9, 78], "fastupdatemodel": [1, 5, 6, 9, 30, 33, 42, 43], "reduct": [1, 3, 6, 9, 70], "integr": [1, 3, 6, 9, 17, 80], "search": [1, 3, 4, 5, 6, 7, 9, 10, 15, 16, 17, 18, 19, 20, 24, 25, 29, 30, 31, 37, 38, 53, 55, 56, 59, 62, 64, 67, 70, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 86, 87, 88, 89, 91], "space": [1, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 35, 37, 38, 53, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "queri": [1, 2, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 19, 20, 21, 24, 25, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 57, 58, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90], "either": [1, 3, 4, 6, 8, 9, 15, 16, 17, 20, 25, 28, 29, 30, 37, 38, 58, 59, 61, 62, 69, 71, 72, 75, 83, 87, 89, 90], "integrated_variance_reduct": [1, 6, 9], "acquisitionfunctionclass": [1, 3, 4, 6, 7, 9, 10], "weight": [1, 3, 4, 5, 6, 9, 30, 35, 38, 41, 46, 48, 64, 73, 84], "averag": [1, 6, 9, 83, 90], "k": [1, 6, 9, 30, 31, 35, 36, 37, 38, 54, 61, 62, 70, 87], "squar": [1, 6, 9, 30, 32, 38, 40, 46, 48, 61, 62, 67, 73, 82], "error": [1, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 20, 30, 31, 32, 38, 40, 46, 48, 59, 61, 62, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90], "ims": [1, 6, 9], "pgr": [1, 6, 9, 64], "10": [1, 5, 6, 9, 15, 16, 30, 33, 53, 56, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "maximis": [1, 3, 4, 5, 6, 7, 9, 15, 16, 67, 84], "write": [1, 6, 9, 20, 52, 68, 71, 72], "int_x": [1, 6, 9], "v_": [1, 6, 9], "old": [1, 6, 9, 71], "gp": [1, 4, 5, 6, 9, 25, 26, 30, 32, 33, 35, 36, 37, 38, 41, 70, 72, 74, 75, 81, 84, 86, 87], "further": [1, 5, 6, 9, 46, 48, 73], "condit": [1, 5, 6, 9, 30, 31, 33, 38, 39, 64], "sinc": [1, 5, 6, 7, 9, 16, 19, 20, 69, 71, 72, 73, 74, 78, 79, 80, 83, 84, 85, 86, 88, 89], "constant": [1, 5, 6, 9, 15, 21, 29, 30, 35, 46, 50, 59, 61, 62, 69, 71, 72, 76], "w": [1, 6, 9, 64, 83], "r": [1, 3, 4, 6, 9, 17, 59, 64, 65, 70, 75, 76, 80, 82, 83, 84, 86, 91], "global": [1, 3, 4, 5, 6, 9, 16, 18, 19, 30, 31, 53, 55, 56, 62, 64, 65, 72, 74, 75, 80, 89], "accur": [1, 3, 4, 6, 8, 9, 15, 30, 35, 59, 64, 66, 78, 82], "otherwis": [1, 4, 6, 9, 16, 20, 29, 30, 31, 38, 39, 59, 75], "target": [1, 3, 6, 9, 15, 59, 64, 69, 87], "toward": [1, 4, 6, 9, 64, 77], "particular": [1, 6, 9, 15, 25, 30, 35, 38, 41, 42, 43, 46, 48, 59, 70, 73, 87], "pdf": [1, 6, 9, 64, 87], "evalu": [1, 3, 4, 5, 6, 8, 9, 10, 15, 16, 18, 20, 26, 28, 30, 31, 33, 35, 38, 41, 42, 43, 53, 54, 56, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 84, 85, 86, 87, 88, 89, 90, 91], "singl": [1, 4, 5, 6, 9, 10, 12, 14, 15, 16, 20, 21, 30, 33, 36, 42, 43, 44, 46, 53, 55, 56, 57, 58, 59, 65, 66, 68, 69, 71, 73, 75, 78, 79, 80, 81, 83, 89], "belong": [1, 5, 6, 9, 16, 78], "interv": [1, 4, 6, 7, 9, 30, 33, 56, 59, 73, 74, 75, 78, 80, 82], "between": [1, 3, 4, 6, 7, 9, 12, 13, 16, 25, 30, 32, 33, 36, 38, 40, 42, 43, 44, 45, 46, 48, 59, 67, 68, 73, 78, 80, 81, 82, 83, 89], "t1": [1, 6, 9, 78], "t2": [1, 6, 9], "slightli": [1, 6, 9, 30, 35, 68, 73, 83], "parametris": [1, 6, 9], "compar": [1, 6, 9, 12, 13, 14, 16, 66, 69, 74, 75, 78, 79, 82, 86], "case": [1, 4, 6, 9, 15, 16, 19, 20, 25, 29, 30, 36, 44, 46, 48, 49, 64, 65, 66, 69, 70, 71, 73, 74, 75, 76, 81, 82, 84, 85, 87, 89], "cost": [1, 3, 6, 9, 35, 46, 49, 86, 87], "grow": [1, 6, 9, 12, 13], "cubic": [1, 6, 9, 35, 38, 41, 70, 73], "requir": [1, 3, 4, 5, 6, 9, 10, 15, 16, 17, 20, 27, 29, 30, 31, 32, 33, 35, 36, 42, 43, 44, 46, 48, 49, 50, 62, 70, 71, 72, 73, 74, 75, 78, 82, 83, 85, 87, 89, 90, 91], "conditional_predict_f": [1, 5, 6, 9, 30, 33, 42, 43], "ad": [1, 3, 6, 9, 16, 21, 29, 30, 70, 71, 72, 73, 77, 79, 80, 81, 82], "doc": [1, 5, 6, 9], "ha": [1, 2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 53, 54, 56, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87], "__call__": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 30, 31, 35, 38, 41, 42, 43, 46, 49, 54, 68, 74, 79, 81, 82, 85], "bayesianactivelearningbydisagr": [1, 6, 9, 67], "By": [1, 5, 6, 9, 10, 16, 29, 30, 37, 38, 46, 48, 75, 87, 90], "disagr": [1, 6, 9, 67], "hhgl11": [1, 6, 9, 64, 67], "avoid": [1, 3, 4, 5, 6, 7, 9, 10, 16, 30, 35, 36, 38, 41, 46, 47, 48, 49, 68, 69, 71, 74, 76, 79, 81, 83, 91], "numer": [1, 3, 5, 6, 7, 9, 16, 59, 64, 72, 80, 83], "caus": [1, 6, 9, 78, 85], "log": [1, 3, 4, 5, 6, 7, 9, 20, 25, 27, 30, 32, 33, 38, 40, 42, 43, 46, 47, 48, 50, 52, 68, 69, 70, 72, 73, 74, 75, 81, 84, 85, 86, 87], "oper": [1, 6, 8, 9, 59, 61, 62, 83], "zero": [1, 6, 9, 12, 13, 53, 56, 69, 72, 73, 75, 76, 80, 82, 86], "bayesian_active_learning_by_disagr": [1, 6, 9], "repres": [1, 2, 3, 4, 5, 6, 7, 9, 10, 15, 19, 21, 30, 35, 38, 41, 42, 43, 46, 49, 54, 59, 61, 62, 64, 71, 73, 77, 78, 79, 81], "rather": [1, 2, 3, 4, 6, 7, 9, 10, 18, 20, 30, 33, 35, 36, 38, 40, 42, 43, 46, 48, 65, 66, 68, 71, 73, 78, 83, 84, 85], "standalon": [1, 2, 3, 4, 6, 7, 9, 10, 42, 43], "make": [1, 2, 3, 4, 6, 7, 9, 10, 15, 16, 30, 32, 33, 42, 43, 46, 47, 48, 51, 56, 65, 66, 69, 70, 71, 72, 73, 74, 78, 79, 81, 82, 83, 84, 85, 86, 89, 91], "easier": [1, 2, 3, 4, 6, 7, 9, 10, 42, 43, 74], "have": [1, 2, 3, 4, 5, 6, 7, 9, 10, 15, 16, 20, 21, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 43, 44, 46, 47, 48, 49, 53, 56, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91], "retrac": [1, 2, 3, 4, 5, 6, 7, 9, 10, 30, 31, 35, 38, 41, 42, 43, 46, 49, 68, 74, 76, 79, 81], "everi": [1, 3, 4, 5, 6, 7, 9, 10, 20, 35, 38, 41, 46, 49, 68, 73, 87, 88, 89], "inform": [1, 3, 5, 6, 9, 21, 29, 30, 32, 33, 38, 40, 42, 43, 46, 47, 48, 64, 67, 69, 72, 73, 78, 82, 89, 90], "gain": [1, 3, 6, 9, 67, 82], "entropi": [1, 5, 6, 9, 27, 64, 73], "acquisiton": [1, 4, 6, 9], "mathrm": [1, 4, 6, 9, 65], "h": [1, 6, 9, 64, 67, 84], "left": [1, 4, 6, 9, 29, 30, 37, 38, 44, 45, 46, 67, 70, 73, 75, 78, 79, 80, 82], "phi": [1, 4, 5, 6, 8, 9, 30, 35], "frac": [1, 4, 5, 6, 9, 17, 78, 82], "mu_": [1, 6, 9, 46, 48], "boldsymbol": [1, 6, 9, 67], "mathcal": [1, 4, 6, 9, 17, 30, 35, 46, 48, 59, 67], "d": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 25, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 53, 54, 56, 59, 64, 67, 71, 86], "sqrt": [1, 4, 5, 6, 9, 36, 53, 54, 61, 62, 72, 73, 77, 78, 82, 84, 86], "sigma_": [1, 6, 9, 30, 32, 33, 36, 46, 48], "right": [1, 4, 6, 9, 67, 73, 75, 77, 78, 79, 80], "exp": [1, 4, 6, 9], "p": [1, 4, 6, 9, 11, 12, 16, 30, 33, 38, 41, 42, 43, 46, 48, 64, 67, 68, 69, 70, 72, 76, 78, 81, 84, 86, 87], "intend": [1, 6, 9, 16, 23, 61, 62], "binari": [1, 6, 9, 16, 29, 30, 33, 64, 80, 91], "gaussian": [1, 4, 6, 8, 9, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 49, 56, 64, 66, 67, 70, 72, 73, 75, 76, 78, 79, 80, 81, 83, 86, 87, 88, 89, 91], "process": [1, 4, 6, 9, 15, 16, 20, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 46, 48, 51, 56, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91], "classif": [1, 6, 9, 29, 30, 33, 64, 77, 91], "bernoulli": [1, 6, 9, 29, 30, 67, 77], "likelihood": [1, 6, 9, 29, 30, 32, 33, 37, 38, 39, 46, 48, 50, 52, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 81, 83, 86, 88, 89], "design": [1, 6, 9, 16, 19, 29, 30, 31, 35, 37, 38, 53, 57, 64, 66, 69, 75, 78, 80, 81, 83, 87], "vgp": [1, 6, 9, 29, 30, 33, 36, 77, 83], "approxim": [1, 2, 3, 4, 6, 8, 9, 12, 14, 16, 17, 30, 31, 33, 35, 36, 38, 40, 41, 42, 43, 46, 48, 49, 64, 70, 72, 73, 76, 81, 87, 89], "svgp": [1, 6, 9, 29, 30, 33, 36, 67, 87], "instanc": [1, 4, 5, 6, 7, 9, 16, 19, 20, 28, 30, 35, 36, 38, 39, 41, 44, 46, 47, 48, 49, 50, 51, 59, 61, 62, 68, 75, 79, 89], "support": [1, 3, 4, 5, 6, 7, 9, 10, 15, 16, 19, 29, 30, 32, 33, 35, 37, 38, 40, 41, 42, 43, 45, 46, 48, 59, 65, 70, 71, 73, 74, 75, 79, 82, 87, 89], "nuisanc": [1, 6, 9], "6": [1, 6, 9, 21, 25, 53, 56, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "paper": [1, 4, 6, 7, 9, 64, 83, 86, 87], "continu": [2, 3, 5, 6, 7, 9, 10, 15, 16, 19, 20, 29, 30, 35, 46, 48, 53, 56, 59, 67, 68, 69, 71, 75, 78, 79, 80, 87, 88, 89], "thompson": [2, 3, 6, 9, 16, 17, 30, 33, 64, 68, 71, 73, 74, 91], "greedycontinuousthompsonsampl": [2, 6, 9, 87], "select_output": [2, 6, 9, 16, 17], "select_nth_output": [2, 6, 9, 16, 17, 18], "singlemodelgreedyacquisitionbuild": [2, 3, 5, 6, 9, 10, 16, 71], "hastrajectorysampl": [2, 3, 6, 9, 17, 30, 33, 38, 40, 43, 46, 48], "perform": [2, 3, 5, 6, 7, 9, 15, 16, 19, 20, 25, 29, 30, 33, 36, 37, 38, 40, 46, 48, 49, 51, 53, 54, 64, 66, 68, 69, 70, 72, 73, 74, 75, 76, 78, 81, 86, 87, 89, 91], "greedi": [2, 3, 5, 6, 7, 9, 10, 16, 18, 31, 64, 69, 70, 81, 91], "get_trajectori": [2, 6, 9, 35, 38, 41, 42, 43, 46, 49], "manner": [2, 3, 6, 9, 15, 70], "next": [2, 6, 9, 16, 19, 20, 42, 43, 44, 46, 68, 69, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 89], "recommend": [2, 3, 5, 6, 9, 15, 16, 17, 56, 64, 68, 70, 76, 86], "actual": [2, 3, 6, 9, 16, 18, 78, 81, 89], "trajectori": [2, 3, 6, 9, 16, 17, 18, 30, 33, 35, 38, 40, 41, 42, 43, 46, 47, 48, 49, 68, 70], "our": [2, 4, 5, 6, 7, 9, 10, 15, 16, 18, 30, 31, 33, 35, 36, 42, 43, 62, 66, 67, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "optim": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 16, 18, 19, 20, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 58, 59, 64, 65, 66, 67, 71, 78, 82, 84], "all": [2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 30, 31, 32, 33, 35, 36, 37, 38, 42, 43, 44, 46, 47, 50, 51, 52, 56, 58, 59, 61, 62, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90], "extract": [2, 6, 9, 12, 13, 20, 21, 30, 33, 42, 43, 45, 46, 50, 52, 62, 68, 78, 82, 85], "minimis": [2, 3, 4, 6, 7, 9, 17, 84, 88], "about": [2, 3, 6, 9, 16, 19, 67, 68, 73], "hernandezlrpkag17": [2, 6, 9, 64], "wbt": [2, 6, 9, 30, 35, 38, 41, 64], "20": [2, 6, 9, 15, 26, 30, 35, 38, 41, 64, 69, 72, 73, 74, 77, 79, 81, 82], "desir": [2, 6, 9, 16, 17, 18, 19, 29, 30, 31, 33, 35, 42, 43, 85], "sampler": [2, 3, 4, 6, 7, 9, 15, 16, 18, 27, 30, 32, 33, 38, 40, 42, 43, 46, 47, 48, 59, 68, 71, 79], "shape": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 54, 56, 58, 59, 61, 62, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83], "b": [2, 3, 4, 5, 6, 8, 9, 10, 15, 16, 17, 18, 30, 32, 33, 35, 36, 38, 41, 42, 43, 46, 49, 59, 61, 62, 64, 76, 79, 80, 83, 84], "dimens": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 21, 26, 29, 30, 32, 33, 35, 36, 37, 38, 41, 42, 43, 46, 47, 49, 50, 53, 56, 57, 59, 61, 62, 64, 70, 71, 72, 80, 82, 83, 85, 86], "func": [2, 6, 9, 16, 17, 85], "util": [2, 4, 5, 6, 9, 10, 12, 16, 17, 20, 21, 27, 28, 42, 46, 53, 58, 59, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90], "pending_point": [2, 3, 5, 6, 7, 9, 10, 16], "trajectoryfunct": [2, 6, 9, 30, 35, 38, 41, 42, 43, 46, 49], "alreadi": [2, 3, 5, 6, 7, 9, 10, 12, 13, 16, 18, 19, 20, 71, 84, 87], "negat": [2, 6, 9, 83], "new_optimization_step": [2, 3, 5, 6, 7, 9, 10], "bool": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 16, 17, 19, 20, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 40, 43, 44, 45, 46, 48, 49, 51, 59, 61, 62], "true": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 16, 17, 18, 19, 20, 25, 26, 29, 30, 31, 33, 35, 36, 37, 38, 40, 44, 45, 46, 48, 49, 51, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "indic": [2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 16, 18, 19, 30, 33, 46, 49, 50, 59, 77, 78, 80, 84], "whether": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 17, 19, 21, 25, 28, 30, 35, 42, 43, 46, 48, 49, 51, 59, 61, 62, 73, 89], "start": [2, 3, 5, 6, 7, 9, 10, 15, 16, 20, 28, 30, 33, 44, 46, 68, 69, 70, 71, 73, 74, 75, 78, 79, 81, 82, 83, 87, 90], "step": [2, 3, 5, 6, 7, 9, 10, 15, 16, 19, 20, 25, 28, 30, 31, 32, 33, 35, 38, 40, 42, 43, 46, 47, 48, 66, 68, 70, 71, 72, 73, 74, 76, 77, 78, 80, 83, 85, 87, 88, 89, 90], "parallelcontinuousthompsonsampl": [2, 6, 9, 80, 87, 89], "singlemodelvectorizedacquisitionbuild": [2, 4, 6, 9, 10], "parallel": [2, 4, 6, 9, 15, 16, 18, 64, 66, 78, 87, 89], "broadli": [2, 6, 9], "behavior": [2, 3, 6, 9, 30, 33, 42, 43, 83, 89], "howev": [2, 5, 6, 7, 9, 10, 15, 19, 30, 33, 35, 42, 43, 46, 48, 53, 56, 69, 70, 71, 72, 73, 75, 76, 78, 83, 85, 89], "consequ": [2, 6, 9], "choos": [2, 4, 6, 9, 16, 30, 31, 46, 49, 66, 70, 72, 73, 74, 75, 78, 80, 81, 83, 84, 86, 87], "faster": [2, 4, 6, 9, 30, 33, 69, 73, 87], "much": [2, 6, 9, 30, 35, 73, 74, 78, 83, 84, 87, 88, 89], "memori": [2, 6, 9, 15, 16, 18, 20, 75, 87], "usag": [2, 6, 9, 12, 14, 15, 18, 46, 47, 57, 82, 83, 87, 89], "conveni": [2, 3, 6, 9, 10, 16, 20, 30, 32, 42, 43, 46, 47, 53, 54, 55, 56, 57, 66, 68, 70, 71, 73, 76, 77, 78, 79, 80, 85, 87, 88, 90], "wai": [2, 5, 6, 9, 59, 68, 70, 75, 76, 80, 83, 84, 88, 89, 90], "control": [2, 5, 6, 9, 15, 19, 27, 68, 70, 71, 72, 83, 87, 89, 90, 91], "total": [2, 6, 9, 15, 20, 25, 26, 59, 83, 84, 89], "split_acquisition_function_cal": [2, 6, 9, 18, 85, 87], "wrapper": [2, 6, 9, 15, 16, 18, 25, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 59, 62, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 87, 88, 90], "_dummytrajectoryfunctionclass": 2, "trajectoryfunctionclass": [2, 30, 35, 38, 41, 42, 43, 46, 49], "resampl": [2, 30, 35, 38, 41, 42, 43, 46, 49, 50], "without": [2, 4, 6, 9, 11, 12, 21, 30, 31, 33, 35, 36, 38, 41, 42, 43, 46, 49, 50, 62, 65, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "negate_trajectory_funct": 2, "function_typ": 2, "select": [2, 9, 10, 12, 13, 16, 18, 27, 29, 30, 64, 71, 75, 84, 90], "form": [2, 5, 6, 9, 16, 30, 33, 35, 53, 56, 59, 65, 83], "minim": [2, 3, 6, 9, 15, 16, 17, 20, 30, 31, 33, 51, 53, 55, 56, 65, 70, 73, 75, 76, 80, 83, 84, 87, 90], "mai": [2, 9, 10, 12, 13, 16, 20, 23, 30, 33, 42, 43, 59, 66, 68, 70, 71, 72, 74, 75, 78, 81, 83, 85, 86, 90], "g": [2, 4, 5, 6, 9, 16, 17, 18, 20, 30, 33, 35, 38, 40, 54, 59, 64, 68, 71, 73, 74, 76, 78, 82, 85, 87], "wish": [2, 20, 38, 41, 59, 68, 71, 74, 90], "minvalueentropysearch": [3, 5, 6, 9], "search_spac": [3, 4, 5, 6, 9, 16, 19, 20, 24, 29, 30, 31, 37, 38, 53, 56, 59, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "searchspac": [3, 4, 5, 6, 9, 15, 16, 19, 20, 24, 29, 30, 31, 37, 38, 59, 81], "num_sampl": [3, 5, 6, 9, 15, 26, 30, 32, 33, 35, 38, 39, 40, 42, 43, 46, 47, 48, 50, 59, 69, 70, 71, 73, 74], "5": [3, 4, 6, 7, 9, 16, 21, 28, 45, 46, 50, 53, 56, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "grid_siz": [3, 6, 9, 70, 73, 74], "1000": [3, 6, 9, 15, 16, 30, 33, 35, 38, 40, 41, 70, 73, 74, 78, 83, 84, 85, 88], "min_value_sampl": [3, 6, 9], "thompsonsampl": [3, 6, 9, 16, 17], "modifi": [3, 6, 7, 9, 16, 19, 30, 33, 45, 46, 61, 62, 72, 73, 78, 80, 83], "minimum": [3, 4, 6, 7, 9, 12, 13, 15, 16, 17, 20, 53, 55, 56, 65, 68, 69, 70, 72, 73, 74, 75, 77, 78, 84, 86, 87], "wj17": [3, 6, 9, 17, 64], "y": [3, 4, 6, 9, 17, 25, 26, 30, 33, 35, 46, 48, 59, 67, 73, 74, 75, 77, 78, 79, 80, 81, 86, 88], "across": [3, 6, 9, 12, 13, 14, 15, 16, 17, 30, 31, 35, 38, 40, 42, 43, 46, 48, 57, 59, 81, 87, 89], "locat": [3, 5, 6, 7, 9, 15, 16, 17, 30, 33, 36, 37, 38, 41, 43, 70, 73, 76, 77, 80, 84], "via": [3, 4, 6, 9, 10, 16, 17, 19, 20, 64, 67, 71, 76, 84, 91], "gumbel": [3, 6, 9, 17], "exact": [3, 6, 9, 12, 14, 16, 17, 30, 33, 35, 38, 41], "random": [3, 5, 6, 9, 15, 16, 29, 30, 31, 33, 35, 36, 38, 40, 41, 46, 48, 49, 53, 54, 59, 64, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "fourier": [3, 6, 9, 16, 30, 33, 35, 38, 40, 41], "featur": [3, 6, 9, 16, 30, 33, 35, 38, 40, 41, 42, 43, 56, 65, 71, 73], "being": [3, 4, 5, 6, 9, 15, 18, 20, 30, 32, 33, 35, 36, 46, 49, 69, 78, 82, 86, 89], "cheapest": [3, 6, 9, 70], "optimis": [3, 4, 5, 6, 9, 16, 30, 33, 56, 64, 67, 69, 72, 73, 78, 79, 81], "draw": [3, 6, 9, 25, 30, 33, 35, 38, 41, 42, 43, 46, 49, 66, 80], "grid": [3, 6, 9, 25, 26, 76], "min": [3, 6, 9, 16, 25, 26, 46, 48, 72, 81], "scale": [3, 4, 5, 6, 9, 16, 17, 29, 30, 35, 38, 41, 43, 64, 66, 69, 70, 72, 73, 75, 84, 86, 87], "tf": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 21, 25, 28, 30, 31, 35, 44, 46, 50, 51, 52, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "empti": [3, 4, 5, 6, 7, 9, 12, 13, 14, 19, 20, 30, 31, 35, 44, 46, 50, 69], "min_value_entropy_search": [3, 6, 9], "adapt": [3, 6, 9, 29, 30, 64, 73, 81], "chang": [3, 6, 9, 15, 16, 19, 23, 29, 30, 31, 32, 33, 35, 42, 43, 73, 76, 81], "were": [3, 6, 9, 16, 19, 69, 73, 76, 83], "rank": [3, 5, 6, 9, 21, 30, 32, 33, 36], "less": [3, 6, 9, 12, 13, 16, 21, 30, 33, 38, 40, 46, 48, 59, 66, 83], "supportscovarianceobservationnois": [3, 6, 9], "gpflow": [3, 5, 25, 27, 38, 39, 42, 43, 52, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "supportscovariancebetweenpoint": [3, 30, 32, 33], "supportsgetobservationnois": [3, 4, 5, 6, 9, 30, 32, 35, 38, 39, 43, 71], "typing_extens": [3, 5, 24, 32, 35, 42, 43, 46, 47, 54, 58, 59, 61, 62, 71], "protocol": [3, 5, 24, 32, 35, 42, 43, 46, 47, 54, 59, 71], "covariance_between_point": [3, 6, 9, 30, 32, 33], "get_observation_nois": [3, 5, 30, 32, 35, 38, 39, 43, 71], "supportscovarianceobservationnoisetrajectori": 3, "also": [3, 4, 6, 7, 9, 10, 15, 16, 20, 25, 29, 30, 32, 33, 36, 38, 40, 42, 43, 46, 48, 51, 52, 53, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91], "associ": [3, 9, 16, 43, 89], "gibbonmodeltyp": [3, 6, 9], "variabl": [3, 5, 6, 9, 10, 16, 19, 20, 30, 31, 32, 33, 35, 36, 42, 43, 45, 46, 49, 50, 52, 59, 60, 61, 62, 64, 69, 71, 80, 82], "bound": [3, 4, 6, 7, 9, 12, 13, 14, 15, 16, 19, 20, 25, 26, 42, 43, 53, 56, 59, 62, 71, 73, 86, 87, 88, 89], "gibbon": [3, 6, 9, 64, 69, 70, 73], "rescaled_repuls": [3, 6, 9], "purpos": [3, 6, 9, 28, 64], "mlgr21": [3, 6, 9, 64, 70], "computation": [3, 6, 9, 12, 14, 70], "cheap": [3, 6, 9, 38, 41, 82], "candid": [3, 4, 5, 6, 7, 9, 10, 15, 16, 17, 31], "built": [3, 6, 9, 15, 16, 19, 30, 33, 35, 44, 46, 48, 65, 66, 72, 74, 79, 91], "downweight": [3, 6, 9], "repuls": [3, 6, 9], "term": [3, 6, 9, 84], "improv": [3, 4, 5, 6, 7, 8, 9, 16, 31, 46, 48, 64, 69, 70, 72, 73, 75, 76, 77, 79, 81, 83, 84, 86], "popul": [3, 4, 5, 6, 7, 9, 16, 21, 30, 31, 59, 84], "penal": [3, 4, 5, 6, 7, 9, 10, 64, 69, 70, 83], "respect": [3, 4, 5, 6, 7, 9, 15, 31, 36, 42, 43, 46, 48, 59, 69, 73, 76, 79, 81, 88, 89], "chosen": [3, 4, 5, 6, 7, 9, 10, 17, 25, 26, 36, 46, 48, 49, 62, 70, 71, 73, 81, 83], "pend": [3, 5, 6, 7, 9, 10, 16, 69, 70, 71], "gibbonacquisit": 3, "quality_term": 3, "diversity_term": 3, "penalizationfunct": [3, 5, 6, 9, 10], "qualiti": [3, 6, 9, 16, 31, 87], "divers": [3, 5, 6, 9, 12, 13, 30, 31, 46, 47, 48, 49, 59, 64, 70, 73, 84], "gibbon_quality_term": [3, 6, 9], "measur": [3, 4, 6, 9, 19, 25, 31, 46, 48, 53, 54, 68], "amount": [3, 4, 6, 9, 15, 37, 38, 67, 69, 73, 83, 87], "individu": [3, 5, 6, 9, 15, 16, 21, 29, 30, 42, 43, 44, 45, 46, 47, 48, 50, 59, 66, 81, 82, 87], "ensur": [3, 6, 9, 30, 31, 32, 33, 35, 36, 42, 43, 80, 83, 84, 86, 90, 91], "promis": [3, 6, 9, 30, 31, 70], "area": [3, 4, 6, 9, 30, 31, 66, 67, 70, 73, 77, 78, 83, 86], "gaussianprocessregress": [3, 6, 9, 29, 30, 33, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90], "doe": [3, 4, 5, 6, 9, 15, 16, 20, 21, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 46, 48, 57, 59, 61, 62, 68, 73, 74, 80, 84, 88], "homoscedast": [3, 4, 6, 9, 30, 32, 38, 39], "nois": [3, 4, 5, 6, 7, 9, 16, 29, 30, 32, 33, 35, 37, 38, 39, 42, 43, 66, 69, 70, 71, 73, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 89], "attributeerror": [3, 6, 9], "doesn": [3, 6, 9, 20, 51, 59, 62], "gibbon_repulsion_term": [3, 6, 9], "updatablepenalizationfunct": [3, 5, 6, 9, 10], "encourag": [3, 6, 9], "within": [3, 6, 8, 9, 16, 18, 42, 43, 68, 77, 78, 80, 89], "achiev": [3, 6, 9, 30, 33, 35, 72, 73, 87, 88, 89], "low": [3, 6, 9, 82, 84, 86, 87], "correl": [3, 6, 9, 30, 33, 44, 45, 46], "v": [3, 6, 9, 15, 16, 18, 36, 59, 61, 62, 64, 68, 84], "math": [3, 4, 5, 6, 9, 17, 61, 62, 68, 71, 72, 73, 75, 81, 82, 83, 86, 90], "tensor": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 18, 20, 21, 25, 30, 32, 33, 35, 36, 43, 44, 45, 46, 48, 50, 58, 59, 60, 61, 62, 68, 71, 74, 75, 76, 79, 81], "effici": [3, 4, 6, 7, 9, 12, 14, 15, 16, 20, 30, 35, 38, 41, 42, 43, 46, 49, 64, 69, 71, 75, 76, 78, 80], "formula": [3, 6, 9, 30, 33, 64], "block": [3, 6, 9, 28, 69], "matric": [3, 6, 9, 30, 33], "pure": [3, 6, 9, 70], "As": [3, 6, 7, 9, 10, 16, 30, 33, 35, 42, 43, 67, 69, 72, 73, 74, 76, 77, 78, 81, 82, 83, 86, 87, 89], "ever": [3, 6, 9], "full": [3, 5, 6, 9, 16, 28, 66, 71, 86, 89], "modest": [3, 6, 9], "save": [3, 4, 6, 9, 19, 20, 44, 46, 52, 68, 69, 73, 83], "bo": [3, 4, 6, 7, 9, 16, 20, 25, 26, 30, 31, 35, 38, 40, 46, 48, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "sometim": [3, 4, 5, 6, 9, 10, 16, 66, 70, 75, 79, 80, 85], "becom": [3, 6, 7, 9, 72, 78], "domin": [3, 6, 7, 9, 12, 13, 14, 16, 27, 81, 84], "therefor": [3, 4, 6, 9, 16, 20, 30, 33, 68, 69, 83, 86], "divid": [3, 6, 9, 12, 14], "deactiv": [3, 6, 9], "fals": [3, 6, 9, 12, 13, 16, 17, 18, 19, 20, 25, 29, 30, 31, 33, 35, 44, 45, 46, 48, 49, 51, 59, 61, 62, 68, 69, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 87, 88], "lipschitz_const": [3, 5, 6, 9, 10], "eta": [3, 4, 5, 6, 9, 10, 79], "supportscovariancewithtopfidelitypredicti": 3, "supportscovariancewithtopfidel": [3, 30, 33, 42, 43], "supportspredicti": [3, 5, 30, 32, 33, 38, 39, 43, 71], "multifidel": [3, 21, 29, 30, 33, 42, 43, 91], "predict_i": [3, 5, 25, 30, 32, 33, 38, 39, 43, 71, 77], "mumbomodeltyp": 3, "mumbo": [3, 64], "multi": [3, 4, 6, 7, 9, 12, 13, 14, 15, 16, 21, 25, 30, 33, 36, 38, 41, 42, 43, 45, 46, 53, 54, 55, 57, 64, 71, 82, 84, 91], "task": [3, 64, 78, 83, 84], "fidel": [3, 21, 29, 30, 33, 42, 43, 53, 55, 64], "level": [3, 4, 6, 9, 20, 30, 33, 76, 82], "mlr21": [3, 64], "get_min_value_samples_on_top_fidel": 3, "To": [3, 9, 15, 16, 26, 42, 43, 52, 61, 62, 65, 66, 69, 70, 71, 74, 78, 79, 81, 83, 84, 85, 90, 91], "speed": [3, 30, 33, 46, 49, 72, 83], "up": [3, 9, 15, 16, 18, 20, 29, 30, 33, 36, 46, 48, 49, 59, 68, 69, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 86, 91], "trick": [3, 4, 6, 9, 30, 35, 38, 41, 42, 43, 46, 49, 70, 79], "moment": [3, 30, 33, 69, 72], "match": [3, 9, 17, 19, 20, 31, 38, 41, 73, 78, 80, 86, 89], "costweight": 3, "fidelity_cost": 3, "list": [3, 9, 15, 16, 20, 21, 25, 26, 29, 30, 33, 38, 40, 41, 44, 46, 48, 51, 53, 56, 59, 62, 71, 73, 76, 80, 89], "compon": [3, 9, 10, 15, 16, 59, 80], "composit": [3, 9, 10], "pair": [3, 9, 10, 16, 19], "reciproc": 3, "assum": [3, 4, 6, 7, 9, 10, 16, 19, 20, 38, 39, 42, 43, 46, 48, 59, 73, 82, 84, 86], "final": [3, 20, 21, 29, 30, 33, 38, 40, 42, 43, 44, 46, 48, 49, 50, 58, 61, 62, 66, 67, 69, 70, 73, 75, 76, 78, 79, 80, 81, 83, 85, 89], "primari": [3, 30, 38, 42, 46], "Not": [3, 23], "correspond": [3, 5, 6, 7, 9, 10, 16, 21, 25, 26, 30, 31, 33, 35, 42, 43, 58, 59, 66, 77, 81], "noth": [3, 61, 62, 83], "do": [3, 6, 7, 9, 10, 16, 18, 19, 20, 29, 30, 33, 35, 43, 46, 48, 49, 58, 59, 60, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 83, 85, 86, 90, 91], "previou": [3, 9, 16, 20, 30, 31, 33, 35, 38, 39, 75, 79, 80, 81, 82, 85, 90], "probabilityofimprov": [4, 6], "best": [4, 5, 6, 7, 9, 15, 16, 25, 26, 30, 33, 67, 70, 71, 72, 73, 74, 75, 76, 80, 83, 84, 85, 86, 87], "taken": [4, 6, 9, 29, 30, 37, 38, 45, 46, 48, 53, 56, 59, 62, 83], "expectedimprov": [4, 5, 6, 9, 16, 68, 70, 73, 76, 77], "In": [4, 6, 8, 9, 15, 16, 20, 29, 30, 35, 38, 41, 44, 46, 48, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "presenc": [4, 6, 9, 76], "constraint": [4, 6, 7, 9, 15, 24, 25, 26, 30, 31, 33, 36, 53, 56, 58, 59, 64, 65, 71, 91], "instead": [4, 6, 9, 10, 15, 16, 20, 30, 32, 33, 35, 42, 43, 44, 46, 47, 48, 59, 60, 68, 70, 71, 73, 74, 75, 76, 78, 79, 81, 84, 85, 86, 88], "maximum": [4, 6, 9, 15, 16, 18, 29, 30, 37, 46, 50, 59, 70, 73, 75, 78, 79, 84], "explicit": [4, 6, 9, 59, 80, 85, 91], "expected_improv": [4, 6, 9, 68, 70], "ei": [4, 6, 9, 68, 70, 76, 77, 85, 88, 89], "move": [4, 6, 9, 66], "mapsto": [4, 6, 9, 30, 35], "wa": [4, 6, 9, 16, 18, 20, 21, 72, 73, 74, 75, 76, 81, 82, 83, 85, 89], "introduc": [4, 6, 9, 12, 14, 16, 73, 78], "mocku": [4, 6, 9], "et": [4, 6, 9, 16, 84], "al": [4, 6, 9, 16, 64, 84], "1975": [4, 6, 9], "jsw98": [4, 6, 9, 64], "augmentedexpectedimprov": [4, 6, 9, 83], "augment": [4, 6, 9, 83, 86], "augmented_expected_improv": [4, 6, 9], "aei": [4, 6, 9], "under": [4, 6, 9, 30, 33, 84], "contrast": [4, 6, 9, 20, 30, 35, 69, 70, 82], "addit": [4, 5, 6, 7, 9, 15, 20, 30, 32, 33, 38, 40, 41, 42, 43, 46, 47, 48, 61, 62, 71, 73, 75, 76, 78, 91], "multipl": [4, 5, 6, 7, 9, 10, 15, 16, 30, 33, 35, 37, 38, 41, 42, 43, 44, 45, 46, 52, 59, 69, 71, 79, 80, 83, 89], "factor": [4, 6, 9, 12, 13, 16, 25, 26, 29, 30, 35, 37, 38], "made": [4, 6, 9, 15, 30, 33, 43, 46, 47, 59, 64, 71, 73, 87], "veri": [4, 6, 9, 30, 33, 35, 38, 40, 46, 48, 49, 68, 70, 71, 72, 73, 78, 80, 82, 83, 84, 87, 89], "small": [4, 6, 9, 10, 45, 46, 66, 67, 69, 70, 73, 74, 76, 77, 78, 79, 81, 88, 89], "thu": [4, 6, 9, 10, 16, 30, 35, 81, 83], "noisi": [4, 6, 9, 64, 87], "get": [4, 6, 9, 14, 16, 18, 20, 21, 28, 29, 30, 31, 33, 42, 43, 59, 69, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85], "trap": [4, 6, 9], "repeatedli": [4, 6, 9, 68, 74, 76, 79, 81], "tau": [4, 6, 9], "huang": [4, 6, 9, 64], "2006": [4, 6, 9, 64, 87], "hanz06": [4, 6, 9, 64, 83], "negativelowerconfidencebound": [4, 6, 9, 73], "beta": [4, 6, 9, 16], "96": [4, 6, 9, 82, 83], "lower": [4, 6, 7, 9, 12, 13, 14, 15, 25, 26, 30, 33, 38, 39, 59, 66, 67, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 88, 89], "confid": [4, 6, 9, 73, 74, 75, 78, 82], "typic": [4, 6, 9, 10, 16, 30, 33, 35, 38, 40, 46, 48, 50, 51, 53, 54, 56, 58, 61, 62, 71, 73, 74, 78, 89], "suitabl": [4, 6, 9, 10, 15, 16, 21, 69, 71, 74, 78, 80, 86], "contribut": [4, 6, 9, 30, 32, 33, 42, 43, 65, 89], "negativepredictivemean": [4, 6, 9], "lower_confidence_bound": [4, 6, 9], "lcb": [4, 6, 9], "var": [4, 5, 6, 9, 30, 33, 66, 80, 82, 85, 89], "sksk10": [4, 6, 9, 64], "give": [4, 6, 9, 16, 30, 35, 59, 73, 83, 84, 85], "probabilityoffeas": [4, 6, 9, 79, 81], "probability_below_threshold": [4, 6, 9, 79, 81], "gkz": [4, 6, 9, 64, 79], "14": [4, 6, 9, 15, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "int_": [4, 6, 9], "infti": [4, 6, 9], "mathbf": [4, 6, 9, 46, 48, 67], "qquad": [4, 6, 9, 65], "below": [4, 6, 9, 10, 12, 14, 16, 29, 30, 69, 72, 73, 75, 78, 80, 81, 82, 86], "consid": [4, 6, 7, 9, 15, 16, 18, 21, 30, 31, 35, 70, 76, 78, 81, 82, 84, 89], "swj98": [4, 6, 9, 64], "bring": [4, 6, 9], "togeth": [4, 6, 9, 10, 18, 51, 59, 71, 85], "cacul": [4, 6, 9], "param": [4, 6, 9, 18, 26, 28, 31, 38, 40, 56], "fastconstraintsfeas": [4, 6, 9, 76], "smoothing_funct": [4, 6, 9], "residu": [4, 6, 9, 30, 33, 43, 59, 76], "smooth": [4, 6, 9, 30, 33, 35, 38, 40, 76], "cdf": [4, 6, 8, 9, 17, 78], "normal": [4, 6, 7, 9, 10, 30, 32, 33, 35, 45, 46, 64, 72, 73, 76, 78, 80, 82, 83, 85, 86, 87], "1e": [4, 6, 8, 9, 12, 13, 18, 29, 30, 36, 37, 59, 61, 62, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89], "3": [4, 5, 6, 9, 15, 16, 17, 18, 21, 25, 30, 33, 35, 46, 50, 53, 56, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "notimplementederror": [4, 5, 6, 9, 30, 31, 32, 33, 35, 38, 39, 43, 46, 49, 59, 71], "fast_constraints_feas": [4, 6, 9, 76], "expectedconstrainedimprov": [4, 6, 7, 9, 76, 79], "objective_tag": [4, 6, 7, 9, 20], "constraint_build": [4, 6, 7, 9], "min_feasibility_prob": [4, 6, 7, 9], "constrain": [4, 6, 7, 9, 24, 30, 33, 36, 64, 65, 77], "satisfi": [4, 6, 9, 58, 59, 79], "simpli": [4, 5, 6, 9, 20, 42, 43, 46, 48, 71, 78, 82, 85, 86, 91], "unit": [4, 6, 9, 29, 30, 44, 45, 46, 53, 54, 56, 72, 75], "keyerror": [4, 6, 9], "found": [4, 6, 9, 15, 16, 29, 30, 37, 38, 45, 46, 48, 62, 72, 73, 74, 75, 76, 80, 83, 86, 89, 90], "_update_expected_improvement_fn": [4, 6, 7, 9], "objective_model": [4, 6, 7, 9, 79, 81], "feasible_mean": [4, 6, 7, 9], "unconstrain": [4, 6, 7, 9, 30, 36, 76], "montecarloexpectedimprov": [4, 6, 9], "sample_s": [4, 6, 7, 8, 9, 12, 13, 17, 30, 35, 38, 41, 42, 43, 70, 79, 82, 84], "hasreparamsampl": [4, 6, 7, 9, 30, 32, 38, 40, 43, 71], "mont": [4, 6, 8, 9, 30, 33, 64, 70, 73, 78, 79], "carlo": [4, 6, 8, 9, 30, 33, 64, 70, 73, 78, 79], "analyt": [4, 6, 9], "deep": [4, 6, 9, 26, 37, 38, 39, 40, 41, 46, 47, 48, 56, 64, 65, 91], "monte_carlo_expected_improv": [4, 6, 9], "reparametr": [4, 6, 9, 30, 32, 38, 40, 43, 71, 79], "cannot": [4, 5, 6, 9, 15, 16, 21, 66, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 87, 88], "reparam_sampl": [4, 6, 9, 30, 32, 38, 40, 43, 71], "reparametrizationsampl": [4, 6, 7, 9, 30, 32, 35, 38, 40, 41, 42, 43, 71], "version": [4, 6, 7, 9, 27, 44, 65, 73, 74, 75, 83, 85], "whd18": [4, 42, 43, 64], "montecarloaugmentedexpectedimprov": [4, 6, 9], "supportsreparamsamplerobservationnois": [4, 6, 9, 43], "monte_carlo_augmented_expected_improv": [4, 6, 9], "batchmontecarloexpectedimprov": [4, 6, 9, 16, 70], "q": [4, 6, 8, 9, 36, 84, 89], "glrc10a": [4, 6, 9, 64], "independ": [4, 6, 7, 9, 15, 30, 32, 33, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 59, 71, 81], "known": [4, 6, 7, 9, 16, 20, 42, 43, 53, 56, 66], "event": [4, 5, 6, 7, 9, 30, 32, 33, 38, 39, 40, 42, 43, 46, 47, 48], "batch_monte_carlo_expected_improv": 4, "reset": [4, 6, 9, 30, 35, 42, 43, 46, 48, 83], "reparam": [4, 6, 9], "batchexpectedimprov": [4, 6, 9], "chvallier": [4, 6, 9], "ginsbourg": [4, 6, 9, 64], "cg13": [4, 6, 9, 64], "intern": [4, 6, 9, 16, 19, 46, 49, 59, 64, 68, 71, 83], "highli": [4, 6, 7, 9, 29, 30, 66, 69, 72, 74, 75], "cumul": [4, 6, 8, 9], "densiti": [4, 6, 8, 9], "multivari": [4, 6, 8, 9, 30, 33, 64], "develop": [4, 6, 9, 73], "alan": [4, 6, 9, 64], "genz": [4, 6, 8, 9, 64], "gt16": [4, 6, 8, 9, 64], "sobol": [4, 6, 8, 9, 29, 30, 31, 35, 59, 72, 73, 74, 75], "factoris": [4, 6, 8, 9], "batch_expected_improv": [4, 6, 9], "regress": [4, 6, 9, 29, 30, 35, 45, 46, 64, 72, 73, 75, 77, 79, 80, 87, 88, 89], "far": [4, 6, 9, 21, 74], "durin": [4, 6, 9], "loop": [4, 6, 9, 10, 16, 19, 20, 25, 27, 38, 41, 68, 69, 71, 77, 82, 86, 90, 91], "_compute_bm": [4, 6, 9], "tensorflow": [4, 6, 8, 9, 15, 16, 20, 21, 28, 30, 35, 36, 38, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 59, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "helper": [4, 6, 8, 9, 18, 19, 69, 78], "chevali": [4, 6, 9, 64], "_delta": [4, 6, 9], "idx": [4, 6, 8, 9, 81], "dim": [4, 6, 8, 9, 53, 56, 72], "transpos": [4, 6, 9], "dtype": [4, 6, 8, 9, 15, 16, 21, 35, 46, 47, 48, 50, 58, 59, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86], "_compute_sigma": [4, 6, 9], "last": [4, 6, 7, 9, 16, 20, 21, 38, 39, 52, 61, 62, 68, 72, 73, 74, 75, 76, 79, 80, 81, 85], "index": [4, 6, 8, 9, 14, 15, 16, 20, 21, 25, 26, 30, 33, 38, 41, 50, 62, 79], "entri": [4, 6, 9, 16, 18], "equal": [4, 6, 9, 12, 13, 14, 15, 16, 18, 31, 50, 59, 61, 62, 69, 72, 80, 89], "second": [4, 6, 8, 9, 30, 35, 46, 48, 59, 75, 79], "ax": [4, 6, 9, 25, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "lead": [4, 5, 6, 9, 10, 15, 29, 30, 32, 33, 36, 56, 61, 62, 78], "float32": [4, 6, 8, 9, 21, 46, 50, 59, 83], "float64": [4, 6, 8, 9, 15, 35, 59, 67, 69, 71, 72, 75, 77, 82, 83, 85, 86, 87], "sigma": [4, 5, 6, 9, 30, 32, 33, 35, 46, 48], "_compute_p": [4, 6, 9], "m_reshap": [4, 6, 9], "b_reshap": [4, 6, 9], "sigma_reshap": [4, 6, 9], "mvn_cdf": [4, 6, 8, 9], "bq": [4, 6, 9], "_compute_c": [4, 6, 9], "_compute_r": [4, 6, 9], "_compute_phi": [4, 6, 9], "inner": [4, 6, 9, 16], "multivariatenormalcdf": [4, 6, 8, 9], "_compute_batch_expected_improv": [4, 6, 9], "mvn_cdf_1": [4, 6, 9], "mvn_cdf_2": [4, 6, 9], "dimension": [4, 6, 9, 15, 26, 29, 30, 37, 38, 41, 53, 54, 56, 59, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 88, 89, 91], "multipleoptimismnegativelowerconfidencebound": [4, 6, 9], "simpl": [4, 6, 9, 16, 25, 29, 30, 36, 38, 40, 45, 46, 48, 64, 66, 67, 69, 70, 71, 72, 73, 76, 81, 82, 84, 86, 87], "produc": [4, 6, 9, 15, 16, 25, 30, 33, 35, 38, 41, 52, 60, 66, 75, 77, 78, 79, 86, 90], "vector": [4, 6, 9, 10, 15, 25, 26, 30, 33, 42, 43], "even": [4, 6, 9, 15, 29, 30, 42, 43, 56, 68, 69, 73, 78], "tpd20": [4, 6, 9, 64], "multiple_optimism_lower_confidence_bound": [4, 6, 9], "search_space_dim": [4, 6, 9], "molcb": [4, 6, 9], "correpond": [4, 6, 9], "li": [4, 6, 9, 53, 54, 56, 64], "gradient": [4, 6, 9, 15, 30, 33, 36, 64, 71, 80, 85, 87], "explor": [4, 6, 9, 16, 64], "exploit": [4, 6, 9, 73, 78], "trade": [4, 6, 9, 73, 84], "off": [4, 6, 9, 68, 73, 83, 84], "postiv": [4, 6, 9], "makeposit": [4, 5, 6, 9], "base_acquisition_function_build": [4, 5, 6, 7, 9], "convert": [4, 6, 9, 19, 25, 51, 59, 75, 80, 84], "transform": [4, 6, 9, 17, 25, 30, 36, 46, 48, 59, 75, 91], "non": [4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 29, 30, 32, 33, 36, 37, 38, 42, 43, 46, 47, 48, 56, 64, 69, 70, 72, 74, 75, 76, 77, 79, 81, 84], "local": [4, 5, 6, 9, 16, 18, 19, 53, 56, 62, 64, 69, 70, 74, 76, 79, 89, 90], "localpen": [5, 6, 9, 69, 70], "500": [5, 6, 9, 16, 37, 84, 89], "maker": [5, 6, 9], "greedili": [5, 6, 7, 9, 10, 30, 31, 70, 71, 81], "acquisitionfunctionmak": [5, 6, 9], "take": [5, 6, 7, 9, 10, 16, 18, 26, 30, 33, 35, 38, 41, 42, 43, 46, 49, 50, 58, 65, 67, 68, 69, 72, 73, 74, 75, 76, 78, 82, 83, 85, 86, 88, 89], "lipschitz": [5, 6, 9], "u": [5, 6, 9, 36, 61, 62, 73, 74, 76, 84], "strictli": [5, 6, 9, 30, 36, 59], "iter": [5, 6, 7, 9, 15, 28, 30, 36, 38, 40, 41, 46, 48, 51, 59, 66, 67, 69, 70, 72, 73, 75, 81], "though": [5, 6, 9, 56, 65, 69, 71, 73, 75, 78, 90], "down": [5, 6, 9, 73, 85], "stabil": [5, 6, 7, 9, 29, 30, 33, 38, 41, 72, 75], "onc": [5, 6, 9, 20, 51, 59, 68, 69, 72, 73, 75, 87, 88, 89], "prepar": [5, 6, 9, 10, 12, 14, 25, 26, 30, 35, 36, 38, 41, 46, 48, 69, 75], "These": [5, 6, 9, 10, 16, 20, 30, 33, 42, 43, 46, 47, 48, 59, 62, 68, 73, 75, 83, 84, 91], "reus": [5, 6, 9, 30, 33, 70], "subsequ": [5, 6, 9, 10, 16, 30, 33, 46, 48, 75], "soft": [5, 6, 9], "should": [5, 6, 9, 10, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 33, 36, 37, 38, 39, 44, 45, 46, 48, 50, 51, 52, 59, 68, 70, 71, 73, 75, 76, 85, 86, 90], "penalizedacquisit": 5, "base_acquisition_funct": 5, "unpen": 5, "local_pen": [5, 6, 9], "initi": [5, 6, 7, 9, 15, 16, 19, 20, 24, 25, 26, 29, 30, 33, 37, 38, 42, 43, 46, 48, 59, 66, 67, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90], "minima": [5, 6, 9, 16, 53, 56, 65, 75, 79, 80], "soft_local_pen": [5, 6, 9], "gonzalezdhl16": [5, 6, 9, 64, 70], "exclus": [5, 6, 9], "zone": [5, 6, 9], "mu": [5, 6, 9, 30, 35, 46, 48, 73], "l": [5, 6, 9, 15, 18, 30, 32, 33, 35, 36, 38, 41, 42, 43, 46, 49, 64, 75, 76, 77], "textrm": [5, 6, 9], "erfc": [5, 6, 9], "z": [5, 6, 9, 25, 26, 59, 64, 67, 73, 74, 75, 77, 79, 81, 88], "deriv": [5, 6, 9, 16, 36, 46, 47], "hard_local_pen": [5, 6, 9], "hard": [5, 6, 9, 30, 33, 73, 74], "arc": [5, 6, 9, 16, 64], "19": [5, 6, 9, 16, 56, 64, 72, 74, 81, 83, 89], "stronger": [5, 6, 9, 10], "effect": [5, 6, 9, 10, 29, 30, 35, 50, 72, 73, 75], "theirs": [5, 6, 9], "fantasizermodeltyp": 5, "supportsgetkernel": [5, 30, 32, 35, 43], "fantas": [5, 6, 9, 42, 43, 70, 81], "fantasizermodelstack": 5, "model_with_event_s": [5, 42, 43], "tupl": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20, 21, 25, 26, 30, 32, 33, 36, 38, 39, 42, 43, 44, 46, 47, 48, 50, 54, 59, 61, 62, 69, 71], "models_with_event_s": [5, 42, 43], "predictjointmodelstack": [5, 43, 71], "predictymodelstack": [5, 43], "modelstack": [5, 42, 43, 71], "stack": [5, 43, 59, 81], "deleg": [5, 15, 42, 43, 71], "predict_joint": [5, 30, 32, 42, 43, 46, 47, 66], "order": [5, 6, 8, 12, 14, 21, 29, 30, 35, 42, 43, 59, 62, 72, 75, 76, 80, 86, 87, 89], "separ": [5, 9, 15, 16, 36, 42, 43, 57, 69, 71, 73, 82, 89, 90], "signatur": [5, 15, 42, 43, 59, 75], "treat": [5, 42, 43, 46, 48, 59, 80], "special": [5, 42, 43, 90], "fantasize_method": [5, 6, 9], "str": [5, 6, 9, 15, 16, 19, 20, 25, 26, 28, 38, 40, 44, 45, 46, 48, 49, 51, 52, 53, 56, 59, 66], "kb": [5, 6, 9], "greedyacquisitionfunctionbuild": [5, 6, 7, 9, 10, 16, 71], "fantasizermodelorstack": [5, 6, 9], "ani": [5, 6, 9, 12, 13, 15, 16, 17, 19, 20, 21, 28, 30, 33, 35, 36, 38, 40, 41, 42, 43, 44, 46, 48, 51, 52, 59, 61, 62, 68, 71, 72, 73, 80, 82, 87, 90], "time": [5, 6, 9, 10, 15, 16, 18, 30, 33, 38, 40, 46, 48, 59, 61, 62, 66, 69, 70, 73, 79, 81, 82, 83, 86, 89, 90], "artifici": [5, 6, 9, 64, 69], "impli": [5, 6, 9, 19, 20, 66], "what": [5, 6, 9, 16, 68, 69, 78, 83, 84, 85, 91], "gpr": [5, 6, 9, 29, 30, 33, 66, 68, 70, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 88, 90], "cge14": [5, 6, 9, 30, 33, 64], "eq": [5, 6, 7, 9, 30, 33, 35], "8": [5, 6, 9, 15, 21, 25, 30, 33, 53, 56, 59, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90], "There": [5, 6, 9, 46, 48, 71, 76, 82, 84], "sever": [5, 6, 9, 27, 30, 32, 38, 40, 46, 48, 69, 70, 71, 75, 79, 81], "krige": [5, 6, 9, 64, 70], "believ": [5, 6, 9, 70], "heurist": [5, 6, 9, 16, 70, 81, 83], "glrc10b": [5, 6, 9, 64, 70], "avail": [5, 6, 9, 29, 30, 33, 44, 46, 48, 51, 52, 64, 69, 82, 90], "_generate_fantasized_data": 5, "depend": [5, 9, 15, 16, 20, 30, 33, 35, 36, 42, 43, 46, 47, 51, 52, 68, 69, 71, 83, 84, 89, 91], "past": [5, 91], "_fantasized_model": 5, "fantasized_data": 5, "creat": [5, 6, 7, 9, 15, 16, 18, 19, 20, 25, 26, 30, 32, 42, 44, 46, 50, 54, 57, 60, 68, 69, 71, 73, 74, 76, 78, 79, 80, 81, 83, 84, 86, 90], "exist": [5, 6, 7, 9, 12, 13, 16, 18, 20, 25, 26, 30, 31, 36, 57, 61, 62, 75, 84, 85], "update_fantasized_data": 5, "query_point": [5, 9, 16, 20, 21, 30, 32, 33, 38, 39, 40, 42, 43, 46, 47, 48, 50, 58, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89], "wrap": [5, 15, 18, 30, 33, 42, 43, 61, 62, 73, 76, 77, 81, 86], "directli": [5, 9, 12, 14, 16, 30, 33, 46, 48, 66, 70, 72, 73, 74, 75, 76, 78, 79, 86, 87, 88], "n": [5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 25, 26, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 54, 58, 59, 64, 79, 82, 84], "cov": [5, 6, 8], "conditional_predict_joint": [5, 30, 33, 42, 43], "conditional_predict_f_sampl": [5, 30, 33, 42, 43], "conditional_predict_i": [5, 30, 33, 42, 43], "get_kernel": [5, 30, 32, 35, 43, 90], "kernel": [5, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 43, 52, 56, 68, 72, 73, 74, 75, 77, 82, 83, 86, 90], "specif": [5, 9, 16, 25, 30, 33, 34, 38, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 59, 69, 71, 73, 79, 89, 91], "summari": [5, 20, 28, 30, 32, 33, 38, 40, 42, 43, 46, 47, 48, 52, 90], "_broadcast_predict": 5, "fun": [5, 59], "work": [5, 9, 15, 16, 29, 30, 33, 36, 37, 38, 42, 43, 45, 46, 48, 68, 70, 73, 77, 81, 84, 85], "flatten": [5, 46, 49, 61, 62, 77, 79], "through": [5, 9, 16, 29, 30, 31, 33, 38, 41, 46, 48, 73, 74, 75, 76, 89], "restor": [5, 9, 16, 20, 61, 62, 68, 75], "_get_leading_dim_and_flatten": 5, "leading_dim": 5, "query_points_flatten": 5, "_restore_leading_dim": 5, "un": 5, "folder": [6, 12, 83], "active_learn": [6, 9, 27], "continuous_thompson_sampl": [6, 9, 27], "greedy_batch": [6, 9, 27], "multi_object": [6, 9, 27, 53, 81, 84], "hippo": [6, 7, 9], "paralleliz": [6, 7, 9], "pareto": [6, 7, 9, 11, 12, 14, 16, 25, 27, 53, 54, 65, 81, 84], "distanc": [6, 7, 9, 12, 13, 16], "acquist": [6, 7, 9, 76], "hypervolum": [6, 7, 9, 12, 13, 14, 16, 64, 81, 84], "batchmontecarloexpectedhypervolumeimprov": [6, 7, 9], "reference_point_spec": [6, 7, 9], "ellipsi": [6, 7, 9, 46, 47, 48, 59, 62], "get_reference_point": [6, 7, 9, 12, 13, 81], "dbb20": [6, 7, 9, 64], "refer": [6, 7, 9, 12, 13, 14, 19, 21, 53, 54, 68, 71, 73, 74, 76, 78, 79, 81], "screen": [6, 7, 9, 12, 13, 14, 83], "front": [6, 7, 9, 11, 12, 13, 14, 16, 25, 53, 54, 81, 84], "arg": [6, 7, 9, 16, 20, 69, 85], "fix": [6, 7, 8, 9, 15, 16, 29, 30, 44, 69, 73, 80, 83, 85], "dynam": [6, 7, 9, 30, 32, 33, 68, 89], "accord": [6, 7, 9, 12, 13, 14, 25, 26, 31, 42, 43, 45, 46, 83], "expectedconstrainedhypervolumeimprov": [6, 7, 9, 81], "essenti": [6, 7, 9, 30, 32, 38, 40, 41, 42, 43, 46, 47, 48, 62, 73], "combin": [6, 7, 9, 16, 30, 33, 35, 38, 41, 42, 43, 44, 46, 48, 53, 56, 59, 71, 74, 79, 80], "expectedhypervolumeimprov": [6, 7, 9, 81], "yedback19": [6, 7, 9, 64], "batch_ehvi": [6, 7, 9, 81], "sampler_jitt": [6, 7, 9], "partition_bound": [6, 7, 9, 14], "abl": [6, 7, 9, 66, 68, 69, 73, 74, 82, 85], "partit": [6, 7, 9, 12, 27], "hypercel": [6, 7, 9, 12, 14], "expected_hv_improv": [6, 7, 9, 81], "hyper": [6, 7, 9, 42, 43, 53, 54], "volum": [6, 7, 9, 12, 13, 14, 64], "hv": [6, 7, 9, 81], "44": [6, 7, 9], "decompos": [6, 7, 9], "sub": [6, 7, 9, 16, 51, 59, 80, 82], "cell": [6, 7, 9, 12, 14], "reformul": [6, 7, 9], "psi": [6, 7, 9], "nu": [6, 7, 9], "45": [6, 7, 9, 64], "certain": [6, 7, 9, 29, 30, 42, 43, 53, 54, 69, 73, 83], "algorithm": [6, 7, 9, 12, 14, 16, 18, 27, 31, 53, 54, 64, 67, 71, 77, 78, 80, 83, 84, 87, 89], "minu": [6, 7, 9, 84], "infin": [6, 7, 9], "origin": [6, 7, 9, 15, 18, 19, 46, 48, 53, 56, 72, 73, 75, 80, 82, 83, 86, 88, 89], "applic": [6, 7, 9, 19, 64], "invers": [6, 7, 8, 9, 16, 17, 30, 35], "notat": [6, 7, 9], "num_sobol_skip": [6, 8], "naiv": [6, 8], "reparametris": [6, 8, 46, 49, 70], "whenev": [6, 8, 30, 32, 33, 35, 69], "samples_s": [6, 8], "skip": [6, 8, 30, 35, 59, 61, 62, 80, 88, 89], "_standard_normal_cdf_and_inverse_cdf": [6, 8], "iphi": [6, 8], "univari": [6, 8], "_get_update_indic": [6, 8], "tensor_scatter_nd_add": [6, 8], "_mvn_cdf": [6, 8], "get_update_indic": [6, 8], "equival": [6, 8, 21, 59, 61, 62], "numpi": [6, 8, 15, 21, 25, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "third": [6, 8, 80], "along": [6, 8, 15, 18, 21, 42, 43, 58, 59, 75, 76, 77, 80, 83, 91], "fourth": [6, 8], "06": [6, 8, 18, 29, 30, 61, 62, 85], "hippo_pen": 7, "mahalanobi": 7, "p_i": 7, "eucledian": 7, "penalti": 7, "multipli": [7, 30, 33, 59], "quantiti": [7, 9, 10, 79, 84], "warp": 7, "arctan": 7, "mo": 7, "aim": [9, 31, 78], "find": [9, 16, 18, 20, 56, 59, 65, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87], "librari": [9, 20, 21, 27, 56, 61, 65, 75, 84, 85, 91], "rule": [9, 19, 20, 27, 38, 41, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85], "central": [9, 16, 20], "api": [9, 16, 19, 27, 38, 40, 44, 46, 48, 51, 71, 73], "supplementari": [9, 42, 43], "becaus": [9, 16, 35, 66, 69, 70, 73, 74, 76, 77, 78, 79, 81, 83, 88, 89], "ego": [9, 16, 71, 80, 88, 89, 90], "acquisitionrul": [9, 16, 19, 20], "efficientglobaloptim": [9, 16, 19, 20, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 90], "sign": [9, 83], "addition": [9, 46, 48, 74, 83], "ucb": 9, "alia": [9, 10, 15, 42, 43, 51, 58, 59, 60], "describ": [9, 10, 29, 30, 33, 69, 71, 83, 85], "still": [9, 10, 18, 65, 69, 71, 74], "decor": [9, 10, 51, 56, 61, 62, 85], "you": [9, 10, 20, 30, 33, 42, 43, 46, 48, 59, 68, 69, 71, 72, 73, 75, 78, 82, 83, 84, 85, 88, 89, 90, 91], "overrid": [9, 10, 16, 28, 30, 32, 33, 90], "pass": [9, 10, 15, 16, 19, 20, 28, 29, 30, 33, 36, 38, 40, 42, 43, 44, 46, 48, 49, 51, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 85, 87, 88], "unless": [9, 10, 29, 30, 38, 39, 46, 48], "been": [9, 10, 18, 20, 42, 43, 46, 48, 56, 73, 78, 81, 84], "overridden": [9, 10, 16], "heavili": [9, 10], "vectorizedacquisitionfunctionbuild": [9, 10], "thei": [9, 10, 15, 16, 18, 21, 29, 30, 31, 37, 38, 39, 42, 43, 44, 45, 46, 56, 58, 59, 69, 71, 73, 74, 78, 79, 88, 89, 90, 91], "per": [9, 10, 15, 18, 26, 29, 30, 35, 37, 42, 43, 45, 46, 69, 73, 83, 89], "potenti": [9, 10, 15, 16, 46, 48, 59, 69, 73, 75, 85], "resulttyp": [9, 16, 61, 62, 71], "searchspacetyp": [9, 15, 16, 18, 19, 20, 59, 71], "histor": [9, 16, 20], "own": [9, 16, 27, 43, 51, 68, 72, 79, 81, 89, 90], "context": [9, 16, 28], "batchtrustregion": [9, 16, 59, 89], "inde": [9, 16, 73, 78, 83], "main": [9, 15, 16, 69, 73, 84], "bayesianoptim": [9, 16, 19, 20, 46, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "state": [9, 16, 19, 20, 46, 48, 49, 60, 71, 73, 74, 83, 85, 89], "ful": [9, 16], "might": [9, 16, 42, 43, 46, 47, 51, 69, 73, 74, 75, 83, 84, 86], "reli": [9, 16, 20, 30, 33, 37, 38, 44, 46, 48, 49], "acquir": [9, 16, 20, 69, 71, 75, 76, 90], "t_co": [9, 16], "hint": [9, 16, 20], "acquire_singl": [9, 16, 70], "filter_dataset": [9, 16], "filter": [9, 16, 28, 62, 90], "post": [9, 16], "befor": [9, 16, 20, 29, 30, 33, 59, 66, 72, 75, 76, 79, 80, 81, 82, 84, 85, 86, 89, 90], "train": [9, 16, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 68, 71, 72, 73, 74, 75, 77, 82, 86, 91], "remov": [9, 11, 12, 16, 20, 30, 32, 42, 43, 46, 47, 74, 84, 90], "longer": [9, 16, 75, 78], "after": [9, 12, 13, 16, 30, 32, 33, 42, 43, 46, 48, 50, 61, 62, 65, 66, 67, 70, 73, 74, 76, 78, 81, 83, 87, 89], "asynchronousgreedi": [9, 16, 69], "acquisitionoptim": [9, 15, 16, 18], "num_query_point": [9, 16, 25, 66, 69, 70, 78, 79, 80, 81, 84, 87, 88, 89], "asynchronousrulest": [9, 16], "name": [9, 16, 28, 38, 40, 44, 46, 48, 50, 53, 56, 59, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87, 90], "suggest": [9, 16, 19, 69, 71], "asynchron": [9, 16, 64, 91], "scenario": [9, 16, 68, 69, 82], "understand": [9, 16, 74], "document": [9, 16, 73], "asynchronousoptim": [9, 16, 71], "request": [9, 16, 59, 65, 69], "approach": [9, 16, 64, 69, 72, 75, 79, 83, 86, 87], "told": [9, 16], "compat": [9, 16, 30, 36], "automatic_optimizer_selector": [9, 15, 16, 71, 85, 87], "construct": [9, 12, 13, 14, 16, 29, 30, 44, 46, 48, 50, 67, 71, 75, 76, 79, 86], "receiv": [9, 15, 16, 69], "yet": [9, 16, 23], "keep": [9, 16, 38, 40, 46, 48, 59, 69, 71, 73, 83, 90], "them": [9, 16, 20, 29, 30, 38, 41, 46, 48, 50, 56, 61, 62, 69, 72, 73, 75, 79, 81, 83, 84, 85], "date": [9, 16], "against": [9, 16, 84], "whatev": [9, 16, 68], "delet": [9, 16], "Then": [9, 16, 66, 67, 81], "kei": [9, 16, 18, 19, 20, 42, 43, 44, 46, 53, 57, 61, 62, 73, 90, 91], "launch": [9, 16, 69], "arriv": [9, 16, 69], "wait": [9, 16, 68, 69], "rest": [9, 16, 69, 85], "immedi": [9, 16, 69], "wast": [9, 16, 20, 46, 49, 69, 83], "resourc": [9, 16, 30, 31, 69], "kksp18": [9, 16, 64], "decis": [9, 16, 83, 89], "awar": [9, 16, 73], "run": [9, 12, 13, 14, 15, 16, 20, 65, 68, 69, 71, 82, 83, 84], "part": [9, 16, 18, 53, 54, 64, 71, 73, 80, 84, 90], "store": [9, 12, 13, 14, 16, 19, 30, 32, 33, 35, 43, 46, 48, 71, 75, 81, 85, 86, 90], "dure": [9, 16, 19, 20, 25, 29, 30, 31, 61, 62, 68, 71, 72, 73, 79, 80, 84, 90], "000": [9, 15, 16], "let": [9, 16, 29, 30, 67, 68, 69, 73, 77, 78, 79, 81, 83, 84, 89], "suppos": [9, 16, 68], "happen": [9, 12, 13, 16, 30, 32, 33, 78], "batchhypervolumesharperatioind": [9, 16, 84], "ga_population_s": [9, 16], "ga_n_gener": [9, 16], "200": [9, 16, 76, 82, 83, 84], "filter_threshold": [9, 16], "noisy_observ": [9, 16], "sharp": [9, 12, 13, 16, 73, 78, 91], "ratio": [9, 12, 13, 16, 29, 30, 91], "binoi": [9, 16, 64, 84], "2021": [9, 16, 64], "bco21": [9, 16, 64, 84], "genet": [9, 16, 64, 84], "genenr": [9, 16], "exlud": [9, 16], "_find_non_dominated_point": [9, 16], "nsga": [9, 16, 84], "ii": [9, 16, 84], "init_subspac": [9, 16], "updatabletrustregiontyp": [9, 16], "localdatasetsacquisitionrul": [9, 16, 19], "batchtrustregionst": [9, 16], "trust": [9, 16, 25, 59, 64, 76, 91], "restart": [9, 16, 20, 85], "subspac": [9, 15, 16, 59], "length": [9, 15, 16, 19, 44, 46, 59, 75], "discretethompsonsampl": [9, 16, 71, 73, 74, 88, 89], "turbobox": [9, 16, 89], "num_local_dataset": [9, 16, 18], "pick": [9, 16, 46, 48, 69, 83, 84], "re": [9, 16, 61, 62, 68, 75, 85], "necessari": [9, 16, 38, 40, 42, 43, 44, 46, 48, 49, 69, 71, 73, 90], "look": [9, 16, 18, 67, 74, 75, 77, 79, 81, 82, 83, 88, 89], "entir": [9, 16, 18, 76, 89], "group": [9, 15, 16], "maybe_initialize_subspac": [9, 16], "mask": [9, 11, 12, 16, 18, 25, 76, 77, 79], "subpac": [9, 16], "subclass": [9, 16, 30, 31, 38, 39, 40, 42, 43, 44, 46, 47, 48, 51, 59, 61, 62, 71, 90], "behaviour": [9, 16, 42, 43, 46, 48], "get_initialize_subspaces_mask": [9, 16], "boolean": [9, 16, 18, 25, 59], "batchtrustregionbox": [9, 16, 85, 89], "updatabletrustregionbox": [9, 16], "box": [9, 15, 16, 20, 30, 31, 53, 56, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90], "initialize_subspac": [9, 16], "batchtrustregionproduct": [9, 16, 80], "updatabletrustregionproduct": [9, 16, 80], "mix": [9, 16, 21, 29, 30, 50, 59, 84, 91], "num_search_space_sampl": [9, 16, 88, 89], "thompson_sampl": [9, 16], "discret": [9, 15, 16, 17, 29, 30, 35, 42, 43, 59, 71, 73, 80], "exactli": [9, 16, 30, 36, 75, 78, 87], "o": [9, 16, 17, 25, 30, 35, 64, 69, 70, 72, 73, 76, 78], "complex": [9, 16, 17, 30, 33, 45, 46, 64, 68, 70, 72, 73], "decompisit": [9, 16], "underli": [9, 16, 17, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 48, 49, 51, 87], "Of": [9, 16, 42, 43, 68, 85], "yield": [9, 15, 16, 17], "initial_acquisition_funct": [9, 16, 68], "previous": [9, 16, 20, 70, 71, 78, 81, 82], "occasion": [9, 16], "preserv": [9, 15, 16, 30, 31], "seed": [9, 16, 46, 49, 50, 53, 54, 59, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "acquisition_funct": [9, 16, 68], "fixedpointtrustregiondiscret": [9, 16], "global_search_spac": [9, 16], "discretesearchspac": [9, 15, 16, 59, 71, 80], "region_index": [9, 16], "input_active_dim": [9, 16], "slice": [9, 16], "updatabletrustregiondiscret": [9, 16], "live": [9, 16], "column": [9, 16, 21, 26, 29, 30, 33, 42, 43, 82], "extend": [9, 16, 19, 52, 80, 81, 91], "self": [9, 12, 13, 15, 16, 59, 71, 77, 79, 82, 85, 90], "_initi": [9, 16], "hypercubetrustregion": [9, 16], "7": [9, 16, 21, 46, 50, 59, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90], "kappa": [9, 16], "0001": [9, 16], "zeta": [9, 16], "min_ep": [9, 16], "01": [9, 16, 30, 36, 38, 39, 66, 73, 74, 78, 85, 87], "updatabletrustregion": [9, 16, 89], "hypercub": [9, 16, 29, 30, 56, 72, 74, 75, 77, 86], "singleobjectivetrustregionbox": [9, 16, 80, 89], "singleobjectivetrustregiondiscret": [9, 16, 80], "_update_domain": [9, 16], "domain": [9, 16, 30, 33, 36, 59, 67, 71, 79], "expand": [9, 16, 89], "contract": [9, 16, 89], "center": [9, 16, 38, 41, 77, 78, 82], "success": [9, 16, 20, 61, 62, 75, 83], "smaller": [9, 15, 16, 29, 30, 37, 38, 50, 73, 83], "reiniti": [9, 16], "requires_initi": [9, 16], "uniniti": [9, 16], "location_candid": [9, 16], "includ": [9, 16, 19, 20, 28, 30, 32, 33, 38, 40, 42, 43, 46, 48, 52, 53, 55, 56, 68, 71, 73, 75, 80, 84, 90], "optimum": [9, 16, 72, 74, 78, 89], "linearli": [9, 16, 69], "increas": [9, 16, 19, 46, 48, 49, 69, 73, 78, 84, 87], "convers": [9, 16, 78], "unsuccess": [9, 16], "get_values_min": [9, 16], "in_region_onli": [9, 16], "latest": [9, 16], "get_dataset_min": [9, 16], "randomsampl": [9, 16], "henc": [9, 16, 29, 30, 33, 36, 46, 48, 73, 75, 79, 80], "baselin": [9, 16, 31], "interest": [9, 16, 67, 73, 78, 83, 90], "maintain": [9, 16, 29, 30, 89], "neighbor": [9, 16, 80], "axi": [9, 16, 21, 25, 42, 43, 59, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89], "align": [9, 16], "euclidean": [9, 16], "qualit": [9, 16, 80], "categor": [9, 16, 59, 80], "ordin": [9, 16, 80], "import": [9, 16, 46, 47, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "pairwis": [9, 16], "quadrat": [9, 16, 53, 56, 71, 84, 89], "3d": [9, 16, 25], "1000x1000x3": [9, 16], "tregobox": [9, 16, 85, 89], "altern": [9, 16, 30, 33, 60, 73, 74, 76, 77, 78, 89, 91], "regular": [9, 16, 25, 26, 68, 69, 89], "dprp22": [9, 16, 64, 89], "mode": [9, 16, 19, 46, 48, 83, 91], "vice": [9, 16], "versa": [9, 16], "never": [9, 16, 20, 75], "beyond": [9, 16], "intersect": [9, 16, 42, 43, 71], "ep": [9, 16], "get_datasets_filter_mask": [9, 16], "kept": [9, 16, 20, 75], "l_min": [9, 16], "l_init": [9, 16], "l_max": [9, 16], "success_toler": [9, 16], "failure_toler": [9, 16], "turbo": [9, 16, 83], "epg": [9, 16, 64, 83, 89], "user": [9, 15, 16, 18, 19, 29, 38, 40, 46, 48, 67, 72, 75, 78], "consecut": [9, 16], "toler": [9, 16, 18, 20, 59], "updatablesearchspac": [9, 16], "concept": [9, 16, 71], "_init_loc": [9, 16], "custom": [9, 16, 29, 30, 33, 38, 40, 42, 43, 46, 48, 68, 73, 75, 89, 91], "logic": [9, 16, 59], "with_input_active_dim": [9, 16], "select_in_region": [9, 16], "item": [9, 16, 31, 79], "aren": [9, 16, 17, 68], "taggedproductsearchspac": [9, 15, 16, 53, 55, 59, 71, 80], "uniqu": [9, 16, 18, 59], "whole": [9, 16, 46, 48, 49, 69, 78, 87], "concaten": [9, 16, 21, 35, 38, 41, 42, 43, 59, 80], "kwarg": [9, 16, 20, 28, 44, 53, 57, 85], "exactthompsonsampl": [9, 17, 73], "sample_min_valu": [9, 17], "although": [9, 17, 29, 30, 36, 37, 38, 69, 70], "costli": [9, 17, 35, 73], "incur": [9, 17, 87], "els": [9, 17, 30, 33, 58, 59, 61, 62, 65, 68, 72, 73, 77, 78, 82], "ti": [9, 17], "broken": [9, 17, 85], "randomli": [9, 17, 30, 33, 46, 48, 49, 59, 67, 73, 79, 81, 83, 84], "mimim": [9, 17], "invalid": [9, 12, 13, 14, 17, 30, 33, 35, 38, 41, 54, 56, 58, 59], "gumbelsampl": [9, 17], "empir": [9, 17, 29, 30], "operatornam": [9, 17], "pr": [9, 17], "quartil": [9, 17], "uniformli": [9, 17, 30, 31, 46, 48, 59, 78, 80, 81, 84], "fit": [9, 17, 19, 20, 29, 30, 33, 38, 39, 40, 46, 48, 51, 66, 70, 72, 73, 74, 75, 76, 78, 84, 89, 90], "oppos": [9, 17, 38, 41], "thompsonsamplerfromtrajectori": [9, 17], "trajectory_sampl": [9, 17, 30, 33, 38, 40, 43, 46, 48], "minims": [9, 17], "non_domin": [11, 12, 84], "http": [11, 12, 38, 40, 46, 48, 51, 53, 56, 64, 68, 69, 72, 73, 74, 76, 78, 79, 81, 83, 87], "stackoverflow": [11, 12, 69, 72, 73, 78], "com": [11, 12, 69, 72, 73, 78, 83], "question": [11, 12, 65, 69, 72, 73, 78], "32791911": [11, 12], "fast": [11, 12, 30, 32, 46, 48, 64, 83], "python": [11, 12, 42, 43, 44, 46, 48, 59, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 91], "duplic": [11, 12, 59], "already_non_domin": [12, 13, 84], "hypervolume_ind": [12, 13, 81], "upper": [12, 13, 14, 15, 25, 26, 59, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 88, 89], "bigger": [12, 13, 14, 59, 67], "anti": [12, 13, 14], "ideal": [12, 13, 14, 29, 30, 73], "concentr": [12, 13, 79, 87], "too": [12, 13, 71, 73, 78, 83], "strict": [12, 13], "frontier": [12, 13, 81], "sample_diverse_subset": [12, 13, 84], "allow_repeat": [12, 13, 84], "bounds_delta_scale_factor": [12, 13], "bounds_min_delta": [12, 13], "09": [12, 13, 64, 85], "repeat": [12, 13, 70, 74, 79, 84, 85, 86], "extrema": [12, 13], "sample_id": [12, 13], "dividedandconquernondomin": [12, 14], "_boundindexpartit": [12, 14], "branch": [12, 14], "procedur": [12, 14, 72, 73, 74, 75], "conquer": [12, 14], "cdd12": [12, 14, 64], "reject": [12, 14, 59], "tend": [12, 14, 66], "exactpartition2dnondomin": [12, 14], "prepare_default_non_dominated_partition_bound": [12, 14], "anti_refer": [12, 14], "trigger": [12, 14, 19, 30, 31, 35, 68, 74, 76, 79, 81], "worst": [12, 14], "1e10": [12, 14], "auxiliari": [14, 52], "num_samples_min": 15, "5000": [15, 25], "generate_continuous_optim": [15, 66, 71], "generate_random_search_optim": 15, "num_samples_dim": 15, "num_runs_dim": 15, "except": [15, 20, 21, 59, 61, 62, 69, 75, 76, 85, 86], "failedoptimizationerror": 15, "fail": [15, 20, 25, 26, 61, 62, 77, 85, 91], "help": [15, 38, 40, 46, 48, 59, 78, 86], "target_func": 15, "const": [15, 18], "appropri": [15, 57, 71, 73, 74, 75, 85], "optimize_discret": [15, 71], "integ": [15, 21, 25, 54, 59], "initialpointsampl": 15, "simplic": 15, "pre": [15, 30, 33, 83], "50": [15, 37, 44, 46, 48, 64, 72, 74, 78, 79, 82, 87], "def": [15, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90], "pre_optimized_point": 15, "50_000": 15, "conserv": [15, 31], "sample_from_spac": 15, "batch_siz": [15, 51, 70, 73, 87], "1_000": [15, 70, 87], "generate_initial_point": 15, "num_initial_point": [15, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86], "initial_sampl": [15, 82], "num_initial_sampl": 15, "num_optimization_run": [15, 66], "num_recovery_run": 15, "optimizer_arg": 15, "dict": [15, 18, 20, 44, 46, 48, 49, 51, 77], "collectionsearchspac": [15, 59], "advis": [15, 29, 30, 73], "whichev": [15, 29, 30, 37, 38], "similarli": [15, 30, 33, 70, 71, 90], "scipi": [15, 30, 32, 33, 36, 51, 59, 75, 76, 77, 85], "bfg": [15, 76, 77], "converg": [15, 56, 64, 72, 75, 81, 87], "ran": 15, "consum": 15, "cpu": [15, 69], "ram": 15, "latter": [15, 53, 54, 87], "add": [15, 16, 18, 21, 25, 26, 44, 46, 52, 69, 72, 75, 79, 82, 86, 88, 90], "well": [15, 29, 30, 33, 35, 37, 38, 40, 44, 45, 46, 59, 64, 72, 73, 74, 75, 76, 78, 79, 81, 86], "recoveri": 15, "keyword": [15, 20, 38, 40, 46, 48, 51], "check": [15, 21, 30, 36, 44, 46, 56, 59, 61, 62, 66, 71, 73, 75, 76, 82, 84], "jac": 15, "_perform_parallel_continuous_optim": 15, "starting_point": 15, "leverag": 15, "greenlet": 15, "packag": [15, 23, 27, 48, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87], "micro": 15, "thread": [15, 69], "arrai": [15, 21, 25, 26, 59, 61, 62, 69, 71, 75, 77, 78, 79, 80, 83], "relax": 15, "begin": [15, 30, 33, 66, 70, 76, 80, 85], "status": 15, "scipyoptimizergreenlet": 15, "worker": [15, 69], "back": [15, 18, 36, 68, 69, 72, 85], "parent": 15, "ndarrai": [15, 61, 62], "optimizeresult": [15, 30, 33, 51], "get_bounds_of_box_relaxation_around_point": 15, "current_point": 15, "replac": [15, 30, 31, 46, 48, 50, 59, 80, 82, 89], "remain": [15, 30, 31, 85, 86, 88, 90], "get_bounds_of_optim": 15, "taggedmultisearchspac": [15, 16, 59], "similar": [15, 31, 42, 43, 70, 71, 76, 77, 78, 80, 81, 84, 85, 89], "share": [15, 36, 43, 64], "assign": 15, "round": 15, "robin": 15, "fashion": 15, "2d": [15, 25, 69, 80], "11": [15, 64, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89], "15": [15, 64, 72, 75, 76, 77, 79, 80, 81, 83, 85, 87, 90], "21": [15, 30, 31, 64, 73, 81, 87], "25": [15, 45, 46, 64, 73, 81, 89], "31": [15, 69], "35": 15, "13": [15, 30, 35, 64, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 86, 89], "17": [15, 29, 30, 33, 64, 74, 79, 81, 83, 85], "23": [15, 72, 81], "27": [15, 72, 81], "33": [15, 69, 72], "37": 15, "4": [15, 21, 46, 50, 53, 56, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "16": [15, 46, 48, 68, 72, 79, 81, 83], "22": [15, 64, 81], "24": [15, 64, 81], "26": [15, 72, 81, 83], "spo": 15, "batchify_joint": 15, "batch_size_one_optim": 15, "jointli": [15, 70], "batchify_vector": 15, "unlik": [15, 21, 30, 35, 42, 43, 88], "unbound": [16, 19, 20, 60, 61, 62], "contravari": [16, 19, 20, 42, 43], "has_pending_point": 16, "remove_point": 16, "points_to_remov": 16, "row": [16, 26, 58, 82], "present": [16, 42, 43, 70, 76], "occur": [16, 20, 61, 62, 73, 75, 80, 85], "occurr": 16, "add_pending_point": 16, "new_point": [16, 68, 90], "acquisition_spac": 16, "subspace_tag": [16, 59], "_meanstdtradeoff": [16, 84], "probabilistic_model": 16, "pymoo": [16, 84], "core": [16, 27, 62], "std": [16, 72, 84], "home": [17, 31, 35, 49], "split_acquisition_funct": 18, "fn": 18, "split_siz": [18, 85, 87], "split": [18, 21, 30, 33, 42, 43, 85], "stitch": [18, 85], "like": [18, 19, 30, 31, 46, 48, 49, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 81, 83, 84, 85, 87, 89], "most": [18, 29, 30, 37, 38, 45, 61, 62, 67, 70, 71, 73, 75, 78, 83, 85, 88, 89], "output_dim": [18, 61, 62], "th": 18, "get_local_dataset": 18, "local_spac": 18, "ly": [18, 59], "copy_to_local_model": [18, 89], "global_model": 18, "num_local_model": 18, "copi": [18, 19, 20, 28, 38, 40, 46, 74, 83, 89, 91], "prefix": [18, 52], "with_local_dataset": 18, "local_dataset_indic": 18, "subset": 18, "thereof": 18, "get_unique_points_mask": 18, "unique_point": 18, "boolean_mask": [18, 79], "cover": [18, 84], "isn": [18, 19, 72, 73, 74, 75, 76, 80], "guarante": [18, 59, 68], "smallest": [18, 83], "ask": [19, 27, 69, 71, 75], "tell": [19, 27, 69, 71, 91], "who": 19, "extern": [19, 91], "statetyp": [19, 20, 25], "asktelloptimizerst": 19, "to_stat": 19, "record": [19, 20, 25, 66, 68, 85], "bayesian_optim": [19, 25, 27, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "local_data_ix": 19, "track_data": 19, "local_data_len": 19, "asktelloptimizerabc": 19, "fit_model": [19, 20], "acquisition_rul": [19, 20, 70, 73, 74, 76, 81, 84, 85, 90], "acquisit": [19, 20, 25, 27, 30, 33, 42, 43, 58, 64, 66, 69, 72, 73, 74, 75, 80, 83, 84, 85, 86, 91], "acquisition_st": [19, 20], "imposs": [19, 68], "asktelloptim": [19, 68, 69, 72, 90], "routin": [19, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 87, 88, 91], "track": [19, 38, 40, 46, 48, 69, 71, 74, 75, 85, 91], "infer": [19, 64, 73, 74, 82], "unspecifi": [19, 29, 30, 37, 38], "incompat": [19, 71], "update_model": 19, "stage": [19, 68], "__repr__": [19, 59], "print": [19, 20, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 90], "friendli": 19, "string": [19, 25, 26, 59], "represent": [19, 24, 30, 33, 35, 36, 43, 46, 48], "classmethod": [19, 20], "dataset_len": 19, "from_record": [19, 68], "frozenrecord": [19, 20, 25, 85], "asktelloptimizertyp": 19, "upon": 19, "creation": 19, "to_record": [19, 68], "to_result": [19, 68, 69], "optimizationresult": [19, 20, 75, 80, 85, 89], "from_stat": 19, "compris": 19, "alongsid": [19, 65], "new_data": [19, 30, 36, 68, 69, 79, 90], "new_data_ix": 19, "trainableprobabilisticmodeltyp": [19, 20], "trainableprobabilisticmodel": [19, 20, 30, 32, 33, 38, 40, 42, 43, 46, 48, 52, 71, 77], "asktelloptimizernotrain": [19, 68], "earlystopcallback": 20, "earli": [20, 30, 35, 46, 48, 71], "stop": [20, 46, 48, 68, 69, 71, 83], "callback": [20, 38, 40, 46, 48, 71, 73], "path": [20, 75, 85], "pathlib": 20, "disk": [20, 68, 75, 77], "Will": 20, "overwrit": [20, 38, 40, 46, 48], "file": [20, 25, 37, 38, 40, 44, 45, 65, 85], "pickl": [20, 68, 75, 85], "neither": [20, 30, 33], "portabl": [20, 75, 85], "nor": [20, 30, 33], "secur": [20, 75, 85], "open": [20, 65, 83], "frozen": 20, "system": [20, 64, 75, 78, 83, 85], "load": [20, 68, 75, 85, 90], "is_ok": [20, 61, 62, 85], "is_err": [20, 61, 62, 85], "loaded_histori": 20, "histori": [20, 25, 38, 40, 46, 48, 66, 73, 75, 80, 85, 89, 90], "final_result": [20, 75, 77, 80, 81, 83, 85, 89], "static": [20, 24, 62, 86], "step_filenam": 20, "num_step": [20, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90], "filenam": [20, 83], "astupl": [20, 21, 68, 72, 75, 79, 81, 83, 86, 90], "dataclass": [20, 21], "deepcopi": [20, 21], "attribut": [20, 21, 44, 46, 48, 62, 85], "try_get_final_dataset": [20, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89], "attempt": [20, 30, 33, 59, 85], "complet": [20, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90], "successfulli": [20, 85], "try_get_optimal_point": [20, 75, 76, 80], "try_get_final_model": [20, 67, 73, 74, 75, 78, 88], "save_result": 20, "base_path": 20, "from_path": [20, 75, 85], "black": [20, 64, 65, 66, 70, 71, 76, 77], "access": [20, 38, 39, 42, 43, 52, 53, 57, 59, 61, 62, 75, 79, 85], "itself": [20, 42, 43, 59, 83], "speak": [20, 42, 43], "track_stat": [20, 46, 66, 73, 79, 80, 87, 88, 89], "track_path": [20, 75, 85], "fit_initial_model": [20, 90], "early_stop_callback": 20, "start_step": 20, "catch": [20, 75], "messag": [20, 69, 72, 73, 78, 90], "absl": 20, "enabl": [20, 90], "caller": [20, 30, 36], "don": [20, 42, 43, 69, 71, 74, 75, 84, 85], "termin": [20, 69, 85], "execut": [20, 46, 48, 69, 90], "continue_optim": [20, 85], "optimization_result": 20, "write_summary_init": 20, "tensorboard": [20, 28, 30, 32, 38, 40, 46, 48, 52, 71, 75, 91], "write_summary_initial_model_fit": 20, "model_fitting_tim": 20, "timer": [20, 61, 62], "observation_plot_init": 20, "panda": 20, "datafram": 20, "pairplot": [20, 90], "warn": [20, 68, 69, 71, 72, 73, 74, 76, 78, 79, 81, 83, 90], "instal": [20, 84, 90, 91], "write_summary_observ": 20, "tagged_output": 20, "observation_plot_df": 20, "mutablemap": 20, "write_summary_query_point": 20, "query_point_generation_tim": 20, "query_plot_df": 20, "stop_at_minimum": 20, "minimum_atol": 20, "minimum_rtol": 20, "05": [20, 37, 83, 85], "minimizers_atol": 20, "minimizers_rtol": 20, "minimum_step_numb": 20, "enough": [20, 21, 73, 89, 90], "absolut": [20, 69], "rel": [20, 81], "__post_init__": 21, "unequ": 21, "__add__": 21, "rh": 21, "zeroth": 21, "d1": 21, "d2": 21, "9": [21, 59, 61, 62, 64, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90], "__len__": 21, "check_and_extract_fidelity_query_point": [21, 82], "max_fidel": 21, "reason": [21, 29, 30, 73, 83], "thhe": 21, "split_dataset_by_fidel": [21, 82], "num_fidel": [21, 29, 30, 33, 42, 43, 53, 55, 82], "num_fidl": 21, "lowest": [21, 29, 30, 33, 59, 65, 73, 82], "highest": [21, 30, 33, 42, 43, 59, 82], "get_dataset_for_fidel": 21, "add_fidelity_column": [21, 82], "plot": [22, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91], "code": [23, 28, 30, 33, 38, 39, 61, 62, 64, 68, 69, 71, 75, 83], "fulli": [23, 44, 46, 48, 89], "test": [23, 30, 33, 53, 54, 55, 56, 64, 69, 73, 74, 83], "quickli": [23, 69, 71, 73], "simul": [24, 56, 64, 78, 79, 82, 83, 85], "input_data": [24, 76, 79, 81], "plot_objective_and_constraint": [24, 76, 79], "matplotlib": [24, 25, 28, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89], "figur": [24, 25, 26, 28, 73, 78, 81], "plot_init_query_point": [24, 79], "objective_data": 24, "constraint_data": [24, 79], "new_constraint_data": 24, "plot_2obj_cst_query_point": [24, 81], "create_grid": 25, "grid_dens": [25, 26, 73, 75, 77, 88, 89], "30": [25, 67, 81, 85, 89], "xplot": [25, 76], "xx": [25, 26, 30, 32, 33, 36], "yy": [25, 26], "meshgrid": [25, 76], "format": [25, 57, 75, 77, 80, 83, 89], "surfac": [25, 26, 64, 65, 88], "plot_surfac": 25, "fill": [25, 30, 31, 66, 67, 75, 78], "contourset": 25, "input2": 25, "plt": [25, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 89], "transpar": [25, 26, 60], "plot_function_2d": [25, 66, 67, 75, 76, 77, 78, 79, 80, 81, 85, 88, 89], "obj_func": [25, 26], "100": [25, 30, 33, 46, 48, 51, 59, 68, 69, 70, 72, 73, 74, 75, 76, 81, 83, 84, 86, 87], "titl": [25, 26, 66, 67, 78, 81, 82, 84], "xlabel": [25, 26, 66, 67, 70, 78, 81, 84], "ylabel": [25, 26, 66, 67, 70, 78, 81, 84], "figsiz": [25, 66, 76, 77, 78, 81, 82], "colorbar": [25, 66, 67, 70, 78, 81], "plot_acq_function_2d": [25, 70], "acq_func": 25, "format_point_mark": [25, 26], "num_pt": [25, 26], "num_init": [25, 26, 67, 68, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 83, 84, 87, 88, 89], "idx_best": [25, 26, 68, 69, 70, 72, 73, 74, 75, 77, 84, 87, 88], "mask_fail": [25, 26, 77, 79, 81], "m_init": [25, 26], "m_add": [25, 26], "c_pass": [25, 26, 76], "tab": [25, 76, 82, 86], "green": [25, 26, 59, 76, 79, 80, 82], "c_fail": [25, 26], "red": [25, 26, 59, 70, 73, 79, 81, 82], "c_best": [25, 26, 76], "purpl": [25, 70, 73, 75, 76, 80, 81, 82, 89], "marker": [25, 26, 70, 73, 76, 79, 80], "style": [25, 26], "violat": [25, 26, 81], "color": [25, 26, 70, 73, 76, 80, 82, 86, 89], "col_pt": [25, 26], "mark_pt": [25, 26], "plot_bo_point": [25, 66, 67, 73, 75, 76, 77, 78, 79, 80, 81, 85, 88, 89], "pt": 25, "obs_valu": 25, "scatter": [25, 26, 70, 73, 76, 82, 84], "subfigur": [25, 26], "plot_mobo_points_in_obj_spac": [25, 81], "obj": [25, 81], "zlabel": 25, "c_pareto": 25, "only_plot_pareto": 25, "label": [25, 58, 59, 60, 70, 73, 75, 77, 79, 82, 84], "plot_mobo_histori": [25, 81], "metric_func": 25, "metric": [25, 30, 32, 38, 40, 46, 48, 51, 52, 81], "score": [25, 31], "plot_regret": [25, 68, 69, 70, 72, 73, 74, 75, 79, 83, 84, 87], "show_ob": 25, "regret": [25, 64, 68, 69, 70, 72, 73, 74, 75, 79, 84, 86, 87], "show": [25, 26, 59, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90], "plot_gp_2d": [25, 77], "gpmodel": [25, 30, 32], "predict_f": [25, 66, 78], "plot_trust_region_history_2d": [25, 80, 89], "convert_figure_to_fram": [25, 80, 89], "fig": [25, 26, 66, 67, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89], "pyplot": [25, 28, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 89], "pixel": 25, "frame": [25, 73, 80, 89], "convert_frames_to_gif": [25, 80, 89], "durat": 25, "io": [25, 38, 40, 46, 48, 51, 83], "bytesio": 25, "gif": [25, 80, 89], "millisecond": 25, "circl": [26, 67, 76, 80], "darkmagenta": 26, "add_surface_plotli": 26, "plotli": 26, "graph_object": 26, "figrow": [26, 67, 73, 74, 75, 77, 88], "figcol": [26, 67, 73, 74, 75, 77, 88], "add_bo_points_plotli": [26, 67, 73, 74, 75, 77, 88], "plot_model_predictions_plotli": [26, 67, 73, 74, 75, 77, 88], "85": 26, "epistem": [26, 46, 47, 64, 73], "uncertainti": [26, 46, 47, 48, 64, 66, 70, 78], "deepgaussianprocess": [26, 38, 40, 74], "stochast": [26, 30, 36, 64, 68, 73, 74, 83], "plot_function_plotli": [26, 66, 73, 74, 75, 77, 78, 80], "illustr": [26, 67, 68, 69, 72, 73, 75, 78, 89, 91], "root": [27, 30, 32, 38, 40, 46, 48, 73, 91], "your": [27, 68, 71, 74, 76, 79, 81, 83, 84, 90], "ask_tell_optim": [27, 68, 69, 72, 90], "manual": [27, 73, 75, 85, 86], "popular": [27, 53, 75, 83], "experiment": [27, 54, 55, 56, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89], "inducing_point_selector": [27, 30, 33, 42, 87], "gpflux": [27, 35, 42, 74], "kera": [27, 38, 39, 40, 42, 51, 73, 74], "architectur": [27, 37, 38, 40, 42, 45, 46, 48, 73, 74], "multifidelity_object": [27, 53], "single_object": [27, 53, 54, 55, 86], "default_summary_filt": 28, "omit": 28, "_": [28, 56, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89], "set_tensorboard_writ": [28, 90], "summary_writ": [28, 90], "summarywrit": 28, "disabl": [28, 69, 72, 73, 78], "writer": [28, 90], "get_tensorboard_writ": [28, 90], "tensorboard_writ": 28, "manag": [28, 62, 68, 69, 83, 89], "insid": [28, 30, 36, 67], "set_step_numb": [28, 90], "new_step_numb": 28, "step_numb": 28, "get_step_numb": [28, 90], "set_summary_filt": [28, 46, 48, 90], "summary_filt": 28, "summaryfilt": 28, "get_summary_filt": 28, "get_current_name_scop": 28, "scope": [28, 73], "include_summari": 28, "evaluate_data": 28, "closur": [28, 38, 40, 51, 74], "histogram": [28, 38, 40, 46, 48, 90], "unwant": [28, 83], "text": [28, 74, 75, 81, 87], "imag": [28, 80, 89, 90], "configur": [29, 30, 33, 37, 38, 45, 68, 83], "situat": [29, 30, 37, 38, 45], "univers": [29, 30, 37, 38, 45], "good": [29, 30, 37, 38, 45, 46, 48, 74, 78, 83, 84, 86], "solut": [29, 30, 37, 38, 45, 70, 83, 87, 89], "kernel_lengthscal": 29, "lengthscal": [29, 30, 72, 73, 74, 75, 86, 90], "kernel_prior_scal": 29, "classification_kernel_variance_noise_fre": [29, 30], "free": [29, 66, 69, 70, 76, 77, 78, 79, 81, 82, 84, 88, 89], "classification_kernel_vari": [29, 30], "max_num_inducing_point": [29, 30, 37, 38], "induc": [29, 30, 31, 33, 35, 36, 37, 38, 41, 43, 64, 74, 87], "num_inducing_points_per_dim": [29, 30, 37, 38], "signal_noise_ratio_likelihood": [29, 30], "signal": [29, 30, 33, 74], "build_gpr": [29, 30, 66, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90], "kernel_prior": [29, 30], "likelihood_vari": [29, 30, 37, 38, 66, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 84, 87, 88, 89], "trainable_likelihood": [29, 30, 37, 38, 74], "sensibl": [29, 30, 37, 38, 73, 75], "prior": [29, 30, 33, 35, 36, 38, 41, 72, 73, 74, 75, 82, 86], "matern52": [29, 30, 68, 72, 75, 86], "hyperparamet": [29, 30, 36, 68, 74, 75], "seem": [29, 30, 45, 46, 73], "caution": [29, 30, 46, 48, 68], "posteriori": [29, 30, 75], "normalis": [29, 30, 56, 72], "trainabl": [29, 30, 32, 33, 37, 38, 39, 42, 43, 46, 47, 52, 68, 71, 75], "build_sgpr": [29, 30], "num_inducing_point": [29, 30, 37, 38, 87], "trainable_inducing_point": [29, 30], "sgpr": [29, 30, 33, 75], "higher": [29, 30, 33, 65, 73, 74, 83, 86, 87], "carri": [29, 30], "risk": [29, 30, 84, 86], "stuck": [29, 30], "futur": [29, 30, 42, 43, 73], "build_vgp_classifi": [29, 30, 67, 77], "noise_fre": [29, 30, 67, 77], "kernel_vari": [29, 30], "determinist": [29, 30, 70], "sharper": [29, 30, 78], "build_svgp": [29, 30, 67, 87], "ignor": [29, 30, 45, 46, 59, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 83, 85, 89, 90], "build_multifidelity_autoregressive_model": [29, 30, 82], "input_search_spac": [29, 30, 82], "multifidelityautoregress": [29, 30, 33, 82], "build_multifidelity_nonlinear_autoregressive_model": [29, 30, 82], "kernel_base_class": [29, 30], "stationari": [29, 30, 46, 48, 56, 64, 74], "matern32": [29, 30, 68], "multifidelitynonlinearautoregress": [29, 30, 33, 82], "basic": [29, 30, 38, 41, 73, 74, 91], "prd": [29, 30, 33, 64], "extra": [29, 30, 33, 59, 82], "dummi": [29, 30, 86], "propag": [29, 30, 33], "real": [29, 30, 65, 68], "conditionalimprovementreduct": [30, 31], "recalc_every_model_upd": [30, 31], "dppinducingpointselector": [30, 31], "inducingpointselector": [30, 31, 33], "mop23": [30, 31, 64], "recalcul": [30, 31, 35], "conditionalvariancereduct": [30, 31], "brvdw19": [30, 31, 64], "progress": [30, 31, 33, 70, 75, 80, 87, 89, 90], "often": [30, 31, 42, 43, 71, 89, 90], "benefici": [30, 31, 79, 89], "focu": [30, 31, 70], "limit": [30, 31, 36, 59, 70, 76, 78, 87], "vma": [30, 31, 64, 87], "demonstr": [30, 31, 66, 68, 69, 70, 73, 76, 80, 82, 83, 84, 86, 87, 89], "calculate_inducing_point": [30, 31], "current_inducing_point": [30, 31], "spars": [30, 31, 33, 35, 64, 67, 87], "_recalculate_inducing_point": [30, 31], "kmeansinducingpointselector": [30, 31, 87], "gpflowpredictor": [30, 31, 32, 33, 36], "centroid": [30, 31, 87], "cluster": [30, 31, 87], "fewer": [30, 31, 33, 35, 38, 40], "randomsubsampleinducingpointselector": [30, 31], "uniforminducingpointselector": [30, 31], "create_posterior_cach": [30, 32], "cach": [30, 32], "furthermor": [30, 32, 71, 90], "_ensure_variable_model_data": [30, 32, 33], "update_posterior_cach": [30, 32, 33], "interpret": [30, 32, 42, 43, 46, 47], "broadcast": [30, 32, 42, 43, 46, 47, 59, 82], "squeez": [30, 32, 36, 42, 43, 46, 47, 68, 69, 70, 71, 72, 73, 74, 77, 79, 84, 85, 87, 88, 89], "redund": [30, 32, 42, 43, 46, 47], "nest": [30, 32, 42, 43, 46, 47], "get_mean_funct": [30, 32, 35, 43], "mean_funct": [30, 32, 35, 72, 75], "meanfunct": [30, 32], "num_kernel_sampl": [30, 33, 75, 86], "num_rff_featur": [30, 33, 38, 40, 87], "use_decoupled_sampl": [30, 33], "supportsgetinternaldata": [30, 33, 35, 43], "gram": [30, 33, 35], "automat": [30, 33, 76, 80, 81, 85, 90], "perfom": [30, 33, 35, 70, 76], "wide": [30, 33, 35, 38, 40], "rang": [30, 33, 35, 36, 38, 40, 66, 68, 69, 72, 78, 80, 81, 82, 83, 86, 89, 90], "rbf": [30, 33, 35, 38, 40, 68, 83], "decoupl": [30, 33, 35, 38, 41, 87], "suffer": [30, 33], "overestim": [30, 33], "awai": [30, 33, 78], "query_points_1": [30, 32, 33, 36], "query_points_2": [30, 32, 33, 36], "k_": [30, 32, 33, 36], "x1": [30, 32, 33, 53, 54], "x2": [30, 32, 33, 36], "latent": [30, 32, 33, 35, 36, 38, 41, 42, 43], "try": [30, 33, 44, 46, 49, 59, 61, 62, 67, 69, 71, 72, 74, 75, 85, 90], "lie": [30, 33, 53, 54, 59, 78, 88, 89], "finit": [30, 33, 35, 38, 41, 58, 59, 77], "sigmoid": [30, 33, 36], "bijector": [30, 33], "find_best_model_initi": [30, 33], "trajectorysampl": [30, 33, 35, 38, 40, 41, 42, 43, 46, 48, 49], "get_internal_data": [30, 33, 35, 43], "additional_data": [30, 33, 42, 43], "mean_qp_new": [30, 33], "var_qp_new": [30, 33], "cov_qp_new": [30, 33], "fidelity_model": [30, 33], "kohagan00": [30, 33, 64, 82], "arbitrari": [30, 33, 71, 78], "linear": [30, 33, 35, 53, 54, 56, 59, 76, 83], "relationship": [30, 33, 82], "precis": [30, 33, 46, 48, 71, 78], "f_": [30, 33, 82], "rho": [30, 33], "_calculate_residu": [30, 33], "datapoint": [30, 33, 35, 84], "r_": [30, 33, 84], "rho_": [30, 33], "loss": [30, 33, 34, 38, 40, 46, 48, 51, 65, 71, 73], "covariance_with_top_fidel": [30, 33, 42, 43], "top": [30, 33, 42, 43, 83], "num_monte_carlo_sampl": [30, 33], "capabl": [30, 33], "g_": [30, 33], "whilst": [30, 33], "later": [30, 33, 46, 48, 68, 69, 73], "dimes": [30, 33], "section": [30, 33, 68, 69, 71, 79, 80, 89], "_sample_mean_and_var_at_fidel": [30, 33], "sample_mean": [30, 33], "sample_var": [30, 33], "_propagate_samples_through_level": [30, 33], "sparsegaussianprocessregress": [30, 33], "supportsgetinducingvari": [30, 33, 35, 43], "due": [30, 33, 68, 74, 76, 79, 81, 86], "compute_qu": [30, 33], "selector": [30, 33, 87], "_update_inducing_vari": [30, 33], "new_inducing_point": [30, 33], "q_mu": [30, 33, 36, 43], "q_sqrt": [30, 33, 36, 43], "accordingli": [30, 33, 35, 38, 41, 42, 43, 46, 49, 89], "whiten": [30, 33, 36, 43], "_whiten_point": [30, 33, 36], "get_inducing_vari": [30, 33, 43], "inconsist": [30, 33], "variat": [30, 31, 33, 36, 43, 56, 64, 67, 72, 77, 83], "denot": [30, 33, 43, 58, 70, 79, 81, 87], "sparsevari": [30, 31, 33, 67, 87], "batchoptim": [30, 33, 36, 51, 77, 87], "adam": [30, 33, 38, 39, 40, 46, 47, 48, 64, 73, 74, 77, 87], "variationalgaussianprocess": [30, 33, 36, 67, 77], "use_natgrad": [30, 33, 77], "natgrad_gamma": [30, 33], "closest": [30, 33], "kl": [30, 33, 38, 40], "diverg": [30, 33, 38, 40], "oa09": [30, 33, 64], "natur": [30, 33, 46, 48, 64, 78, 83], "aid": [30, 33], "permit": [30, 33], "seh18": [30, 33, 64], "dramat": [30, 33], "especi": [30, 33, 70], "ill": [30, 33], "inherit": [30, 33, 42, 43, 62, 71, 79], "mini": [30, 33, 36, 51], "batchreparametrizationsampl": [30, 35, 43, 79], "qmc": [30, 35], "qmc_skip": [30, 35], "emploi": [30, 35, 38, 41, 42, 43, 65, 71], "reparameter": [30, 35, 38, 41, 42, 43], "epsilon": [30, 35, 36], "ll": [30, 35, 68, 70, 72, 74, 75, 77, 79, 85, 87, 88, 89, 90], "sim": [30, 35, 76, 79, 81], "curv": [30, 35, 74], "truli": [30, 35], "xla": [30, 35], "increment": [30, 35], "consist": [30, 35, 42, 43, 46, 48, 59, 79], "decoupledtrajectorysampl": [30, 35], "featuredecompositioninducingpointmodel": [30, 35], "featuredecompositioninternaldatamodel": [30, 35], "num_featur": [30, 35, 38, 41], "featuredecompositiontrajectorysampl": [30, 35], "union": [30, 35], "introduct": [30, 35, 80, 88, 89, 91], "randomfourierfeaturetrajectorysampl": [30, 35], "rff": [30, 35, 38, 41], "aprroxim": [30, 35], "gausian": [30, 35], "canon": [30, 35, 38, 41], "hat": [30, 35], "sum_": [30, 35, 46, 48], "w_i": [30, 35], "phi_i": [30, 35], "j": [30, 35, 64, 84], "v_jk": [30, 35], "z_j": [30, 35], "v_i": [30, 35], "prioriti": [30, 35], "valid": [30, 35, 59, 75, 82], "_prepare_weight_sampl": [30, 35, 38, 41], "independentreparametrizationsampl": [30, 35], "tractibl": [30, 35], "hernandezlhg14": [30, 35, 64], "theta_i": [30, 35], "appendix": [30, 35], "theta": [30, 35, 67], "motiv": [30, 35, 83], "revolv": [30, 35], "recast": [30, 35], "choic": [30, 35, 59, 73, 78, 82, 86], "flexibl": [30, 35, 51, 89], "_prepare_theta_posterior_in_design_spac": [30, 35], "tensorflow_prob": [30, 35, 44, 46, 47, 48, 50, 51, 72, 74, 75, 78, 86], "multivariatenormaltril": [30, 35, 44, 45, 46], "ty": [30, 35], "2i_m": [30, 35], "_prepare_theta_posterior_in_gram_spac": [30, 35], "tg": [30, 35], "i_m": [30, 35], "2i_n": [30, 35], "feature_decomposition_trajectori": [30, 35], "feature_funct": [30, 35], "weight_sampl": [30, 35], "place": [30, 35, 38, 41, 42, 43, 46, 49, 60], "assert_data_is_compat": [30, 36], "existing_data": [30, 36], "trail": [30, 36], "check_optim": [30, 36], "correct": [30, 36, 46, 48, 64], "descent": [30, 36], "properli": [30, 36, 73], "hand": [30, 36, 69, 73, 74, 75, 85], "randomize_hyperparamet": [30, 36], "modul": [30, 34, 38, 63, 73, 75, 83, 91], "squeeze_hyperparamet": [30, 36], "07": [30, 36, 59, 85], "shift": [30, 36, 75], "softplu": [30, 36, 75], "inf": [30, 36], "proport": [30, 36], "offset": [30, 36], "qualityfunct": 31, "quality_funct": 31, "czz18": [31, 64], "appoxim": 31, "determinant": [31, 64], "dpp": 31, "diveristi": 31, "come": [31, 68, 69, 72, 73, 78, 83], "unitqualityfunct": 31, "sole": 31, "modelbasedimprovementqualityfunct": 31, "justif": 31, "greedy_inference_dpp": 31, "quality_scor": 31, "regist": [34, 51], "qmc_normal_sampl": 35, "_inttensortyp": 35, "n_sample_dim": 35, "supportsgetmeanfunct": [35, 43], "get_inducing_point": 35, "featuredecompositiontrajectorysamplermodeltyp": 35, "resampleablerandomfourierfeaturefunct": 35, "evalut": 35, "prohibit": 35, "regardless": [35, 75], "update_trajectori": [35, 38, 41, 42, 43, 46, 49], "reflect": [35, 38, 41, 42, 43, 46, 49], "account": [35, 69, 78, 83, 85], "resample_trajectori": [35, 38, 41, 42, 43, 46, 49], "n_compon": [35, 38, 41], "layer": [35, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 73, 74], "basis_funct": [35, 38, 41], "fourier_featur": [35, 38, 41], "randomfourierfeaturescosin": [35, 38, 41], "bia": 35, "graph": [35, 71], "bias": [35, 38, 41], "basi": [35, 38, 41], "resampleabledecoupledfeaturefunct": 35, "_covariance_between_points_for_variational_model": 36, "inducing_point": 36, "1x": 36, "bk_": 36, "q_": [36, 84], "tit09": [36, 64], "_compute_kernel_block": 36, "num_lat": 36, "sharedindepend": [36, 38, 41], "separateindepend": 36, "parametr": [36, 44, 45, 46, 48, 83], "f_mu": 36, "f_cov": 36, "new_q_mu": 36, "new_q_sqrt": 36, "para": 36, "num_lay": [37, 38], "inner_layer_sqrt_factor": [37, 38], "rescal": [37, 38, 53, 56, 72, 86], "hidden": [37, 38, 44, 45, 46, 73], "001": [37, 68, 72, 73, 75, 86], "build_vanilla_deep_gp": [37, 38, 74], "deepgp": [37, 38, 40, 41, 74], "relev": [37, 38, 45, 46, 71, 73, 78, 90], "build_constant_input_dim_deep_gp": [37, 38], "config": [37, 38, 42, 46, 48], "gpfluxpredictor": [38, 39, 40, 41], "kerasoptim": [38, 39, 40, 46, 47, 48, 51, 73], "model_kera": [38, 39, 40], "model_gpflux": [38, 39, 40, 41], "rate": [38, 39, 40, 46, 48, 64, 73], "compil": [38, 39, 40, 44, 46, 47, 48, 51, 71, 85, 87], "continuous_optimis": [38, 40, 46, 48], "compile_arg": [38, 40, 46, 48], "gplayer": [38, 40, 41], "latentvariablelay": [38, 40], "py": [38, 40, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 85, 86, 87], "serialis": [38, 40, 68], "dictionari": [38, 40, 44, 46, 48, 51, 71, 81], "400": [38, 40, 82], "epoch": [38, 40, 46, 48, 73], "verbos": [38, 40, 46, 48, 73, 84], "model_training_api": [38, 40, 46, 48, 51], "initial_epoch": [38, 40, 46, 48], "monitor": [38, 40, 46, 48, 51, 71, 73, 75, 90], "unsupport": [38, 40], "disallow": [38, 40, 46, 48], "few": [38, 40, 74, 82, 83, 84], "statist": [38, 40, 46, 48, 64, 90], "end": [38, 40, 65, 73, 79], "diff": [38, 40, 81], "init": [38, 40, 46, 48, 69], "seri": [38, 40, 46, 48, 64], "deepgaussianprocessdecoupledlay": [38, 41], "layer_numb": [38, 41], "matheron": [38, 41], "deepgaussianprocessdecoupledtrajectorysampl": [38, 41], "dgp_feature_decomposition_trajectori": [38, 41, 74], "deepgaussianprocessreparamsampl": [38, 41], "resampleabledecoupleddeepgaussianprocessfeaturefunct": [38, 41], "expans": [38, 41], "tool": [42, 85, 90], "abil": [42, 43, 69, 71, 82], "possibli": [42, 43], "subsidiari": [42, 43], "cours": [42, 43, 68, 80, 81], "appear": [42, 43, 80], "e_i": [42, 43], "sum_i": [42, 43], "explicitli": [42, 43, 59, 71, 75, 89, 90], "long": [42, 43, 46, 48, 78, 83], "213": [42, 43], "oni": [42, 43], "trainablemodelstack": [42, 43, 71, 81], "constructor": [42, 43, 71, 76, 89], "complic": [42, 43, 68], "reset_sampl": [42, 43], "drawn": [42, 43, 80], "recal": [42, 43, 59], "scratch": [42, 43], "trainablesupportsgetkernel": 43, "parameter": 43, "explain": [43, 69, 71, 75, 91], "coars": [43, 82], "leav": [43, 59], "hasreparamsamplermodelstack": 43, "submodel": 43, "trainablesupportspredictjoint": 43, "trainablepredictjointmodelstack": 43, "trainablesupportspredicti": 43, "trainablepredictymodelstack": 43, "supportspredictjointpredicti": 43, "predictjointpredictymodelstack": 43, "trainablesupportspredictjointhasreparamsampl": 43, "trainablepredictjointreparammodelstack": 43, "neural": [44, 45, 46, 47, 48, 50, 64, 73], "network": [44, 45, 46, 47, 48, 49, 50, 51, 64, 73, 78], "kerasensembl": [44, 45, 46, 48, 49, 73], "kerasensemblenetwork": [44, 46, 48], "ensembl": [44, 45, 46, 47, 48, 49, 50, 64, 91], "meant": [44, 46], "deepensembl": [44, 46, 48, 73], "member": [44, 46, 47, 48, 59, 73], "uncompil": [44, 46], "ensemble_s": [44, 45, 46, 47, 48, 73], "learner": [44, 45, 46, 47, 48], "_build_ensembl": [44, 46], "connect_lay": [44, 46], "input_tensor_spec": [44, 46], "tensorspec": [44, 46, 50, 75], "output_tensor_spec": [44, 46], "network_nam": [44, 46], "connect": [44, 46, 48, 90], "event_s": 44, "convert_to_tensor_fn": 44, "tfp": [44, 46, 48, 72, 75, 78, 86], "validate_arg": 44, "handl": [44, 75, 76, 80, 82, 83], "gaussiannetwork": [44, 46, 48], "hidden_layer_arg": [44, 46], "relu": [44, 45, 46], "multilay": [44, 46, 48], "feed": [44, 46, 68, 69, 73], "forward": [44, 46, 49, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "dens": [44, 46], "pleas": [44, 46, 68, 74, 76, 79, 81], "node": [44, 45, 46, 73], "independentnorm": [44, 45, 46], "diagon": [44, 45, 46], "build_keras_ensembl": [45, 46, 73], "num_hidden_lay": [45, 46, 73], "independent_norm": [45, 46], "practic": [45, 46, 48, 64, 70, 73, 83, 89], "simplifi": [45, 46], "deepensemblemodel": [46, 47, 48, 49], "primarili": [46, 47], "circular": [46, 47], "num_output": [46, 47, 48, 81], "ensemble_distribut": [46, 47, 48], "keraspredictor": [46, 47, 48, 73], "bootstrap": [46, 48, 50], "diversifi": [46, 48, 49], "cite": [46, 48, 53, 56, 82], "lakshminarayanan2017simpl": [46, 48], "attract": [46, 48, 73], "struggl": [46, 48, 74, 86], "among": [46, 48, 73], "boostrap": [46, 48], "author": [46, 48], "quantif": [46, 48], "osband2021epistem": [46, 48], "word": [46, 48, 68], "schedul": [46, 48], "fit_arg": [46, 48, 51, 73], "3000": [46, 48], "patienc": [46, 48, 73], "quantil": [46, 48, 49, 64], "prepare_dataset": [46, 48], "prepare_query_point": [46, 48], "mixtur": [46, 48], "theta_m": [46, 48], "2_": [46, 48], "predict_ensembl": [46, 48], "sample_ensembl": [46, 48], "minimize_arg": [46, 48, 51, 85], "switch": [46, 48, 68, 76], "deepensembletrajectorysampl": [46, 49], "docstr": [46, 49], "deep_ensemble_trajectori": [46, 49], "rng": [46, 49, 50], "somewhat": [46, 49, 73, 75], "get_stat": [46, 49], "get_tensor_spec_from_data": [46, 50], "facili": [46, 50], "input_spec": [46, 50], "output_spec": [46, 50], "negative_log_likelihood": [46, 50], "y_true": [46, 50], "y_pred": [46, 50], "sample_with_replac": [46, 50], "sample_model_index": 50, "until": [50, 69, 85], "reach": 50, "rational": 50, "scheme": [50, 87], "exhaust": [50, 59], "create_loss_funct": 51, "trainingdata": 51, "datasettransform": 51, "lossclosur": 51, "commonli": [51, 71], "could": [51, 68, 74, 76, 79, 81, 86, 89, 90], "variou": [51, 52, 59, 71, 83, 90], "create_loss": 51, "max_it": [51, 87], "dataset_build": 51, "write_summary_data_based_metr": 52, "diagnost": 52, "accuraci": [52, 70, 78], "categori": [52, 59], "write_summary_kernel_paramet": 52, "write_summary_likelihood_paramet": 52, "get_module_with_vari": [52, 75], "fresh": [52, 91], "attach": 52, "saved_model": [52, 75], "optimize_model_and_save_result": 52, "get_last_optimization_result": 52, "dtlz1": [53, 54], "input_dim": [53, 54, 67, 82], "num_object": [53, 54, 81], "multiobjectivetestproblem": [53, 54], "plane": [53, 54], "dtlz02": [53, 54, 64], "synthet": [53, 54, 55, 56, 67, 73, 79, 81], "dtlz2": [53, 54], "sphere": [53, 54], "vlmop2": [53, 54, 81], "xdim": [53, 54], "vvl99": [53, 54, 64], "ff95": [53, 54, 64], "discuss": [53, 54, 65, 66, 74, 83], "objectivetestproblem": [53, 54, 56], "gen_pareto_optimal_point": [53, 54, 81], "genparetooptimalpoint": [53, 54], "singleobjectivemultifidelitytestproblem": [53, 55], "singleobjectivetestproblem": [53, 55, 56], "fidelity_search_spac": [53, 55], "ackley5": [53, 56], "acklei": [53, 56], "www": [53, 56, 68, 74, 76, 79, 81], "sfu": [53, 56], "ca": [53, 56], "ssurjano": [53, 56], "html": [53, 56, 64, 80, 83, 89], "32": [53, 56, 64], "768": [53, 56], "branin": [53, 56, 66, 69, 70, 75, 76, 77, 78, 80, 84, 85, 88, 89], "hoo": [53, 56], "pwg13": [53, 56, 64], "constrainedscaledbranin": [53, 56], "nonlinear": [53, 56, 59, 64, 82], "gramacyle": [53, 56], "gramaci": [53, 56, 64], "lee": [53, 56, 64], "gl12": [53, 56, 64], "hartmann3": [53, 56], "hartmann": [53, 56], "hart3": [53, 56], "hartmann6": [53, 56, 87], "hart6": [53, 56], "levy8": [53, 56], "levi": [53, 56], "logarithmicgoldsteinpric": [53, 56], "logarithm": [53, 56], "goldstein": [53, 56], "price": [53, 56], "michalewicz2": [53, 56, 73, 74, 86], "michalewicz": [53, 56, 73, 74, 86], "steep": [53, 56], "arxiv": [53, 56, 64, 87], "org": [53, 56, 64, 68, 74, 76, 79, 81, 87], "ab": [53, 56, 83], "2003": [53, 56], "09867": [53, 56], "michalewicz5": [53, 56, 74], "michalewicz10": [53, 56], "objectivetestfunct": [53, 56], "rosenbrock4": [53, 56], "rosenbrock": [53, 56], "picheny2013": [53, 56], "banana": [53, 56], "unimod": [53, 56], "narrow": [53, 56], "vallei": [53, 56], "scaledbranin": [53, 56, 66, 68, 69, 70, 75, 76, 80, 84, 90], "shekel4": [53, 56], "shekel": [53, 56], "ten": [53, 56, 70, 88], "simplequadrat": [53, 56], "trivial": [53, 56, 71, 75], "quick": [53, 56], "trid10": [53, 56, 72], "trid": [53, 56, 72], "mk_multi_observ": [53, 57, 71], "multiobserv": [53, 57, 58, 71], "mk_observ": [53, 57, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90], "singleobserv": [53, 57, 58], "dtlz_mkd": 54, "dtlz": 54, "toi": [56, 69, 75, 87], "virtual": 56, "experi": [56, 64, 79, 86, 90], "web": 56, "archiv": 56, "20211015101644": 56, "ssurjano2021": 56, "check_objective_shap": 56, "scaled_branin": [56, 66, 75, 80], "simple_quadrat": [56, 71], "gramacy_le": 56, "logarithmic_goldstein_pric": 56, "hartmann_3": 56, "shekel_4": 56, "levy_8": 56, "easi": [56, 64, 72, 73], "difficult": [56, 72, 73, 82, 85, 86], "rosen": 56, "rosenbrock_4": 56, "ackley_5": 56, "hartmann_6": [56, 87], "pi": [56, 73, 74, 82, 86], "ridg": [56, 73], "drop": 56, "multimod": 56, "egg": 56, "michalewicz_2": 56, "michalewicz_5": 56, "michalewicz_10": 56, "challeng": [56, 65], "vanilla": 56, "deal": [56, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89], "stationar": [56, 73, 74], "hbb": [56, 64, 72, 74], "trid_10": 56, "toolbox": [57, 65], "mk_batch_observ": 57, "objective_or_observ": [57, 85], "default_kei": 57, "definit": [58, 71, 75, 81], "unlabel": 58, "filter_finit": 58, "map_is_finit": 58, "uint8": 58, "default_dtyp": 59, "encoderfunct": 59, "encod": [59, 73, 83], "sampletimeouterror": 59, "nonlinearconstraint": [59, 76], "lb": [59, 76, 82], "ub": [59, 76, 82], "keep_feas": 59, "throughout": [59, 68, 78], "__eq__": 59, "ident": [59, 75], "linearconstraint": [59, 76], "has_bound": 59, "meaning": 59, "has_constraint": 59, "reproduc": [59, 69, 83], "membership": 59, "_contain": 59, "__contains__": 59, "insist": 59, "cartesian": 59, "__mul__": 59, "__pow__": 59, "expon": 59, "constraints_residu": 59, "is_feas": [59, 76, 79], "generaldiscretesearchspac": 59, "assert": [59, 86], "sa": 59, "sb": 59, "int32": 59, "typeerror": 59, "hasonehotencod": 59, "hot": 59, "one_hot_encod": 59, "categoricalsearchspac": 59, "_1": 59, "cdot": 59, "_n": 59, "blue": [59, 70, 73, 75, 79, 81, 82, 86], "rgb": 59, "to_tag": 59, "multidimension": 59, "yn": 59, "ye": 59, "No": [59, 64], "ctol": 59, "mathemat": [59, 64], "inclus": 59, "satisfact": 59, "coordin": [59, 76, 90], "sample_halton": [59, 66, 78], "halton": [59, 66, 75, 76, 78], "sample_sobol": [59, 72, 73, 74, 75, 86, 90], "_sample_feasible_loop": 59, "max_tri": 59, "sample_feas": 59, "sample_halton_feas": [59, 76], "sample_sobol_feas": 59, "unit_interv": 59, "square_at_origin": 59, "new_box": 59, "subspace_low": 59, "subspace_upp": 59, "subspace_dimens": 59, "repr": 59, "get_subspac": 59, "subspace_sampl": 59, "context_spac": 59, "decision_spac": 59, "mixed_spac": 59, "subpsac": 59, "unchang": [59, 71], "fix_subspac": 59, "restrict": [59, 64, 71], "get_subspace_compon": 59, "dprod": 59, "dsub": 59, "tree": [59, 65], "usual": [59, 71, 72, 73, 74, 76, 83, 89], "interact": 59, "regener": [59, 68], "alias": 60, "referenti": 60, "mutabl": 60, "singular": [61, 62], "err": [61, 62, 73, 85], "exc": [61, 62], "noreturn": [61, 62], "alwai": [61, 62, 69, 73, 83], "unwrap": [61, 62, 75, 77, 80, 81, 83, 89], "ok": [61, 62], "other_r": [61, 62], "whoop": [61, 62], "traceback": [61, 62, 85], "recent": [61, 62, 73, 85], "opposit": [61, 62], "chunk": [61, 62], "sleep": [61, 62, 69], "doctest": [61, 62], "flatten_leading_dim": [61, 62], "manipul": [61, 62], "jit": [61, 62], "optimize_kwarg": [61, 62], "condition": [61, 62], "map_valu": [61, 62, 79], "shapes_equ": [61, 62], "runtim": [61, 62], "to_numpi": [61, 62], "get_value_for_tag": 62, "localizedtag": 62, "is_loc": 62, "global_tag": 62, "portion": 62, "local_index": 62, "from_tag": 62, "ignoring_local_tag": 62, "get_vari": 62, "reimplement": 62, "substructur": 62, "sort": 62, "submodul": 62, "recurs": 62, "breadth": 62, "_flatten": 62, "predic": 62, "attribute_traversal_kei": 62, "with_path": 62, "expand_composit": 62, "verbatim": [62, 83], "_flatten_modul": 62, "attributes_to_ignor": 62, "module_path": 62, "seen": [62, 75, 77], "expos": [63, 71], "ahsan": 64, "alvi": 64, "binxin": 64, "ru": 64, "jan": 64, "peter": 64, "calliess": 64, "stephen": 64, "robert": 64, "michael": 64, "osborn": 64, "penalis": [64, 76], "confer": 64, "machin": [64, 68, 69], "2019": 64, "assr19": [64, 73], "alexand": 64, "amini": 64, "wilko": 64, "schwart": 64, "ava": 64, "soleimani": 64, "daniela": 64, "evidenti": [64, 73], "preprint": 64, "1910": 64, "02600": 64, "julien": 64, "bect": 64, "david": 64, "ling": 64, "victor": 64, "picheni": 64, "emmanuel": 64, "vazquez": 64, "773": 64, "793": 64, "2012": 64, "barron": 64, "eldr": 64, "laura": 64, "painton": 64, "swiler": 64, "sandaran": 64, "mahadevan": 64, "john": 64, "mcfarland": 64, "reliabl": [64, 78, 89], "analysi": [64, 68], "implicit": 64, "aiaa": 64, "journal": 64, "46": [64, 69], "2459": 64, "2468": 64, "2008": 64, "mickael": 64, "nicholson": 64, "collier": 64, "jonathan": 64, "ozik": 64, "portfolio": [64, 84], "massiv": 64, "2110": 64, "09334": 64, "bckw15": [64, 73], "charl": 64, "blundel": 64, "cornebis": 64, "korai": 64, "kavukcuoglu": 64, "daan": 64, "wierstra": 64, "1613": 64, "1622": 64, "pmlr": 64, "2015": 64, "burt": 64, "carl": 64, "edward": 64, "rasmussen": 64, "mark": [64, 67, 71, 73, 80, 83, 90], "van": 64, "der": 64, "wilk": 64, "862": 64, "871": 64, "lame": 64, "chen": 64, "guoxin": 64, "zhang": 64, "eric": 64, "zhou": 64, "advanc": [64, 83], "2018": 64, "cl": 64, "\u00e9": 64, "ment": 64, "intellig": 64, "59": 64, "69": 64, "springer": 64, "2013": 64, "xavier": 64, "emeri": 64, "assimil": 64, "planet": 64, "earth": [64, 65], "page": 64, "119": 64, "122": 64, "2014": 64, "ivo": 64, "couckuyt": 64, "dirk": 64, "deschrijv": 64, "tom": 64, "dhaen": 64, "multiobject": 64, "ieee": 64, "congress": 64, "evolutionari": 64, "cec": 64, "doi": 64, "1109": 64, "6256586": 64, "samuel": 64, "daulton": 64, "maximilian": 64, "balandat": 64, "eytan": 64, "bakshi": 64, "differenti": [64, 80], "05078": 64, "2020": [64, 74], "kalyanmoi": 64, "deb": 64, "lothar": 64, "thiel": 64, "marco": 64, "laumann": 64, "eckart": 64, "zitzler": 64, "scalabl": [64, 91], "proceed": 64, "2002": 64, "02": [64, 85], "cat": 64, "02th8600": 64, "825": 64, "830": 64, "youssef": 64, "diouan": 64, "rodolph": 64, "le": 64, "rich": 64, "alexandr": 64, "scotto": 64, "di": 64, "perrotolo": 64, "trego": 64, "framework": [64, 84, 89], "2022": 64, "2101": 64, "06808": 64, "dkvdh": [64, 74], "vincent": 64, "dutordoir": 64, "nicola": 64, "knudd": 64, "joachim": 64, "herten": 64, "aussian": 64, "metamodel": 64, "respons": [64, 69, 89], "2017": 64, "winter": 64, "wsc": 64, "1728": 64, "1739": 64, "8247911": 64, "eriksson": 64, "pearc": 64, "jacob": 64, "gardner": 64, "ryan": 64, "turner": 64, "matthia": 64, "poloczek": 64, "5496": 64, "5507": 64, "url": 64, "nip": 64, "cc": 64, "8788": 64, "fonseca": 64, "fleme": 64, "mate": 64, "engin": [64, 83], "innov": 64, "52": 64, "1995": 64, "1049": 64, "cp": 64, "19951023": 64, "gg16": [64, 73], "yarin": 64, "gal": 64, "zoubin": 64, "ghahramani": 64, "dropout": [64, 73], "1050": 64, "1059": 64, "2016": 64, "matt": 64, "kusner": 64, "zhixiang": 64, "kilian": 64, "weinberg": 64, "cunningham": 64, "inequ": [64, 71, 76, 81, 91], "31st": 64, "research": [64, 65, 73, 83], "jun": 64, "mlr": 64, "press": 64, "v32": 64, "gardner14": 64, "giang": 64, "trinh": 64, "bivari": 64, "quasi": [64, 76], "289": 64, "302": 64, "laurent": 64, "carraro": 64, "suit": [64, 78], "131": 64, "162": 64, "berlin": 64, "heidelberg": 64, "2010": 64, "1007": 64, "978": 64, "642": 64, "10701": 64, "6_6": 64, "javier": 64, "gonz": 64, "\u00e1": 64, "lez": 64, "zhenwen": 64, "dai": [64, 68], "philipp": 64, "hennig": 64, "neil": 64, "lawrenc": 64, "herbert": 64, "kh": 64, "nugget": 64, "713": 64, "722": 64, "ali": 64, "hebbal": 64, "loic": 64, "brevault": 64, "mathieu": 64, "balesd": 64, "el": 64, "ghazali": 64, "talbi": 64, "nouredin": 64, "melab": 64, "1905": 64, "03350": 64, "jm": 64, "hern": 64, "ndez": 64, "lobato": 64, "mw": 64, "hoffman": 64, "hernandezla15": [64, 73], "jo": 64, "miguel": 64, "backpropag": 64, "1861": 64, "1869": 64, "jame": 64, "requeima": 64, "pyzer": 64, "knapp": 64, "aspuru": 64, "guzik": 64, "acceler": 64, "chemic": 64, "houlsbi": 64, "ferenc": 64, "husz\u00e1r": 64, "m\u00e1t\u00e9": 64, "lengyel": 64, "prefer": [64, 67], "2011": 64, "1112": 64, "5745": 64, "deng": 64, "theodor": 64, "allen": 64, "william": 64, "notz": 64, "ning": 64, "zeng": 64, "meta": [64, 80, 89], "donald": 64, "jone": 64, "schonlau": 64, "welch": 64, "455": 64, "492": 64, "1998": 64, "klhg21": [64, 73], "arlind": 64, "kadra": 64, "mariu": 64, "lindauer": 64, "frank": 64, "hutter": 64, "josif": 64, "grabocka": 64, "tune": [64, 83], "net": 64, "excel": [64, 83], "tabular": 64, "kirthevasan": 64, "kandasami": 64, "akshai": 64, "krishnamurthi": 64, "jeff": 64, "schneider": 64, "barnaba": 64, "poczo": 64, "parallelis": 64, "amo": 64, "storkei": 64, "fernando": 64, "perez": 64, "cruz": 64, "editor": 64, "twenti": [64, 74, 77, 79], "84": 64, "133": 64, "142": 64, "v84": 64, "kandasamy18a": 64, "kennedi": 64, "hagan": 64, "biometrika": 64, "87": 64, "03": [64, 85], "2000": [64, 69, 70, 73], "lpb16": [64, 73], "balaji": 64, "lakshminarayanan": 64, "pritzel": 64, "1612": 64, "01474": 64, "mackai": 64, "590": 64, "604": 64, "1992": 64, "moss": 64, "ober": 64, "throughput": 64, "ayesian": 64, "fith": 64, "2023": 64, "henri": 64, "lesli": 64, "gonzalez": 64, "paul": 64, "rayson": 64, "49": 64, "knowledg": 64, "discoveri": 64, "databas": [64, 68], "european": 64, "ecml": 64, "pkdd": 64, "ghent": 64, "belgium": 64, "septemb": 64, "18": [64, 81, 82], "iii": 64, "mlr20": [64, 83], "bosh": [64, 83], "hierarch": 64, "nr08": [64, 67], "hann": 64, "nickisch": 64, "67": 64, "2035": 64, "2078": 64, "jmlr": 64, "v9": 64, "nickisch08a": 64, "manfr": 64, "opper": 64, "dric": 64, "archambeau": 64, "revisit": 64, "2009": 64, "owa": [64, 73], "ian": 64, "osband": 64, "zheng": 64, "wen": 64, "mohammad": 64, "asghari": 64, "morteza": 64, "ibrahimi": 64, "xiyuan": 64, "lu": 64, "benjamin": 64, "roi": 64, "2107": 64, "08924": 64, "perdikari": 64, "raissi": 64, "damian": 64, "karniadaki": 64, "fusion": 64, "royal": 64, "societi": 64, "physic": [64, 68], "scienc": 64, "olivi": 64, "roustant": 64, "raphael": 64, "haftka": 64, "nam": 64, "ho": 64, "kim": 64, "mechan": 64, "tobia": 64, "wagner": 64, "benchmark": [64, 69, 80, 81, 83], "infil": 64, "structur": [64, 71, 74], "multidisciplinari": 64, "48": [64, 86], "s00158": 64, "013": 64, "0919": 64, "pritam": 64, "derek": 64, "bingham": 64, "georg": 64, "michailidi": 64, "technometr": 64, "527": 64, "541": 64, "hugh": 64, "salimbeni": 64, "stefano": 64, "eleftheriadi": 64, "hensman": 64, "conjug": 64, "versu": 64, "lectur": 64, "monograph": 64, "niranjan": 64, "sriniva": 64, "andrea": 64, "kraus": 64, "seeger": 64, "sham": 64, "kakad": 64, "bandit": 64, "johann": 64, "\u00fc": 64, "rnkranz": 64, "thorsten": 64, "27th": 64, "icml": 64, "1015": 64, "1022": 64, "omnipress": 64, "michali": 64, "titsia": 64, "onard": 64, "torossian": 64, "durrand": 64, "expectil": 64, "2001": 64, "04833": 64, "sattar": 64, "vakili": 64, "artem": 64, "artemev": 64, "veldhuizen": 64, "gari": 64, "lamont": 64, "1999": 64, "acm": 64, "symposium": 64, "351": 64, "357": 64, "zi": 64, "wang": 64, "stefani": 64, "jegelka": 64, "1703": 64, "01968": 64, "wzh": [64, 86], "ziyu": 64, "masrour": 64, "zoghi": 64, "matheson": 64, "nando": 64, "de": 64, "freita": 64, "embed": [64, 86], "ijcai": 64, "1778": 64, "1784": 64, "wilson": 64, "viacheslav": 64, "borovitskii": 64, "terenin": 64, "mostowski": 64, "marc": 64, "deisenroth": 64, "kaifeng": 64, "yang": 64, "emmerich": 64, "andr": 64, "deutz": 64, "thoma": 64, "\u00e4": 64, "ck": 64, "75": [64, 81], "34": [64, 67, 68, 69, 70, 72, 76, 81, 84, 85, 86, 87], "dedic": [65, 71, 75], "simplest": [65, 71, 73], "mathop": 65, "argmin": [65, 68, 69, 70, 72, 73, 74, 77, 83, 84, 85, 87, 88, 89], "talk": 65, "extens": [65, 90], "pronounc": 65, "est": 65, "bathyscaph": 65, "vehicl": 65, "crew": 65, "mariana": 65, "trench": 65, "liter": 65, "pip": [65, 84, 90, 91], "onward": 65, "semant": 65, "welcom": 65, "submit": 65, "pull": 65, "bug": 65, "report": [65, 90], "guidelin": 65, "anyth": [65, 71], "join": [65, 69], "channel": 65, "secondmind": 65, "lab": [65, 68], "commun": [65, 78], "slack": 65, "workspac": 65, "notebook": [66, 68, 69, 70, 71, 72, 74, 76, 77, 80, 83, 85, 86, 87, 89, 90, 91], "triest": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91], "inlin": [66, 78], "np": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "1793": [66, 67, 75, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90], "set_se": [66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "initial_query_point": [66, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90], "initial_data": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "gpflow_model": [66, 69, 70, 74, 75, 76, 78, 80, 81, 84, 87, 88, 89], "uncertain": 66, "now": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90], "onto": 66, "acq": [66, 67, 78], "bo_it": 66, "retriev": [66, 69], "landscap": [66, 67], "plot_active_learning_queri": 66, "num_queri": 66, "pred_var": 66, "x_1": [66, 67, 70, 73, 75, 76, 78, 80, 81], "x_2": [66, 67, 70, 73, 75, 76, 78, 80, 81], "opt": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87], "hostedtoolcach": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87], "x64": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87], "lib": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87], "python3": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87], "site": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87], "_mathtext": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "1880": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "userwarn": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "warn_name_set_on_empty_forward": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "39": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 84, 85, 86, 87, 90], "sym": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "1885": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "warn_ungrouped_named_tokens_in_collect": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "zeroormor": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "collid": [66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 84, 86, 87], "drawback": 66, "visual": [66, 67, 70, 75, 79, 80, 81, 91], "apach": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90], "littl": [67, 69], "tutori": [67, 73, 75, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90], "bayesain": 67, "bald": 67, "cast": [67, 72, 75, 77, 78, 81, 85, 86], "reduce_sum": [67, 71], "keepdim": [67, 71, 79], "outsid": [67, 68, 73, 74, 76, 77, 79, 81], "placeabl": [67, 68, 69, 70, 72, 76, 81, 84, 86, 87], "unknown_symbol": [67, 68, 69, 70, 72, 76, 81, 84, 86, 87], "mutual": 67, "mid": [67, 82], "final_dataset": [67, 86], "final_model": [67, 78], "cross": [67, 73, 75, 76, 81, 87, 88, 89], "invlink": 67, "setup": [68, 70, 76, 77, 80, 83, 85, 88, 89], "introductori": 68, "1234": [68, 70, 76, 77], "n_step": 68, "build_model": [68, 73, 75, 83, 86, 89], "kernel_func": 68, "reduce_vari": [68, 72, 75, 83, 86], "noise_vari": [68, 72, 75, 86], "set_train": [68, 72, 75, 83, 86], "sai": 68, "concern": 68, "handi": 68, "timeit": [68, 69], "ask_tel": [68, 72, 90], "default_tim": [68, 69], "5218642599999157": 68, "05281131499998537": 68, "05628922899995814": 68, "05628299800002878": 68, "05733938900004887": 68, "plot_ask_tell_regret": 68, "ask_tell_result": 68, "arg_min_idx": [68, 72, 73, 75, 76, 77, 80, 85, 88, 89], "suboptim": [68, 70, 72, 73, 75, 86], "gca": [68, 72, 83], "set_yscal": [68, 69, 70, 72, 74, 75, 84, 86, 87], "set_ylabel": [68, 69, 70, 72, 73, 74, 75, 76, 80, 81, 84, 86, 87], "set_ylim": [68, 69, 70, 72, 74, 75, 84, 86], "set_xlabel": [68, 69, 70, 72, 73, 74, 75, 76, 80, 81, 84, 86, 87], "ones": [68, 71, 78, 81, 82, 84], "model1": 68, "model2": 68, "meaningless": 68, "hopefulli": [68, 83], "ask_onli": 68, "new_data_point": [68, 72], "47": 68, "lt": [68, 71, 73, 74, 75, 76, 79, 81, 85], "0x7fe47089f010": 68, "gt": [68, 71, 73, 74, 75, 76, 79, 81, 85], "trace": [68, 74, 76, 79, 81], "excess": [68, 74, 76, 79, 81], "reduce_retrac": [68, 74, 76, 79, 81], "unnecessari": [68, 71, 74, 76, 79, 81], "guid": [68, 73, 74, 76, 79, 81, 89], "controlling_retrac": [68, 74, 76, 79, 81], "api_doc": [68, 74, 76, 79, 81], "0x7fe47089e950": 68, "hour": 68, "big": [68, 83], "go": [68, 83], "intermedi": 68, "storag": 68, "mimick": 68, "read": [68, 69, 83], "new_config": 68, "saved_st": 68, "dump": 68, "new_datapoint": 68, "loaded_st": 68, "issu": 68, "neverthless": 68, "recreat": [68, 74], "_acquisition_rul": 68, "acq_fn": [68, 77, 83], "saved_acq_fn": 68, "asktel": 68, "loaded_acq_fn": 68, "serial": 68, "techniqu": 68, "smoothli": 68, "besid": [69, 75], "silenc": [69, 72, 73, 78], "info": [69, 72, 73, 75, 78, 83], "35911252": [69, 72, 73, 78], "debug": [69, 72, 73, 78, 86], "environ": [69, 72, 73, 78, 83], "tf_cpp_min_log_level": [69, 72, 73, 78], "get_logg": [69, 72, 73, 78], "setlevel": [69, 72, 73, 78], "emul": 69, "classic": [69, 83], "insert": 69, "middl": [69, 80, 82, 83], "delai": [69, 78], "sure": 69, "uneven": 69, "incorrect": 69, "got": 69, "pid": 69, "getpid": 69, "pretend": [69, 85], "someth": [69, 71], "flush": 69, "append": [69, 80, 81, 82, 83, 86, 89], "42052567": 69, "kick": 69, "initial_observ": 69, "queue": 69, "One": [69, 73, 78, 85, 90], "accumul": [69, 86], "overal": [69, 70, 89], "diagram": 69, "primit": 69, "observer_proc": 69, "points_queu": 69, "observations_queu": 69, "point_to_observ": 69, "new_observ": [69, 79], "enable_sleep_delai": 69, "put": [69, 72, 75], "done": [69, 70, 72, 81, 83], "create_worker_process": 69, "n_worker": 69, "obseverations_queu": 69, "observer_process": 69, "worker_proc": 69, "daemon": 69, "terminate_process": 69, "prc": 69, "comment": 69, "explan": 69, "simultan": 69, "num_work": 69, "sycnhron": 69, "num_iter": 69, "num_observ": 69, "flag": [69, 83], "safe": [69, 75, 78, 83, 84, 85], "crucial": [69, 79], "realli": 69, "notic": [69, 79, 82], "local_penalization_acq": [69, 70], "local_penalization_rul": [69, 70], "async_bo": 69, "id": 69, "nice": 69, "pq": 69, "oq": 69, "counter": 69, "points_observ": 69, "atleast_2d": 69, "get_nowait": 69, "async_lp_observ": 69, "async_lp_tim": 69, "len": [69, 75, 83, 84, 87], "2f": 69, "3154": 69, "13047468": 69, "55833821": 69, "3158": 69, "18446339": 69, "64754089": 69, "3162": 69, "07819165": 69, "63315983": 69, "78808089": 69, "3112": 69, "21154936": 69, "58609367": 69, "61829272": 69, "97168419": 69, "16633687": 69, "68731866": 69, "18823922": 69, "61452891": 69, "90359489": 69, "00660792": 69, "17842678": 69, "6232771": 69, "95361443": 69, "15074487": 69, "68825276": 69, "14971695": 69, "69684121": 69, "96784953": 69, "14889382": 69, "70480938": 69, "0131914": 69, "1440428": 69, "74441763": 69, "01772932": 69, "14565515": 69, "73882385": 69, "02161211": 69, "1411611": 69, "75801131": 69, "03602494": 69, "08103521": 69, "98137222": 69, "03420696": 69, "09965687": 69, "91268126": 69, "03959817": 69, "09255312": 69, "93941164": 69, "99667997": 69, "03001875": 69, "11546774": 69, "8661376": 69, "01901271": 69, "12498161": 69, "82843866": 69, "12541255": 69, "82614287": 69, "04266393": 69, "04666883": 69, "32862645": 69, "04677762": 69, "65618183": 69, "84406373": 69, "48859659": 69, "94621151": 69, "86108826": 69, "32547332": 69, "11712021": 69, "90225279": 69, "17976844": 69, "65741386": 69, "85815032": 69, "09512356": 69, "65343986": 69, "70412806": 69, "96416723": 69, "86588946": 69, "95595611": 69, "19622944": 69, "69855224": 69, "95861953": 69, "17699192": 69, "95667676": 69, "16446912": 69, "04111564": 69, "0462881": 69, "94331215": 69, "11653986": 69, "04682276": 69, "94331717": 69, "12368499": 69, "55553483": 69, "29361114": 69, "again": [69, 72, 73, 75, 84, 85], "immediatelli": 69, "sync_bo": 69, "send": 69, "reshap": [69, 76, 77, 78, 79, 83], "finish": 69, "all_new_data": 69, "sync_lp_observ": 69, "sync_lp_tim": 69, "3584": 69, "07813815": 69, "63314074": 69, "3580": 69, "1844331": 69, "64758113": 69, "5sprocess": 69, "3576": 69, "13047281": 69, "55833873": 69, "78807308": 69, "61779163": 69, "97174328": 69, "18429778": 69, "61930923": 69, "20095258": 69, "59931618": 69, "22304752": 69, "57465143": 69, "4sprocess": 69, "87538653": 69, "92816811": 69, "96049669": 69, "16383772": 69, "66116398": 69, "16536901": 69, "65415418": 69, "16666334": 69, "64770714": 69, "98857335": 69, "99283205": 69, "9973097": 69, "15456687": 69, "70201889": 69, "15621712": 69, "69277053": 69, "15542541": 69, "69730217": 69, "01530353": 69, "01746167": 69, "0196261": 69, "14098875": 69, "75307181": 69, "1391758": 69, "75976027": 69, "14271573": 69, "74670079": 69, "7sprocess": 69, "03689881": 69, "0386985": 69, "04040528": 69, "07231003": 69, "10198659": 69, "8971509": 69, "09087752": 69, "93565781": 69, "2sprocess": 69, "1sprocess": 69, "03474488": 69, "01961518": 69, "98281315": 69, "12559337": 69, "82714617": 69, "12523323": 69, "82957517": 69, "12597287": 69, "82472688": 69, "9sprocess": 69, "04674296": 69, "04661403": 69, "04645133": 69, "32008692": 69, "63908855": 69, "0sprocess": 69, "9553957": 69, "1833701": 69, "87522171": 69, "10963963": 69, "89445123": 69, "26750104": 69, "90239119": 69, "19073055": 69, "91259366": 69, "95848482": 69, "86316132": 69, "96961013": 69, "17402507": 69, "97340796": 69, "19808531": 69, "97169392": 69, "18610914": 69, "04605774": 69, "04463037": 69, "04225605": 69, "outcom": [69, 84], "sync": 69, "async": 69, "side": [69, 73, 74, 83], "bit": [69, 78, 86], "subplot": [69, 70, 73, 74, 75, 79, 82, 84, 86, 87], "sync_lp_min_idx": 69, "async_lp_min_idx": 69, "0000001": [69, 70], "set_titl": [69, 70, 73, 74, 84, 86], "lp": 69, "tight_layout": [69, 70, 75], "four": [70, 79], "seek": [70, 76], "five": [70, 74, 75, 76, 79, 80, 87, 88], "largest": 70, "oberv": 70, "superior": 70, "poorli": [70, 73], "degre": 70, "monte_carlo_sample_s": 70, "batch_ei_acq": 70, "batch_ei_acq_rul": 70, "points_chosen_by_batch_ei": 70, "local_penalization_acq_rul": 70, "points_chosen_by_local_pen": 70, "kriging_believer_acq": 70, "kriging_believer_acq_rul": 70, "points_chosen_by_kriging_believ": 70, "gibbon_acq": 70, "gibbon_acq_rul": 70, "points_chosen_by_gibbon": 70, "overlai": 70, "wherea": [70, 86], "ei_acq_funct": 70, "lw": 70, "zorder": [70, 76], "npenal": 70, "nbeliev": 70, "legend": [70, 75, 82, 84], "bbox_to_anchor": [70, 82], "loc": [70, 75, 82], "cbar": 70, "set_label": 70, "rotat": 70, "270": 70, "three": [70, 71, 73, 74, 75, 79, 80, 82, 83, 86, 88], "batch_ei_rul": 70, "qei_result": 70, "local_penalization_result": 70, "kriging_believer_rul": 70, "kriging_believer_result": 70, "gibbon_rul": 70, "gibbon_result": 70, "orang": [70, 73, 75, 76, 79, 82, 87], "dot": [70, 73, 75, 79, 81, 87, 88, 89], "fastest": 70, "roughli": 70, "qei_observ": 70, "qei_min_idx": 70, "local_penalization_observ": 70, "local_penalization_min_idx": 70, "kriging_believer_observ": 70, "kriging_believer_min_idx": 70, "gibbon_observ": 70, "gibbon_min_idx": 70, "mutipl": 71, "somehow": 71, "acuqisit": 71, "multip": 71, "meanwhil": 71, "easili": [71, 72, 73, 74, 75, 80], "hybrid": 71, "__future__": [71, 77], "annot": [71, 77, 80, 85, 89], "acqusit": 71, "simple_constraint": 71, "reduce_min": [71, 79, 84, 85], "miss": [71, 73], "involv": [71, 73, 75, 78], "clariti": 71, "gizmomodel": 71, "runtime_check": 71, "alow": 71, "elsewher": [71, 83], "hasgizmo": 71, "gizmo": 71, "hasgizmoreparamsamplerandobservationnois": 71, "modelacquisitionbuild": 71, "bracket": 71, "checker": 71, "probabilityofvalid": [71, 77], "sens": [71, 81, 84], "sufici": 71, "probabilityofvalidity2": 71, "1794": [72, 73, 74], "luckili": [72, 87], "disadvantag": 72, "care": 72, "vari": 72, "210": 72, "f_minimum": 72, "build_gp_model": 72, "x_std": 72, "y_std": 72, "empirical_vari": 72, "prior_lengthscal": 72, "prior_scal": [72, 75, 86], "lognorm": [72, 75, 86], "10000": 72, "necessarili": [72, 73, 74, 75, 76, 80], "did": [72, 75], "16241501": 72, "14978608": 72, "59754825": 72, "25901084": 72, "88421116": 72, "41": 72, "94497499": 72, "68305277": 72, "09315358": 72, "42": 72, "47048934": 72, "66": 72, "57413937": 72, "4403": 72, "86390156": 72, "plot_regret_with_min": 72, "100000": 72, "standardis": [72, 75], "reduce_mean": [72, 79, 83, 90], "suffic": 72, "wherebi": 72, "x_sta": 72, "x_mean": 72, "y_sta": 72, "y_mean": 72, "normalised_data": 72, "inspect": [72, 75], "almost": [72, 73, 75], "3623378": 72, "86357781": 72, "51415973": 72, "6250936": 72, "29": 72, "94412811": 72, "55239758": 72, "51155394": 72, "17627839": 72, "33283705": 72, "51511639": 72, "208": 72, "09772932": 72, "surrog": [73, 74, 83, 87], "beat": 73, "budget": [73, 81, 85, 87], "captur": [73, 82], "slow": [73, 78], "stem": 73, "misspecif": 73, "elimin": 73, "aleator": 73, "plai": 73, "role": 73, "balanc": [73, 84], "ingredi": 73, "bay": [73, 74], "backprop": 73, "systemat": [73, 75], "comparison": [73, 90], "major": 73, "evid": 73, "job": [73, 74], "replic": [73, 79], "exercis": 73, "pow": 73, "num_point": 73, "build_cubic_model": 73, "num_nod": 73, "keras_ensembl": 73, "0x7f6e5c6edd50": 73, "extrapol": 73, "farther": 73, "exhibit": 73, "fairli": 73, "rightmost": 73, "panel": [73, 79], "hamiltonian": 73, "golden": 73, "assur": 73, "test_point": 73, "linspac": [73, 76, 82], "ground": 73, "truth": 73, "y_hat": 73, "y_var": 73, "y_hat_minus_3sd": 73, "y_hat_plus_3sd": 73, "grai": 73, "fill_between": 73, "3sd": 73, "ylim": 73, "seriou": 73, "flat": [73, 83], "everywher": [73, 82], "unfortun": [73, 87], "lengthi": [73, 78], "retrain": 73, "offer": [73, 90], "advic": 73, "affect": [73, 78, 90], "capac": 73, "poor": 73, "suspect": 73, "With": [73, 78, 87, 88, 89], "regard": [73, 74], "lot": [73, 74], "literatur": [73, 75], "worthwhil": 73, "earlystop": 73, "suffici": [73, 85, 86], "address": 73, "21381846": 73, "57227431": 73, "79927236": 73, "8013034": 73, "visualis": [73, 74, 75, 76, 77, 79, 81, 84], "vicin": 73, "95": [73, 74, 75], "shown": [73, 75, 80, 83, 89], "dgp": 74, "better": [74, 75, 76, 83, 84, 87], "f_minim": 74, "shallow": 74, "set_stat": 74, "background": 74, "functool": 74, "partial": 74, "build_dgp_model": 74, "dgp_model": 74, "342": 74, "multivariatenormaldiag": 74, "mvn_diag": 74, "scale_identity_multipli": 74, "deprec": 74, "instruct": 74, "scale_diag": 74, "dgp_result": 74, "dgp_dataset": 74, "0x7f6c23835a20": 74, "0x7f6c234b1fc0": 74, "dgp_query_point": 74, "dgp_observ": 74, "dgp_arg_min_idx": 74, "19634826": 74, "5960335": 74, "77473032": 74, "gp_model": 74, "gp_dataset": 74, "gp_query_point": 74, "gp_observ": 74, "gp_arg_min_idx": 74, "20267349": 74, "57829009": 74, "79901999": 74, "On": [74, 78], "gp_suboptim": 74, "dgp_suboptim": 74, "88377634": 74, "47870954": 74, "42776428": 74, "96987102": 74, "97230414": 74, "18461384": 74, "39002255": 74, "53970234": 74, "21992787": 74, "74455962": 74, "76705085": 74, "62917686": 74, "consider": 74, "predefin": [75, 80], "direct": [75, 83], "indirectli": 75, "benefit": [75, 82], "ouput": 75, "dozen": 75, "fifteen": [75, 85], "lose": 75, "crude": 75, "review": 75, "realtim": [75, 91], "5422248": 75, "1526182": 75, "04738646": 75, "optima": [75, 76], "evolv": [75, 81], "possib": 75, "ourselv": 75, "print_summari": 75, "variance_list": 75, "ls_list": 75, "4175": 75, "5516": 75, "50766": 75, "88904": 75, "resourcevari": 75, "75563": 75, "81419": 75, "69841": 75, "40": [75, 88, 89], "reload": [75, 85], "yourself": [75, 85], "results_path": 75, "saved_result": 75, "0x7fb276eb7580": 75, "float642": 75, "53971": 75, "lognormaltru": 75, "float645": 75, "16341": 75, "lengthscalesparamet": 75, "54678": 75, "1368": 75, "varianceparamet": 75, "float640": 75, "savedmodel": 75, "export": 75, "input_signatur": 75, "model_path": 75, "asset": [75, 84], "written": 75, "94119209": 75, "00030434": 75, "_nlc_func0": 76, "c0": 76, "sin": [76, 79, 81, 82], "expand_dim": [76, 79], "_nlc_func1": 76, "c1": 76, "co": [76, 79, 81], "unconstrained_search_spac": 76, "constrained_search_spac": 76, "staticmethod": [76, 79, 81], "invert": 76, "xi": 76, "xj": 76, "vstack": 76, "ravel": 76, "constraint_valu": 76, "edgecolor": 76, "contourf": 76, "constr": 76, "_hessian_update_strategi": 76, "182": 76, "delta_grad": 76, "hessian": 76, "newton": 76, "17185311": 76, "67184162": 76, "99607644": 76, "plot_bo_result": 76, "fea": 76, "eci": [76, 79], "0x7fd0d844bd00": 76, "16545253": 76, "66525033": 76, "99877596": 76, "But": [77, 85], "masked_branin": 77, "null": 77, "radiu": 77, "rememb": [77, 83], "know": [77, 79, 84, 85], "view": [77, 85], "mask_nan": [77, 79], "nan": [77, 78, 79], "convert_to_tensor": [77, 78, 79, 83], "mention": [77, 83], "white": [77, 78], "centr": 77, "isfinit": 77, "num_init_point": 77, "regression_model": 77, "classification_model": 77, "natgrad": 77, "pov": 77, "96267201": 77, "17098895": 77, "bottom": [77, 83], "astyp": [77, 79], "unsatisfactori": 78, "decid": 78, "identif": 78, "tradit": [78, 87], "mind": 78, "stand": 78, "80": 78, "complement": 78, "thresholded_branin": 78, "descript": 78, "aspect": 78, "alon": 78, "excursion_prob": 78, "t0": 78, "plot_excursion_prob": 78, "objective_funct": 78, "corner": 78, "loos": 78, "decreas": [78, 83, 84], "initial_model": [78, 79], "examin": 78, "updated_model": 78, "closer": 78, "collaps": 78, "advantag": 78, "acq_ivr": 78, "rule_ivr": 78, "result_ivr": 78, "final_model_ivr": 78, "dataset_ivr": 78, "query_points_ivr": 78, "spread": 78, "110": 78, "acq_rang": 78, "rule_rang": 78, "result_rang": 78, "exce": 78, "ivr": 78, "final_model_rang": 78, "dataset_rang": 78, "query_points_rang": 78, "ef": 78, "1799": 79, "create_bo_model": 79, "pof": [79, 81], "0x7f9fec4e11b0": 79, "conclud": [79, 81], "new_query_point": 79, "earlier": [79, 89], "batch_efi": 79, "batchexpectedconstrainedimprov": 79, "_sample_s": 79, "_threshold": 79, "objective_dataset": [79, 81], "pf": [79, 81], "feasible_mask": 79, "batch_improv": 79, "reduce_max": 79, "batch_eci": 79, "batch_rul": [79, 81], "batch_data": 79, "batch_constraint_data": 79, "new_batch_data": 79, "vertic": [79, 80, 81, 87], "batch_mask_fail": 79, "sharei": 79, "sim2": 79, "threshold2": 79, "constraint2": 79, "observer_two_constraint": 79, "pof1": 79, "pof2": 79, "masked_object": 79, "logical_or": 79, "mask_fail1": 79, "mask_fail2": 79, "modif": 80, "equidist": 80, "instanti": [80, 82, 89], "minimizers0": 80, "flip": [80, 83], "arang": 80, "discrete_spac": 80, "continuous_spac": 80, "mixed_search_spac": 80, "highlight": [80, 87], "dash": 80, "vline": 80, "linestyl": 80, "uniform": 80, "quantit": 80, "seamless": 80, "dispatch": 80, "54277284": 80, "16439408": 80, "04669231": 80, "analog": 80, "That": 80, "init_region": [80, 89], "base_rul": [80, 89], "tr_acq_rul": 80, "tr_result": 80, "15166732": 80, "04739389": 80, "transluc": [80, 88, 89], "earch": 80, "width": [80, 83], "base64": [80, 83, 89], "ipython": [80, 83, 89], "plot_histori": [80, 89], "hist": [80, 89], "enumer": [80, 82, 89], "suptitl": [80, 82, 89], "gif_fil": [80, 89], "displai": [80, 83, 89, 90], "img": [80, 89], "src": [80, 83, 89], "b64encod": [80, 83, 89], "getvalu": [80, 89], "decod": [80, 83, 89], "colour": 81, "build_stacked_independent_objectives_model": 81, "single_obj_data": 81, "gather": 81, "ehvi": 81, "data_query_point": 81, "data_observ": 81, "log_": 81, "clear": [81, 82, 89, 90], "And": [81, 83], "actual_pf": 81, "gen": 81, "ref_point": 81, "idea_hv": 81, "log_hv": 81, "obs_hv": 81, "log10": 81, "batch_result": 81, "283": [81, 83], "0x7f6a1c9e1fc0": 81, "quit": 81, "batch_data_query_point": 81, "batch_data_observ": 81, "observer_cst": 81, "initial_data_with_cst": 81, "constraint_model": 81, "echvi": 81, "0x7f69f0a79a20": 81, "constraint_dataset": 81, "ar1": 82, "refin": 82, "rightarrow": 82, "f_0": 82, "12x": 82, "6x": 82, "quad": 82, "f_i": 82, "assumpt": 82, "cascad": 82, "linear_simul": 82, "x_input": 82, "add_nois": 82, "stddev": 82, "y0": 82, "y1": 82, "y2": 82, "raw": 82, "x_fidel": 82, "my_simul": 82, "n_fidel": 82, "subsampl": 82, "initial_samples_list": 82, "concat": [82, 84], "multifidelity_model": 82, "x_list": 82, "pred_color": 82, "gt_color": 82, "brown": 82, "fidleiti": 82, "hf_data": 82, "gpr_model": 82, "x_for_multifid": 82, "gpr_predict": 82, "multifidelity_predict": 82, "particularli": 82, "greatli": 82, "nargp": 82, "propos": [82, 84], "perdikaris2017nonlinear": 82, "tackl": 82, "strongli": 82, "f_1": 82, "contrari": 82, "oscil": 82, "nonlinear_simul": 82, "bad_fidel": 82, "logical_and": 82, "count_nonzero": 82, "fh": 82, "observation_nois": 82, "xh": 82, "ones_lik": 82, "predictions_ar1": 82, "predictions_nargp": 82, "ax_id": 82, "model_predict": 82, "set_text": 82, "incap": 82, "clearli": 82, "relashionship": 82, "fideil": 82, "toolkit": [83, 90], "reinforc": 83, "rl": 83, "concret": [83, 89], "lunar": 83, "lander": 83, "moon": 83, "env_nam": 83, "lunarland": 83, "v2": 83, "env": 83, "0079174": 83, "4154534": 83, "80192393": 83, "20146185": 83, "00916743": 83, "18164766": 83, "land": 83, "piecewis": 83, "pad": 83, "render": 83, "fire": 83, "ultim": 83, "reward": [83, 84], "biggest": 83, "deduct": 83, "fuel": 83, "veloc": 83, "github": 83, "repo": 83, "repositori": [83, 91], "uber": 83, "content": [83, 85], "blob": 83, "master": 83, "box2d": 83, "lunar_land": 83, "heuristic_control": 83, "angle_targ": 83, "hover_targ": 83, "angle_todo": 83, "hover_todo": 83, "elif": 83, "steps_limit": 83, "timeout_reward": 83, "demo_heuristic_land": 83, "print_reward": 83, "total_reward": 83, "break": [83, 85], "kind": 83, "250": 83, "terribl": 83, "sample_w": 83, "143": 83, "34008359594347": 83, "196": 83, "76407326541357": 83, "116": 83, "5033796270748": 83, "103": 83, "5091914006611": 83, "151210025725646": 83, "448599828864289": 83, "93": [83, 84], "24242157523328": 83, "265": 83, "69177133521464": 83, "88553601158213": 83, "160": 83, "57747812949776": 83, "plan": 83, "video": 83, "softwar": 83, "transfer": [83, 86], "load_video": 83, "lunar_lander_video": 83, "360": 83, "height": 83, "auto": 83, "alt": 83, "mp4": 83, "ascii": 83, "out_of_bound": 83, "n_run": 83, "lander_object": 83, "all_reward": 83, "rewards_tensor": 83, "trist": 83, "funciton": 83, "minut": 83, "readthedoc": 83, "en": 83, "varying_nois": 83, "breviti": 83, "n_optimization_step": 83, "mostli": 83, "w_best": 83, "299": 83, "9326223537776": 83, "9267295568219": 83, "258": 83, "0577448179938": 83, "48909749491895": 83, "260": 83, "65107980607837": 83, "281": 83, "3836194519621": 83, "268": 83, "74846326271114": 83, "253": 83, "43958048002668": 83, "229": 83, "02577775187086": 83, "72275821120036": 83, "action": 83, "qhsri": 84, "invest": 84, "carefulli": 84, "hood": 84, "batchhypervolumeratioind": 84, "walkthrough": 84, "noiseless": 84, "bet": 84, "think": 84, "valuabl": 84, "encount": [84, 85], "financ": 84, "capit": 84, "uniform_point": 84, "uniform_pts_mean": 84, "uniform_pts_var": 84, "uniform_pts_std": 84, "tradeoff": 84, "chart": 84, "uniform_non_domin": 84, "moo": 84, "nsga2": 84, "pop_siz": 84, "n_gen": 84, "optimised_point": 84, "optimised_mean_std": 84, "optimised_non_domin": 84, "max_": 84, "qx": 84, "x_i": 84, "r_i": 84, "r_f": 84, "program": 84, "solv": [84, 91], "ve": [84, 85], "sampled_point": 84, "aquisit": [84, 89], "min_idx": 84, "min_regret": 84, "00001": 84, "intermitt": 85, "attent": 85, "manual_fix": 85, "faultybranin": 85, "_is_broken": 85, "reader": 85, "comprehens": 85, "overview": 85, "confus": 85, "encapsul": [85, 89], "814": 85, "observer_output": 85, "check_shap": 85, "185": 85, "wrapped_funct": 85, "86": 85, "_observ": 85, "obs_or_dataset": 85, "flat_qp": 85, "tmp": 85, "ipykernel_8336": 85, "3852074970": 85, "didn": 85, "caught": 85, "spent": 85, "intent": 85, "unintent": 85, "shutdown": 85, "Their": 85, "posixpath": 85, "0x7f02c6d0e980": 85, "0x7f02c42c68f0": 85, "04": 85, "shut": 85, "10_000": 85, "query_rul": 85, "troubl": 86, "98": 86, "rembo": 86, "project": 86, "intrins": 86, "chanc": 86, "luck": 86, "num_se": 86, "high_dim_object": 86, "assert_shap": 86, "make_rembo_observer_and_search_spac": 86, "full_dim": 86, "low_dim": 86, "isinst": 86, "default_float": 86, "new_search_spac": 86, "new_object": 86, "rescaled_search_spac": 86, "clip_by_valu": 86, "matmul": 86, "transpose_b": 86, "clip_value_min": 86, "clip_value_max": 86, "x_rescal": 86, "rembo_2_final_dataset": 86, "rembo_observ": 86, "rembo_search_spac": 86, "rembo_5_final_dataset": 86, "axvlin": 86, "set_ytick": 86, "rembo_5_observ": 86, "overhead": 87, "polynomi": 87, "coupl": [87, 89], "infeasb": 87, "05356": 87, "contamin": 87, "noisy_hartmann_6": 87, "num_initial_data_point": [87, 88, 89], "realloc": 87, "cheapli": 87, "100_000": 87, "acq_rul": [87, 88], "hundr": 87, "predecessor": 87, "evolut": [87, 90], "ground_truth_regret": 87, "best_found_truth_idx": 87, "fifti": 88, "navig": 89, "trustworthi": 89, "deem": 89, "adjust": 89, "wasn": 89, "simpler": 89, "accommod": 89, "themselv": 89, "trego_acq_rul": 89, "plot_final_result": 89, "_dataset": 89, "batch_acq_rul": 89, "num_region": 89, "whereas": 89, "turbo_region": 89, "dts_rule": 89, "turbo_acq_rul": 89, "rm": 90, "rf": 90, "create_file_writ": 90, "experiment1": 90, "dispai": 90, "script": 90, "echo": 90, "load_ext": 90, "logdir": 90, "refresh": 90, "textual": 90, "metadata": 90, "apart": 90, "underscor": 90, "charact": 90, "insuffici": 90, "correctli": 90, "gprextralog": 90, "super": 90, "as_default": 90, "experiment2": 90, "seaborn": 90, "egoextralog": 90, "points_select": 90, "experiment3": 90, "experiment4": 90, "openai": 91, "gym": 91, "recov": 91, "multiprocess": 91, "jupytext": 91, "directori": 91, "txt": 91, "jupyt": 91}, "objects": {"": [[27, 0, 0, "-", "trieste"]], "trieste": [[9, 0, 0, "-", "acquisition"], [19, 0, 0, "-", "ask_tell_optimization"], [20, 0, 0, "-", "bayesian_optimizer"], [21, 0, 0, "-", "data"], [22, 0, 0, "-", "experimental"], [28, 0, 0, "-", "logging"], [42, 0, 0, "-", "models"], [53, 0, 0, "-", "objectives"], [58, 0, 0, "-", "observer"], [59, 0, 0, "-", "space"], [60, 0, 0, "-", "types"], [61, 0, 0, "-", "utils"], [63, 0, 0, "-", "version"]], "trieste.acquisition": [[9, 1, 1, "", "AcquisitionFunction"], [9, 2, 1, "", "AcquisitionFunctionBuilder"], [9, 2, 1, "", "AcquisitionFunctionClass"], [9, 2, 1, "", "AcquisitionRule"], [9, 2, 1, "", "AsynchronousGreedy"], [9, 2, 1, "", "AsynchronousOptimization"], [9, 2, 1, "", "AugmentedExpectedImprovement"], [9, 2, 1, "", "BatchExpectedImprovement"], [9, 2, 1, "", "BatchHypervolumeSharpeRatioIndicator"], [9, 2, 1, "", "BatchMonteCarloExpectedHypervolumeImprovement"], [9, 2, 1, "", "BatchMonteCarloExpectedImprovement"], [9, 2, 1, "", "BatchTrustRegion"], [9, 2, 1, "", "BatchTrustRegionBox"], [9, 2, 1, "", "BatchTrustRegionProduct"], [9, 2, 1, "", "BayesianActiveLearningByDisagreement"], [9, 2, 1, "", "DiscreteThompsonSampling"], [9, 2, 1, "", "EfficientGlobalOptimization"], [9, 2, 1, "", "ExactThompsonSampler"], [9, 2, 1, "", "ExpectedConstrainedHypervolumeImprovement"], [9, 2, 1, "", "ExpectedConstrainedImprovement"], [9, 2, 1, "", "ExpectedFeasibility"], [9, 2, 1, "", "ExpectedHypervolumeImprovement"], [9, 2, 1, "", "ExpectedImprovement"], [9, 2, 1, "", "Fantasizer"], [9, 2, 1, "", "FastConstraintsFeasibility"], [9, 2, 1, "", "FixedPointTrustRegionDiscrete"], [9, 2, 1, "", "GIBBON"], [9, 2, 1, "", "GreedyAcquisitionFunctionBuilder"], [9, 2, 1, "", "GreedyContinuousThompsonSampling"], [9, 2, 1, "", "GumbelSampler"], [9, 2, 1, "", "HIPPO"], [9, 2, 1, "", "HypercubeTrustRegion"], [9, 2, 1, "", "IntegratedVarianceReduction"], [9, 2, 1, "", "LocalDatasetsAcquisitionRule"], [9, 2, 1, "", "LocalPenalization"], [9, 2, 1, "", "MakePositive"], [9, 2, 1, "", "MinValueEntropySearch"], [9, 2, 1, "", "MonteCarloAugmentedExpectedImprovement"], [9, 2, 1, "", "MonteCarloExpectedImprovement"], [9, 2, 1, "", "MultipleOptimismNegativeLowerConfidenceBound"], [9, 2, 1, "", "NegativeLowerConfidenceBound"], [9, 2, 1, "", "NegativePredictiveMean"], [9, 2, 1, "", "ParallelContinuousThompsonSampling"], [9, 1, 1, "", "PenalizationFunction"], [9, 2, 1, "", "PredictiveVariance"], [9, 2, 1, "", "ProbabilityOfFeasibility"], [9, 2, 1, "", "Product"], [9, 2, 1, "", "RandomSampling"], [9, 2, 1, "", "Reducer"], [9, 2, 1, "", "SingleModelAcquisitionBuilder"], [9, 2, 1, "", "SingleModelGreedyAcquisitionBuilder"], [9, 2, 1, "", "SingleModelVectorizedAcquisitionBuilder"], [9, 2, 1, "", "SingleObjectiveTrustRegionBox"], [9, 2, 1, "", "SingleObjectiveTrustRegionDiscrete"], [9, 2, 1, "", "Sum"], [9, 2, 1, "", "TREGOBox"], [9, 2, 1, "", "TURBOBox"], [9, 2, 1, "", "ThompsonSampler"], [9, 2, 1, "", "ThompsonSamplerFromTrajectory"], [9, 2, 1, "", "UpdatablePenalizationFunction"], [9, 2, 1, "", "UpdatableSearchSpace"], [9, 2, 1, "", "UpdatableTrustRegion"], [9, 2, 1, "", "UpdatableTrustRegionBox"], [9, 2, 1, "", "UpdatableTrustRegionDiscrete"], [9, 2, 1, "", "UpdatableTrustRegionProduct"], [9, 2, 1, "", "VectorizedAcquisitionFunctionBuilder"], [9, 2, 1, "", "augmented_expected_improvement"], [9, 5, 1, "", "batch_ehvi"], [9, 2, 1, "", "batch_expected_improvement"], [9, 2, 1, "", "bayesian_active_learning_by_disagreement"], [9, 5, 1, "", "bichon_ranjan_criterion"], [0, 0, 0, "-", "combination"], [9, 2, 1, "", "expected_hv_improvement"], [9, 2, 1, "", "expected_improvement"], [9, 5, 1, "", "fast_constraints_feasibility"], [6, 0, 0, "-", "function"], [9, 2, 1, "", "gibbon_quality_term"], [9, 2, 1, "", "gibbon_repulsion_term"], [9, 2, 1, "", "hard_local_penalizer"], [9, 2, 1, "", "integrated_variance_reduction"], [10, 0, 0, "-", "interface"], [9, 5, 1, "", "lower_confidence_bound"], [9, 2, 1, "", "min_value_entropy_search"], [12, 0, 0, "-", "multi_objective"], [9, 2, 1, "", "multiple_optimism_lower_confidence_bound"], [15, 0, 0, "-", "optimizer"], [9, 5, 1, "", "predictive_variance"], [9, 2, 1, "", "probability_below_threshold"], [16, 0, 0, "-", "rule"], [17, 0, 0, "-", "sampler"], [9, 2, 1, "", "soft_local_penalizer"], [18, 0, 0, "-", "utils"]], "trieste.acquisition.AcquisitionFunctionBuilder": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.AcquisitionFunctionClass": [[9, 3, 1, "", "__call__"]], "trieste.acquisition.AcquisitionRule": [[9, 3, 1, "", "acquire"], [9, 3, 1, "", "acquire_single"], [9, 3, 1, "", "filter_datasets"]], "trieste.acquisition.AsynchronousGreedy": [[9, 3, 1, "", "acquire"]], "trieste.acquisition.AsynchronousOptimization": [[9, 3, 1, "", "acquire"]], "trieste.acquisition.AugmentedExpectedImprovement": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.BatchExpectedImprovement": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.BatchHypervolumeSharpeRatioIndicator": [[9, 3, 1, "", "_find_non_dominated_points"], [9, 3, 1, "", "acquire"]], "trieste.acquisition.BatchMonteCarloExpectedHypervolumeImprovement": [[9, 3, 1, "", "prepare_acquisition_function"]], "trieste.acquisition.BatchMonteCarloExpectedImprovement": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.BatchTrustRegion": [[9, 3, 1, "", "acquire"], [9, 3, 1, "", "filter_datasets"], [9, 3, 1, "", "get_initialize_subspaces_mask"], [9, 3, 1, "", "maybe_initialize_subspaces"], [9, 4, 1, "", "num_local_datasets"]], "trieste.acquisition.BatchTrustRegionBox": [[9, 3, 1, "", "acquire"], [9, 3, 1, "", "get_initialize_subspaces_mask"], [9, 3, 1, "", "initialize_subspaces"]], "trieste.acquisition.BatchTrustRegionProduct": [[9, 3, 1, "", "acquire"], [9, 3, 1, "", "get_initialize_subspaces_mask"], [9, 3, 1, "", "initialize_subspaces"]], "trieste.acquisition.BayesianActiveLearningByDisagreement": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.DiscreteThompsonSampling": [[9, 3, 1, "", "acquire"]], "trieste.acquisition.EfficientGlobalOptimization": [[9, 3, 1, "", "acquire"], [9, 4, 1, "", "acquisition_function"]], "trieste.acquisition.ExactThompsonSampler": [[9, 3, 1, "", "sample"]], "trieste.acquisition.ExpectedConstrainedHypervolumeImprovement": [[9, 3, 1, "", "_update_expected_improvement_fn"]], "trieste.acquisition.ExpectedConstrainedImprovement": [[9, 3, 1, "", "_update_expected_improvement_fn"], [9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.ExpectedFeasibility": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.ExpectedHypervolumeImprovement": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.ExpectedImprovement": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.Fantasizer": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.FastConstraintsFeasibility": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.FixedPointTrustRegionDiscrete": [[9, 3, 1, "", "initialize"], [9, 3, 1, "", "update"]], "trieste.acquisition.GIBBON": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.GreedyAcquisitionFunctionBuilder": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.GreedyContinuousThompsonSampling": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.GumbelSampler": [[9, 3, 1, "", "sample"]], "trieste.acquisition.HIPPO": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.HypercubeTrustRegion": [[9, 3, 1, "", "_update_domain"], [9, 3, 1, "", "get_dataset_min"], [9, 3, 1, "", "get_values_min"], [9, 3, 1, "", "initialize"], [9, 4, 1, "", "requires_initialization"], [9, 3, 1, "", "update"]], "trieste.acquisition.IntegratedVarianceReduction": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.LocalDatasetsAcquisitionRule": [[9, 3, 1, "", "initialize_subspaces"], [9, 4, 1, "", "num_local_datasets"]], "trieste.acquisition.LocalPenalization": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.MakePositive": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.MinValueEntropySearch": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.MonteCarloAugmentedExpectedImprovement": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.MonteCarloExpectedImprovement": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.MultipleOptimismNegativeLowerConfidenceBound": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.NegativeLowerConfidenceBound": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.ParallelContinuousThompsonSampling": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.PredictiveVariance": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.ProbabilityOfFeasibility": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 4, 1, "", "threshold"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.Product": [[9, 3, 1, "", "_reduce"]], "trieste.acquisition.RandomSampling": [[9, 3, 1, "", "acquire"]], "trieste.acquisition.Reducer": [[9, 3, 1, "", "_reduce"], [9, 4, 1, "", "acquisitions"], [9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.SingleModelAcquisitionBuilder": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"], [9, 3, 1, "", "using"]], "trieste.acquisition.SingleModelGreedyAcquisitionBuilder": [[9, 3, 1, "", "prepare_acquisition_function"], [9, 3, 1, "", "update_acquisition_function"], [9, 3, 1, "", "using"]], "trieste.acquisition.SingleModelVectorizedAcquisitionBuilder": [[9, 3, 1, "", "using"]], "trieste.acquisition.SingleObjectiveTrustRegionBox": [[9, 3, 1, "", "_update_domain"]], "trieste.acquisition.SingleObjectiveTrustRegionDiscrete": [[9, 3, 1, "", "_update_domain"]], "trieste.acquisition.Sum": [[9, 3, 1, "", "_reduce"]], "trieste.acquisition.TREGOBox": [[9, 3, 1, "", "_update_domain"], [9, 4, 1, "", "eps"], [9, 3, 1, "", "get_dataset_min"], [9, 3, 1, "", "get_datasets_filter_mask"], [9, 3, 1, "", "initialize"]], "trieste.acquisition.TURBOBox": [[9, 3, 1, "", "get_dataset_min"], [9, 3, 1, "", "initialize"], [9, 3, 1, "", "update"]], "trieste.acquisition.ThompsonSampler": [[9, 3, 1, "", "sample"], [9, 4, 1, "", "sample_min_value"]], "trieste.acquisition.ThompsonSamplerFromTrajectory": [[9, 3, 1, "", "sample"]], "trieste.acquisition.UpdatablePenalizationFunction": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "update"]], "trieste.acquisition.UpdatableSearchSpace": [[9, 3, 1, "", "initialize"], [9, 4, 1, "", "requires_initialization"], [9, 3, 1, "", "update"]], "trieste.acquisition.UpdatableTrustRegion": [[9, 3, 1, "", "_init_location"], [9, 3, 1, "", "get_datasets_filter_mask"], [9, 4, 1, "", "global_search_space"], [9, 4, 1, "", "location"], [9, 3, 1, "", "select_in_region"], [9, 3, 1, "", "with_input_active_dims"]], "trieste.acquisition.UpdatableTrustRegionBox": [[9, 4, 1, "", "global_search_space"], [9, 4, 1, "", "location"]], "trieste.acquisition.UpdatableTrustRegionDiscrete": [[9, 4, 1, "", "global_search_space"], [9, 4, 1, "", "location"]], "trieste.acquisition.UpdatableTrustRegionProduct": [[9, 3, 1, "", "get_datasets_filter_mask"], [9, 4, 1, "", "global_search_space"], [9, 3, 1, "", "initialize"], [9, 4, 1, "", "location"], [9, 4, 1, "", "region_index"], [9, 4, 1, "", "regions"], [9, 4, 1, "", "requires_initialization"], [9, 3, 1, "", "update"]], "trieste.acquisition.augmented_expected_improvement": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "update"]], "trieste.acquisition.batch_expected_improvement": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "_compute_Phi"], [9, 3, 1, "", "_compute_R"], [9, 3, 1, "", "_compute_Sigma"], [9, 3, 1, "", "_compute_batch_expected_improvement"], [9, 3, 1, "", "_compute_bm"], [9, 3, 1, "", "_compute_c"], [9, 3, 1, "", "_compute_p"], [9, 3, 1, "", "_delta"], [9, 3, 1, "", "update"]], "trieste.acquisition.bayesian_active_learning_by_disagreement": [[9, 3, 1, "", "__call__"]], "trieste.acquisition.combination": [[0, 2, 1, "", "Map"], [0, 2, 1, "", "Product"], [0, 2, 1, "", "Reducer"], [0, 2, 1, "", "Sum"]], "trieste.acquisition.combination.Map": [[0, 3, 1, "", "_reduce"]], "trieste.acquisition.combination.Product": [[0, 3, 1, "", "_reduce"]], "trieste.acquisition.combination.Reducer": [[0, 3, 1, "", "_reduce"], [0, 4, 1, "", "acquisitions"], [0, 3, 1, "", "prepare_acquisition_function"], [0, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.combination.Sum": [[0, 3, 1, "", "_reduce"]], "trieste.acquisition.expected_hv_improvement": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "update"]], "trieste.acquisition.expected_improvement": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "update"]], "trieste.acquisition.function": [[6, 2, 1, "", "AugmentedExpectedImprovement"], [6, 2, 1, "", "BatchExpectedImprovement"], [6, 2, 1, "", "BatchMonteCarloExpectedHypervolumeImprovement"], [6, 2, 1, "", "BatchMonteCarloExpectedImprovement"], [6, 2, 1, "", "BayesianActiveLearningByDisagreement"], [6, 2, 1, "", "ExpectedConstrainedHypervolumeImprovement"], [6, 2, 1, "", "ExpectedConstrainedImprovement"], [6, 2, 1, "", "ExpectedFeasibility"], [6, 2, 1, "", "ExpectedHypervolumeImprovement"], [6, 2, 1, "", "ExpectedImprovement"], [6, 2, 1, "", "Fantasizer"], [6, 2, 1, "", "FastConstraintsFeasibility"], [6, 2, 1, "", "GIBBON"], [6, 2, 1, "", "GreedyContinuousThompsonSampling"], [6, 2, 1, "", "HIPPO"], [6, 2, 1, "", "IntegratedVarianceReduction"], [6, 2, 1, "", "LocalPenalization"], [6, 2, 1, "", "MakePositive"], [6, 2, 1, "", "MinValueEntropySearch"], [6, 2, 1, "", "MonteCarloAugmentedExpectedImprovement"], [6, 2, 1, "", "MonteCarloExpectedImprovement"], [6, 2, 1, "", "MultipleOptimismNegativeLowerConfidenceBound"], [6, 2, 1, "", "MultivariateNormalCDF"], [6, 2, 1, "", "NegativeLowerConfidenceBound"], [6, 2, 1, "", "NegativePredictiveMean"], [6, 2, 1, "", "ParallelContinuousThompsonSampling"], [6, 2, 1, "", "PredictiveVariance"], [6, 2, 1, "", "ProbabilityOfFeasibility"], [6, 2, 1, "", "ProbabilityOfImprovement"], [1, 0, 0, "-", "active_learning"], [6, 2, 1, "", "augmented_expected_improvement"], [6, 5, 1, "", "batch_ehvi"], [6, 2, 1, "", "batch_expected_improvement"], [6, 2, 1, "", "bayesian_active_learning_by_disagreement"], [6, 5, 1, "", "bichon_ranjan_criterion"], [2, 0, 0, "-", "continuous_thompson_sampling"], [3, 0, 0, "-", "entropy"], [6, 2, 1, "", "expected_hv_improvement"], [6, 2, 1, "", "expected_improvement"], [6, 5, 1, "", "fast_constraints_feasibility"], [4, 0, 0, "-", "function"], [6, 2, 1, "", "gibbon_quality_term"], [6, 2, 1, "", "gibbon_repulsion_term"], [5, 0, 0, "-", "greedy_batch"], [6, 2, 1, "", "hard_local_penalizer"], [6, 2, 1, "", "integrated_variance_reduction"], [6, 5, 1, "", "lower_confidence_bound"], [6, 2, 1, "", "min_value_entropy_search"], [7, 0, 0, "-", "multi_objective"], [6, 2, 1, "", "multiple_optimism_lower_confidence_bound"], [6, 5, 1, "", "predictive_variance"], [6, 2, 1, "", "probability_below_threshold"], [6, 2, 1, "", "soft_local_penalizer"], [8, 0, 0, "-", "utils"]], "trieste.acquisition.function.AugmentedExpectedImprovement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.BatchExpectedImprovement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.BatchMonteCarloExpectedHypervolumeImprovement": [[6, 3, 1, "", "prepare_acquisition_function"]], "trieste.acquisition.function.BatchMonteCarloExpectedImprovement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.BayesianActiveLearningByDisagreement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.ExpectedConstrainedHypervolumeImprovement": [[6, 3, 1, "", "_update_expected_improvement_fn"]], "trieste.acquisition.function.ExpectedConstrainedImprovement": [[6, 3, 1, "", "_update_expected_improvement_fn"], [6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.ExpectedFeasibility": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.ExpectedHypervolumeImprovement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.ExpectedImprovement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.Fantasizer": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.FastConstraintsFeasibility": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.GIBBON": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.GreedyContinuousThompsonSampling": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.HIPPO": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.IntegratedVarianceReduction": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.LocalPenalization": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.MakePositive": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.MinValueEntropySearch": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.MonteCarloAugmentedExpectedImprovement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.MonteCarloExpectedImprovement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.MultipleOptimismNegativeLowerConfidenceBound": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.MultivariateNormalCDF": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "_get_update_indices"], [6, 3, 1, "", "_standard_normal_cdf_and_inverse_cdf"]], "trieste.acquisition.function.NegativeLowerConfidenceBound": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.ParallelContinuousThompsonSampling": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.PredictiveVariance": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.ProbabilityOfFeasibility": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 4, 1, "", "threshold"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.ProbabilityOfImprovement": [[6, 3, 1, "", "prepare_acquisition_function"], [6, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.active_learning": [[1, 2, 1, "", "BayesianActiveLearningByDisagreement"], [1, 2, 1, "", "ExpectedFeasibility"], [1, 2, 1, "", "IntegratedVarianceReduction"], [1, 2, 1, "", "PredictiveVariance"], [1, 2, 1, "", "bayesian_active_learning_by_disagreement"], [1, 5, 1, "", "bichon_ranjan_criterion"], [1, 2, 1, "", "integrated_variance_reduction"], [1, 5, 1, "", "predictive_variance"]], "trieste.acquisition.function.active_learning.BayesianActiveLearningByDisagreement": [[1, 3, 1, "", "prepare_acquisition_function"], [1, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.active_learning.ExpectedFeasibility": [[1, 3, 1, "", "prepare_acquisition_function"], [1, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.active_learning.IntegratedVarianceReduction": [[1, 3, 1, "", "prepare_acquisition_function"], [1, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.active_learning.PredictiveVariance": [[1, 3, 1, "", "prepare_acquisition_function"], [1, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.active_learning.bayesian_active_learning_by_disagreement": [[1, 3, 1, "", "__call__"]], "trieste.acquisition.function.active_learning.integrated_variance_reduction": [[1, 3, 1, "", "__call__"]], "trieste.acquisition.function.augmented_expected_improvement": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "update"]], "trieste.acquisition.function.batch_expected_improvement": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "_compute_Phi"], [6, 3, 1, "", "_compute_R"], [6, 3, 1, "", "_compute_Sigma"], [6, 3, 1, "", "_compute_batch_expected_improvement"], [6, 3, 1, "", "_compute_bm"], [6, 3, 1, "", "_compute_c"], [6, 3, 1, "", "_compute_p"], [6, 3, 1, "", "_delta"], [6, 3, 1, "", "update"]], "trieste.acquisition.function.bayesian_active_learning_by_disagreement": [[6, 3, 1, "", "__call__"]], "trieste.acquisition.function.continuous_thompson_sampling": [[2, 2, 1, "", "GreedyContinuousThompsonSampling"], [2, 2, 1, "", "ParallelContinuousThompsonSampling"], [2, 2, 1, "", "_DummyTrajectoryFunctionClass"], [2, 5, 1, "", "negate_trajectory_function"]], "trieste.acquisition.function.continuous_thompson_sampling.GreedyContinuousThompsonSampling": [[2, 3, 1, "", "prepare_acquisition_function"], [2, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.continuous_thompson_sampling.ParallelContinuousThompsonSampling": [[2, 3, 1, "", "prepare_acquisition_function"], [2, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.continuous_thompson_sampling._DummyTrajectoryFunctionClass": [[2, 3, 1, "", "__call__"]], "trieste.acquisition.function.entropy": [[3, 2, 1, "", "CostWeighting"], [3, 2, 1, "", "GIBBON"], [3, 1, 1, "", "GIBBONModelType"], [3, 2, 1, "", "GibbonAcquisition"], [3, 2, 1, "", "MUMBO"], [3, 1, 1, "", "MUMBOModelType"], [3, 2, 1, "", "MinValueEntropySearch"], [3, 2, 1, "", "SupportsCovarianceObservationNoise"], [3, 2, 1, "", "SupportsCovarianceObservationNoiseTrajectory"], [3, 2, 1, "", "SupportsCovarianceWithTopFidelityPredictY"], [3, 2, 1, "", "gibbon_quality_term"], [3, 2, 1, "", "gibbon_repulsion_term"], [3, 2, 1, "", "min_value_entropy_search"], [3, 2, 1, "", "mumbo"]], "trieste.acquisition.function.entropy.CostWeighting": [[3, 3, 1, "", "prepare_acquisition_function"], [3, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.entropy.GIBBON": [[3, 3, 1, "", "prepare_acquisition_function"], [3, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.entropy.MUMBO": [[3, 3, 1, "", "get_min_value_samples_on_top_fidelity"], [3, 3, 1, "", "prepare_acquisition_function"], [3, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.entropy.MinValueEntropySearch": [[3, 3, 1, "", "prepare_acquisition_function"], [3, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.entropy.gibbon_quality_term": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "update"]], "trieste.acquisition.function.entropy.gibbon_repulsion_term": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "update"]], "trieste.acquisition.function.entropy.min_value_entropy_search": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "update"]], "trieste.acquisition.function.entropy.mumbo": [[3, 3, 1, "", "__call__"], [3, 3, 1, "", "update"]], "trieste.acquisition.function.expected_hv_improvement": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "update"]], "trieste.acquisition.function.expected_improvement": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "update"]], "trieste.acquisition.function.function": [[4, 2, 1, "", "AugmentedExpectedImprovement"], [4, 2, 1, "", "BatchExpectedImprovement"], [4, 2, 1, "", "BatchMonteCarloExpectedImprovement"], [4, 2, 1, "", "ExpectedConstrainedImprovement"], [4, 2, 1, "", "ExpectedImprovement"], [4, 2, 1, "", "FastConstraintsFeasibility"], [4, 2, 1, "", "MakePositive"], [4, 2, 1, "", "MonteCarloAugmentedExpectedImprovement"], [4, 2, 1, "", "MonteCarloExpectedImprovement"], [4, 2, 1, "", "MultipleOptimismNegativeLowerConfidenceBound"], [4, 2, 1, "", "NegativeLowerConfidenceBound"], [4, 2, 1, "", "NegativePredictiveMean"], [4, 2, 1, "", "ProbabilityOfFeasibility"], [4, 2, 1, "", "ProbabilityOfImprovement"], [4, 2, 1, "", "augmented_expected_improvement"], [4, 2, 1, "", "batch_expected_improvement"], [4, 2, 1, "", "batch_monte_carlo_expected_improvement"], [4, 2, 1, "", "expected_improvement"], [4, 5, 1, "", "fast_constraints_feasibility"], [4, 5, 1, "", "lower_confidence_bound"], [4, 2, 1, "", "monte_carlo_augmented_expected_improvement"], [4, 2, 1, "", "monte_carlo_expected_improvement"], [4, 2, 1, "", "multiple_optimism_lower_confidence_bound"], [4, 2, 1, "", "probability_below_threshold"]], "trieste.acquisition.function.function.AugmentedExpectedImprovement": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.BatchExpectedImprovement": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.BatchMonteCarloExpectedImprovement": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.ExpectedConstrainedImprovement": [[4, 3, 1, "", "_update_expected_improvement_fn"], [4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.ExpectedImprovement": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.FastConstraintsFeasibility": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.MakePositive": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.MonteCarloAugmentedExpectedImprovement": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.MonteCarloExpectedImprovement": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.MultipleOptimismNegativeLowerConfidenceBound": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.NegativeLowerConfidenceBound": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.ProbabilityOfFeasibility": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 4, 1, "", "threshold"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.ProbabilityOfImprovement": [[4, 3, 1, "", "prepare_acquisition_function"], [4, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.function.augmented_expected_improvement": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "update"]], "trieste.acquisition.function.function.batch_expected_improvement": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "_compute_Phi"], [4, 3, 1, "", "_compute_R"], [4, 3, 1, "", "_compute_Sigma"], [4, 3, 1, "", "_compute_batch_expected_improvement"], [4, 3, 1, "", "_compute_bm"], [4, 3, 1, "", "_compute_c"], [4, 3, 1, "", "_compute_p"], [4, 3, 1, "", "_delta"], [4, 3, 1, "", "update"]], "trieste.acquisition.function.function.batch_monte_carlo_expected_improvement": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "update"]], "trieste.acquisition.function.function.expected_improvement": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "update"]], "trieste.acquisition.function.function.monte_carlo_augmented_expected_improvement": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "update"]], "trieste.acquisition.function.function.monte_carlo_expected_improvement": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "update"]], "trieste.acquisition.function.function.multiple_optimism_lower_confidence_bound": [[4, 3, 1, "", "__call__"]], "trieste.acquisition.function.function.probability_below_threshold": [[4, 3, 1, "", "__call__"], [4, 3, 1, "", "update"]], "trieste.acquisition.function.gibbon_quality_term": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "update"]], "trieste.acquisition.function.gibbon_repulsion_term": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "update"]], "trieste.acquisition.function.greedy_batch": [[5, 2, 1, "", "Fantasizer"], [5, 2, 1, "", "FantasizerModelStack"], [5, 2, 1, "", "FantasizerModelType"], [5, 2, 1, "", "LocalPenalization"], [5, 2, 1, "", "PenalizedAcquisition"], [5, 5, 1, "", "_broadcast_predict"], [5, 2, 1, "", "_fantasized_model"], [5, 5, 1, "", "_generate_fantasized_data"], [5, 5, 1, "", "_get_leading_dim_and_flatten"], [5, 5, 1, "", "_restore_leading_dim"], [5, 2, 1, "", "hard_local_penalizer"], [5, 2, 1, "", "local_penalizer"], [5, 2, 1, "", "soft_local_penalizer"]], "trieste.acquisition.function.greedy_batch.Fantasizer": [[5, 3, 1, "", "prepare_acquisition_function"], [5, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.greedy_batch.LocalPenalization": [[5, 3, 1, "", "prepare_acquisition_function"], [5, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.greedy_batch._fantasized_model": [[5, 3, 1, "", "get_kernel"], [5, 3, 1, "", "get_observation_noise"], [5, 3, 1, "", "log"], [5, 3, 1, "", "predict"], [5, 3, 1, "", "predict_joint"], [5, 3, 1, "", "predict_y"], [5, 3, 1, "", "sample"], [5, 3, 1, "", "update_fantasized_data"]], "trieste.acquisition.function.greedy_batch.hard_local_penalizer": [[5, 3, 1, "", "__call__"]], "trieste.acquisition.function.greedy_batch.local_penalizer": [[5, 3, 1, "", "update"]], "trieste.acquisition.function.greedy_batch.soft_local_penalizer": [[5, 3, 1, "", "__call__"]], "trieste.acquisition.function.hard_local_penalizer": [[6, 3, 1, "", "__call__"]], "trieste.acquisition.function.integrated_variance_reduction": [[6, 3, 1, "", "__call__"]], "trieste.acquisition.function.min_value_entropy_search": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "update"]], "trieste.acquisition.function.multi_objective": [[7, 2, 1, "", "BatchMonteCarloExpectedHypervolumeImprovement"], [7, 2, 1, "", "ExpectedConstrainedHypervolumeImprovement"], [7, 2, 1, "", "ExpectedHypervolumeImprovement"], [7, 2, 1, "", "HIPPO"], [7, 5, 1, "", "batch_ehvi"], [7, 2, 1, "", "expected_hv_improvement"], [7, 2, 1, "", "hippo_penalizer"]], "trieste.acquisition.function.multi_objective.BatchMonteCarloExpectedHypervolumeImprovement": [[7, 3, 1, "", "prepare_acquisition_function"]], "trieste.acquisition.function.multi_objective.ExpectedConstrainedHypervolumeImprovement": [[7, 3, 1, "", "_update_expected_improvement_fn"]], "trieste.acquisition.function.multi_objective.ExpectedHypervolumeImprovement": [[7, 3, 1, "", "prepare_acquisition_function"], [7, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.multi_objective.HIPPO": [[7, 3, 1, "", "prepare_acquisition_function"], [7, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.function.multi_objective.expected_hv_improvement": [[7, 3, 1, "", "__call__"], [7, 3, 1, "", "update"]], "trieste.acquisition.function.multi_objective.hippo_penalizer": [[7, 3, 1, "", "update"]], "trieste.acquisition.function.multiple_optimism_lower_confidence_bound": [[6, 3, 1, "", "__call__"]], "trieste.acquisition.function.probability_below_threshold": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "update"]], "trieste.acquisition.function.soft_local_penalizer": [[6, 3, 1, "", "__call__"]], "trieste.acquisition.function.utils": [[8, 2, 1, "", "MultivariateNormalCDF"]], "trieste.acquisition.function.utils.MultivariateNormalCDF": [[8, 3, 1, "", "__call__"], [8, 3, 1, "", "_get_update_indices"], [8, 3, 1, "", "_standard_normal_cdf_and_inverse_cdf"]], "trieste.acquisition.gibbon_quality_term": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "update"]], "trieste.acquisition.gibbon_repulsion_term": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "update"]], "trieste.acquisition.hard_local_penalizer": [[9, 3, 1, "", "__call__"]], "trieste.acquisition.integrated_variance_reduction": [[9, 3, 1, "", "__call__"]], "trieste.acquisition.interface": [[10, 1, 1, "", "AcquisitionFunction"], [10, 2, 1, "", "AcquisitionFunctionBuilder"], [10, 2, 1, "", "AcquisitionFunctionClass"], [10, 2, 1, "", "GreedyAcquisitionFunctionBuilder"], [10, 1, 1, "", "PenalizationFunction"], [10, 2, 1, "", "SingleModelAcquisitionBuilder"], [10, 2, 1, "", "SingleModelGreedyAcquisitionBuilder"], [10, 2, 1, "", "SingleModelVectorizedAcquisitionBuilder"], [10, 2, 1, "", "UpdatablePenalizationFunction"], [10, 2, 1, "", "VectorizedAcquisitionFunctionBuilder"]], "trieste.acquisition.interface.AcquisitionFunctionBuilder": [[10, 3, 1, "", "prepare_acquisition_function"], [10, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.interface.AcquisitionFunctionClass": [[10, 3, 1, "", "__call__"]], "trieste.acquisition.interface.GreedyAcquisitionFunctionBuilder": [[10, 3, 1, "", "prepare_acquisition_function"], [10, 3, 1, "", "update_acquisition_function"]], "trieste.acquisition.interface.SingleModelAcquisitionBuilder": [[10, 3, 1, "", "prepare_acquisition_function"], [10, 3, 1, "", "update_acquisition_function"], [10, 3, 1, "", "using"]], "trieste.acquisition.interface.SingleModelGreedyAcquisitionBuilder": [[10, 3, 1, "", "prepare_acquisition_function"], [10, 3, 1, "", "update_acquisition_function"], [10, 3, 1, "", "using"]], "trieste.acquisition.interface.SingleModelVectorizedAcquisitionBuilder": [[10, 3, 1, "", "using"]], "trieste.acquisition.interface.UpdatablePenalizationFunction": [[10, 3, 1, "", "__call__"], [10, 3, 1, "", "update"]], "trieste.acquisition.min_value_entropy_search": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "update"]], "trieste.acquisition.multi_objective": [[12, 2, 1, "", "DividedAndConquerNonDominated"], [12, 2, 1, "", "ExactPartition2dNonDominated"], [12, 2, 1, "", "Pareto"], [11, 0, 0, "-", "dominance"], [12, 5, 1, "", "get_reference_point"], [12, 5, 1, "", "non_dominated"], [13, 0, 0, "-", "pareto"], [14, 0, 0, "-", "partition"], [12, 5, 1, "", "prepare_default_non_dominated_partition_bounds"]], "trieste.acquisition.multi_objective.Pareto": [[12, 3, 1, "", "hypervolume_indicator"], [12, 3, 1, "", "sample_diverse_subset"]], "trieste.acquisition.multi_objective.dominance": [[11, 5, 1, "", "non_dominated"]], "trieste.acquisition.multi_objective.pareto": [[13, 2, 1, "", "Pareto"], [13, 5, 1, "", "get_reference_point"]], "trieste.acquisition.multi_objective.pareto.Pareto": [[13, 3, 1, "", "hypervolume_indicator"], [13, 3, 1, "", "sample_diverse_subset"]], "trieste.acquisition.multi_objective.partition": [[14, 2, 1, "", "DividedAndConquerNonDominated"], [14, 2, 1, "", "ExactPartition2dNonDominated"], [14, 2, 1, "", "_BoundIndexPartition"], [14, 5, 1, "", "prepare_default_non_dominated_partition_bounds"]], "trieste.acquisition.multi_objective.partition._BoundIndexPartition": [[14, 3, 1, "", "partition_bounds"]], "trieste.acquisition.multiple_optimism_lower_confidence_bound": [[9, 3, 1, "", "__call__"]], "trieste.acquisition.optimizer": [[15, 1, 1, "", "AcquisitionOptimizer"], [15, 6, 1, "", "FailedOptimizationError"], [15, 1, 1, "", "InitialPointSampler"], [15, 1, 1, "", "NUM_RUNS_DIM"], [15, 1, 1, "", "NUM_SAMPLES_DIM"], [15, 1, 1, "", "NUM_SAMPLES_MIN"], [15, 2, 1, "", "ScipyOptimizerGreenlet"], [15, 5, 1, "", "_perform_parallel_continuous_optimization"], [15, 5, 1, "", "automatic_optimizer_selector"], [15, 5, 1, "", "batchify_joint"], [15, 5, 1, "", "batchify_vectorize"], [15, 5, 1, "", "generate_continuous_optimizer"], [15, 5, 1, "", "generate_initial_points"], [15, 5, 1, "", "generate_random_search_optimizer"], [15, 5, 1, "", "get_bounds_of_box_relaxation_around_point"], [15, 5, 1, "", "get_bounds_of_optimization"], [15, 5, 1, "", "optimize_discrete"], [15, 5, 1, "", "sample_from_space"]], "trieste.acquisition.optimizer.ScipyOptimizerGreenlet": [[15, 3, 1, "", "run"]], "trieste.acquisition.probability_below_threshold": [[9, 3, 1, "", "__call__"], [9, 3, 1, "", "update"]], "trieste.acquisition.rule": [[16, 2, 1, "", "AcquisitionRule"], [16, 2, 1, "", "AsynchronousGreedy"], [16, 2, 1, "", "AsynchronousOptimization"], [16, 2, 1, "", "AsynchronousRuleState"], [16, 2, 1, "", "BatchHypervolumeSharpeRatioIndicator"], [16, 2, 1, "", "BatchTrustRegion"], [16, 2, 1, "", "BatchTrustRegionBox"], [16, 2, 1, "", "BatchTrustRegionProduct"], [16, 2, 1, "", "BatchTrustRegionState"], [16, 2, 1, "", "DiscreteThompsonSampling"], [16, 2, 1, "", "EfficientGlobalOptimization"], [16, 2, 1, "", "FixedPointTrustRegionDiscrete"], [16, 2, 1, "", "HypercubeTrustRegion"], [16, 2, 1, "", "LocalDatasetsAcquisitionRule"], [16, 2, 1, "", "RandomSampling"], [16, 1, 1, "", "ResultType"], [16, 1, 1, "", "SearchSpaceType"], [16, 2, 1, "", "SingleObjectiveTrustRegionBox"], [16, 2, 1, "", "SingleObjectiveTrustRegionDiscrete"], [16, 1, 1, "", "T"], [16, 2, 1, "", "TREGOBox"], [16, 2, 1, "", "TURBOBox"], [16, 2, 1, "", "UpdatableSearchSpace"], [16, 2, 1, "", "UpdatableTrustRegion"], [16, 2, 1, "", "UpdatableTrustRegionBox"], [16, 2, 1, "", "UpdatableTrustRegionDiscrete"], [16, 2, 1, "", "UpdatableTrustRegionProduct"], [16, 1, 1, "", "UpdatableTrustRegionType"], [16, 2, 1, "", "_MeanStdTradeoff"]], "trieste.acquisition.rule.AcquisitionRule": [[16, 3, 1, "", "acquire"], [16, 3, 1, "", "acquire_single"], [16, 3, 1, "", "filter_datasets"]], "trieste.acquisition.rule.AsynchronousGreedy": [[16, 3, 1, "", "acquire"]], "trieste.acquisition.rule.AsynchronousOptimization": [[16, 3, 1, "", "acquire"]], "trieste.acquisition.rule.AsynchronousRuleState": [[16, 3, 1, "", "add_pending_points"], [16, 4, 1, "", "has_pending_points"], [16, 3, 1, "", "remove_points"]], "trieste.acquisition.rule.BatchHypervolumeSharpeRatioIndicator": [[16, 3, 1, "", "_find_non_dominated_points"], [16, 3, 1, "", "acquire"]], "trieste.acquisition.rule.BatchTrustRegion": [[16, 3, 1, "", "acquire"], [16, 3, 1, "", "filter_datasets"], [16, 3, 1, "", "get_initialize_subspaces_mask"], [16, 3, 1, "", "maybe_initialize_subspaces"], [16, 4, 1, "", "num_local_datasets"]], "trieste.acquisition.rule.BatchTrustRegionBox": [[16, 3, 1, "", "acquire"], [16, 3, 1, "", "get_initialize_subspaces_mask"], [16, 3, 1, "", "initialize_subspaces"]], "trieste.acquisition.rule.BatchTrustRegionProduct": [[16, 3, 1, "", "acquire"], [16, 3, 1, "", "get_initialize_subspaces_mask"], [16, 3, 1, "", "initialize_subspaces"]], "trieste.acquisition.rule.BatchTrustRegionState": [[16, 4, 1, "", "acquisition_space"], [16, 7, 1, "", "subspace_tags"], [16, 7, 1, "", "subspaces"]], "trieste.acquisition.rule.DiscreteThompsonSampling": [[16, 3, 1, "", "acquire"]], "trieste.acquisition.rule.EfficientGlobalOptimization": [[16, 3, 1, "", "acquire"], [16, 4, 1, "", "acquisition_function"]], "trieste.acquisition.rule.FixedPointTrustRegionDiscrete": [[16, 3, 1, "", "initialize"], [16, 3, 1, "", "update"]], "trieste.acquisition.rule.HypercubeTrustRegion": [[16, 3, 1, "", "_update_domain"], [16, 3, 1, "", "get_dataset_min"], [16, 3, 1, "", "get_values_min"], [16, 3, 1, "", "initialize"], [16, 4, 1, "", "requires_initialization"], [16, 3, 1, "", "update"]], "trieste.acquisition.rule.LocalDatasetsAcquisitionRule": [[16, 3, 1, "", "initialize_subspaces"], [16, 4, 1, "", "num_local_datasets"]], "trieste.acquisition.rule.RandomSampling": [[16, 3, 1, "", "acquire"]], "trieste.acquisition.rule.SingleObjectiveTrustRegionBox": [[16, 3, 1, "", "_update_domain"]], "trieste.acquisition.rule.SingleObjectiveTrustRegionDiscrete": [[16, 3, 1, "", "_update_domain"]], "trieste.acquisition.rule.TREGOBox": [[16, 3, 1, "", "_update_domain"], [16, 4, 1, "", "eps"], [16, 3, 1, "", "get_dataset_min"], [16, 3, 1, "", "get_datasets_filter_mask"], [16, 3, 1, "", "initialize"]], "trieste.acquisition.rule.TURBOBox": [[16, 3, 1, "", "get_dataset_min"], [16, 3, 1, "", "initialize"], [16, 3, 1, "", "update"]], "trieste.acquisition.rule.UpdatableSearchSpace": [[16, 3, 1, "", "initialize"], [16, 4, 1, "", "requires_initialization"], [16, 3, 1, "", "update"]], "trieste.acquisition.rule.UpdatableTrustRegion": [[16, 3, 1, "", "_init_location"], [16, 3, 1, "", "get_datasets_filter_mask"], [16, 4, 1, "", "global_search_space"], [16, 4, 1, "", "location"], [16, 3, 1, "", "select_in_region"], [16, 3, 1, "", "with_input_active_dims"]], "trieste.acquisition.rule.UpdatableTrustRegionBox": [[16, 4, 1, "", "global_search_space"], [16, 4, 1, "", "location"]], "trieste.acquisition.rule.UpdatableTrustRegionDiscrete": [[16, 4, 1, "", "global_search_space"], [16, 4, 1, "", "location"]], "trieste.acquisition.rule.UpdatableTrustRegionProduct": [[16, 3, 1, "", "get_datasets_filter_mask"], [16, 4, 1, "", "global_search_space"], [16, 3, 1, "", "initialize"], [16, 4, 1, "", "location"], [16, 4, 1, "", "region_index"], [16, 4, 1, "", "regions"], [16, 4, 1, "", "requires_initialization"], [16, 3, 1, "", "update"]], "trieste.acquisition.sampler": [[17, 2, 1, "", "ExactThompsonSampler"], [17, 2, 1, "", "GumbelSampler"], [17, 2, 1, "", "ThompsonSampler"], [17, 2, 1, "", "ThompsonSamplerFromTrajectory"]], "trieste.acquisition.sampler.ExactThompsonSampler": [[17, 3, 1, "", "sample"]], "trieste.acquisition.sampler.GumbelSampler": [[17, 3, 1, "", "sample"]], "trieste.acquisition.sampler.ThompsonSampler": [[17, 3, 1, "", "sample"], [17, 4, 1, "", "sample_min_value"]], "trieste.acquisition.sampler.ThompsonSamplerFromTrajectory": [[17, 3, 1, "", "sample"]], "trieste.acquisition.soft_local_penalizer": [[9, 3, 1, "", "__call__"]], "trieste.acquisition.utils": [[18, 5, 1, "", "copy_to_local_models"], [18, 5, 1, "", "get_local_dataset"], [18, 5, 1, "", "get_unique_points_mask"], [18, 5, 1, "", "select_nth_output"], [18, 5, 1, "", "split_acquisition_function"], [18, 5, 1, "", "split_acquisition_function_calls"], [18, 5, 1, "", "with_local_datasets"]], "trieste.ask_tell_optimization": [[19, 2, 1, "", "AskTellOptimizer"], [19, 2, 1, "", "AskTellOptimizerABC"], [19, 2, 1, "", "AskTellOptimizerNoTraining"], [19, 2, 1, "", "AskTellOptimizerState"], [19, 1, 1, "", "ProbabilisticModelType"], [19, 1, 1, "", "SearchSpaceType"], [19, 1, 1, "", "StateType"], [19, 1, 1, "", "TrainableProbabilisticModelType"]], "trieste.ask_tell_optimization.AskTellOptimizer": [[19, 3, 1, "", "update_model"]], "trieste.ask_tell_optimization.AskTellOptimizerABC": [[19, 3, 1, "", "__repr__"], [19, 4, 1, "", "acquisition_state"], [19, 3, 1, "", "ask"], [19, 4, 1, "", "dataset"], [19, 3, 1, "", "dataset_len"], [19, 4, 1, "", "datasets"], [19, 3, 1, "", "from_record"], [19, 3, 1, "", "from_state"], [19, 4, 1, "", "local_data_ixs"], [19, 4, 1, "", "local_data_len"], [19, 4, 1, "", "model"], [19, 4, 1, "", "models"], [19, 3, 1, "", "tell"], [19, 3, 1, "", "to_record"], [19, 3, 1, "", "to_result"], [19, 3, 1, "", "to_state"], [19, 3, 1, "", "update_model"]], "trieste.ask_tell_optimization.AskTellOptimizerNoTraining": [[19, 3, 1, "", "update_model"]], "trieste.ask_tell_optimization.AskTellOptimizerState": [[19, 7, 1, "", "local_data_ixs"], [19, 7, 1, "", "local_data_len"], [19, 7, 1, "", "record"]], "trieste.bayesian_optimizer": [[20, 2, 1, "", "BayesianOptimizer"], [20, 1, 1, "", "EarlyStopCallback"], [20, 2, 1, "", "FrozenRecord"], [20, 2, 1, "", "OptimizationResult"], [20, 1, 1, "", "ProbabilisticModelType"], [20, 2, 1, "", "Record"], [20, 1, 1, "", "SearchSpaceType"], [20, 1, 1, "", "StateType"], [20, 1, 1, "", "TrainableProbabilisticModelType"], [20, 5, 1, "", "observation_plot_init"], [20, 5, 1, "", "stop_at_minimum"], [20, 5, 1, "", "write_summary_init"], [20, 5, 1, "", "write_summary_initial_model_fit"], [20, 5, 1, "", "write_summary_observations"], [20, 5, 1, "", "write_summary_query_points"]], "trieste.bayesian_optimizer.BayesianOptimizer": [[20, 3, 1, "", "continue_optimization"], [20, 3, 1, "", "optimize"]], "trieste.bayesian_optimizer.FrozenRecord": [[20, 4, 1, "", "acquisition_state"], [20, 4, 1, "", "dataset"], [20, 4, 1, "", "datasets"], [20, 3, 1, "", "load"], [20, 4, 1, "", "model"], [20, 4, 1, "", "models"], [20, 7, 1, "", "path"]], "trieste.bayesian_optimizer.OptimizationResult": [[20, 3, 1, "", "astuple"], [20, 7, 1, "", "final_result"], [20, 3, 1, "", "from_path"], [20, 7, 1, "", "history"], [20, 4, 1, "", "is_err"], [20, 4, 1, "", "is_ok"], [20, 4, 1, "", "loaded_history"], [20, 3, 1, "", "save"], [20, 3, 1, "", "save_result"], [20, 3, 1, "", "step_filename"], [20, 3, 1, "", "try_get_final_dataset"], [20, 3, 1, "", "try_get_final_datasets"], [20, 3, 1, "", "try_get_final_model"], [20, 3, 1, "", "try_get_final_models"], [20, 3, 1, "", "try_get_optimal_point"]], "trieste.bayesian_optimizer.Record": [[20, 7, 1, "", "acquisition_state"], [20, 4, 1, "", "dataset"], [20, 7, 1, "", "datasets"], [20, 4, 1, "", "model"], [20, 7, 1, "", "models"], [20, 3, 1, "", "save"]], "trieste.data": [[21, 2, 1, "", "Dataset"], [21, 5, 1, "", "add_fidelity_column"], [21, 5, 1, "", "check_and_extract_fidelity_query_points"], [21, 5, 1, "", "get_dataset_for_fidelity"], [21, 5, 1, "", "split_dataset_by_fidelity"]], "trieste.data.Dataset": [[21, 3, 1, "", "__add__"], [21, 3, 1, "", "__len__"], [21, 3, 1, "", "__post_init__"], [21, 3, 1, "", "astuple"], [21, 7, 1, "", "observations"], [21, 7, 1, "", "query_points"]], "trieste.experimental": [[23, 0, 0, "-", "plotting"]], "trieste.experimental.plotting": [[24, 0, 0, "-", "inequality_constraints"], [25, 0, 0, "-", "plotting"], [26, 0, 0, "-", "plotting_plotly"]], "trieste.experimental.plotting.inequality_constraints": [[24, 2, 1, "", "Simulation"], [24, 5, 1, "", "plot_2obj_cst_query_points"], [24, 5, 1, "", "plot_init_query_points"], [24, 5, 1, "", "plot_objective_and_constraints"]], "trieste.experimental.plotting.inequality_constraints.Simulation": [[24, 3, 1, "", "constraint"], [24, 3, 1, "", "objective"]], "trieste.experimental.plotting.plotting": [[25, 5, 1, "", "convert_figure_to_frame"], [25, 5, 1, "", "convert_frames_to_gif"], [25, 5, 1, "", "create_grid"], [25, 5, 1, "", "format_point_markers"], [25, 5, 1, "", "plot_acq_function_2d"], [25, 5, 1, "", "plot_bo_points"], [25, 5, 1, "", "plot_function_2d"], [25, 5, 1, "", "plot_gp_2d"], [25, 5, 1, "", "plot_mobo_history"], [25, 5, 1, "", "plot_mobo_points_in_obj_space"], [25, 5, 1, "", "plot_regret"], [25, 5, 1, "", "plot_surface"], [25, 5, 1, "", "plot_trust_region_history_2d"]], "trieste.experimental.plotting.plotting_plotly": [[26, 5, 1, "", "add_bo_points_plotly"], [26, 5, 1, "", "add_surface_plotly"], [26, 5, 1, "", "format_point_markers"], [26, 5, 1, "", "plot_function_plotly"], [26, 5, 1, "", "plot_model_predictions_plotly"]], "trieste.logging": [[28, 5, 1, "", "default_summary_filter"], [28, 5, 1, "", "evaluate_data"], [28, 5, 1, "", "get_current_name_scope"], [28, 5, 1, "", "get_step_number"], [28, 5, 1, "", "get_summary_filter"], [28, 5, 1, "", "get_tensorboard_writer"], [28, 5, 1, "", "histogram"], [28, 5, 1, "", "include_summary"], [28, 5, 1, "", "pyplot"], [28, 5, 1, "", "scalar"], [28, 5, 1, "", "set_step_number"], [28, 5, 1, "", "set_summary_filter"], [28, 5, 1, "", "set_tensorboard_writer"], [28, 5, 1, "", "step_number"], [28, 5, 1, "", "tensorboard_writer"], [28, 5, 1, "", "text"]], "trieste.models": [[42, 2, 1, "", "FastUpdateModel"], [42, 2, 1, "", "ModelStack"], [42, 2, 1, "", "ProbabilisticModel"], [42, 1, 1, "", "ProbabilisticModelType"], [42, 2, 1, "", "ReparametrizationSampler"], [42, 2, 1, "", "SupportsCovarianceWithTopFidelity"], [42, 2, 1, "", "TrainableModelStack"], [42, 2, 1, "", "TrainableProbabilisticModel"], [42, 1, 1, "", "TrajectoryFunction"], [42, 2, 1, "", "TrajectoryFunctionClass"], [42, 2, 1, "", "TrajectorySampler"], [30, 0, 0, "-", "gpflow"], [38, 0, 0, "-", "gpflux"], [43, 0, 0, "-", "interfaces"], [46, 0, 0, "-", "keras"], [51, 0, 0, "-", "optimizer"], [52, 0, 0, "-", "utils"]], "trieste.models.FastUpdateModel": [[42, 3, 1, "", "conditional_predict_f"], [42, 3, 1, "", "conditional_predict_f_sample"], [42, 3, 1, "", "conditional_predict_joint"], [42, 3, 1, "", "conditional_predict_y"]], "trieste.models.ModelStack": [[42, 3, 1, "", "log"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "sample"]], "trieste.models.ProbabilisticModel": [[42, 3, 1, "", "log"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "sample"]], "trieste.models.ReparametrizationSampler": [[42, 3, 1, "", "reset_sampler"], [42, 3, 1, "", "sample"]], "trieste.models.SupportsCovarianceWithTopFidelity": [[42, 3, 1, "", "covariance_with_top_fidelity"], [42, 4, 1, "", "num_fidelities"]], "trieste.models.TrainableModelStack": [[42, 3, 1, "", "optimize"], [42, 3, 1, "", "update"]], "trieste.models.TrainableProbabilisticModel": [[42, 3, 1, "", "optimize"], [42, 3, 1, "", "update"]], "trieste.models.TrajectoryFunctionClass": [[42, 3, 1, "", "__call__"]], "trieste.models.TrajectorySampler": [[42, 3, 1, "", "get_trajectory"], [42, 3, 1, "", "resample_trajectory"], [42, 3, 1, "", "update_trajectory"]], "trieste.models.gpflow": [[30, 2, 1, "", "BatchReparametrizationSampler"], [30, 2, 1, "", "ConditionalImprovementReduction"], [30, 2, 1, "", "ConditionalVarianceReduction"], [30, 2, 1, "", "DecoupledTrajectorySampler"], [30, 2, 1, "", "GPflowPredictor"], [30, 2, 1, "", "GaussianProcessRegression"], [30, 2, 1, "", "IndependentReparametrizationSampler"], [30, 2, 1, "", "InducingPointSelector"], [30, 2, 1, "", "KMeansInducingPointSelector"], [30, 2, 1, "", "MultifidelityAutoregressive"], [30, 2, 1, "", "MultifidelityNonlinearAutoregressive"], [30, 2, 1, "", "RandomFourierFeatureTrajectorySampler"], [30, 2, 1, "", "RandomSubSampleInducingPointSelector"], [30, 2, 1, "", "SparseGaussianProcessRegression"], [30, 2, 1, "", "SparseVariational"], [30, 2, 1, "", "UniformInducingPointSelector"], [30, 2, 1, "", "VariationalGaussianProcess"], [30, 5, 1, "", "assert_data_is_compatible"], [30, 5, 1, "", "build_gpr"], [30, 5, 1, "", "build_multifidelity_autoregressive_models"], [30, 5, 1, "", "build_multifidelity_nonlinear_autoregressive_models"], [30, 5, 1, "", "build_sgpr"], [30, 5, 1, "", "build_svgp"], [30, 5, 1, "", "build_vgp_classifier"], [29, 0, 0, "-", "builders"], [30, 5, 1, "", "check_optimizer"], [30, 2, 1, "", "feature_decomposition_trajectory"], [31, 0, 0, "-", "inducing_point_selectors"], [32, 0, 0, "-", "interface"], [33, 0, 0, "-", "models"], [34, 0, 0, "-", "optimizer"], [30, 5, 1, "", "randomize_hyperparameters"], [35, 0, 0, "-", "sampler"], [30, 5, 1, "", "squeeze_hyperparameters"], [36, 0, 0, "-", "utils"]], "trieste.models.gpflow.BatchReparametrizationSampler": [[30, 3, 1, "", "sample"], [30, 7, 1, "", "skip"]], "trieste.models.gpflow.DecoupledTrajectorySampler": [[30, 3, 1, "", "_prepare_weight_sampler"]], "trieste.models.gpflow.GPflowPredictor": [[30, 3, 1, "", "_ensure_variable_model_data"], [30, 3, 1, "", "create_posterior_cache"], [30, 3, 1, "", "get_kernel"], [30, 3, 1, "", "get_mean_function"], [30, 3, 1, "", "get_observation_noise"], [30, 3, 1, "", "log"], [30, 4, 1, "", "model"], [30, 4, 1, "", "optimizer"], [30, 3, 1, "", "predict"], [30, 3, 1, "", "predict_joint"], [30, 3, 1, "", "predict_y"], [30, 3, 1, "", "reparam_sampler"], [30, 3, 1, "", "sample"], [30, 3, 1, "", "update_posterior_cache"]], "trieste.models.gpflow.GaussianProcessRegression": [[30, 3, 1, "", "_ensure_variable_model_data"], [30, 3, 1, "", "conditional_predict_f"], [30, 3, 1, "", "conditional_predict_f_sample"], [30, 3, 1, "", "conditional_predict_joint"], [30, 3, 1, "", "conditional_predict_y"], [30, 3, 1, "", "covariance_between_points"], [30, 3, 1, "", "find_best_model_initialization"], [30, 3, 1, "", "get_internal_data"], [30, 4, 1, "", "model"], [30, 3, 1, "", "optimize"], [30, 3, 1, "", "predict_y"], [30, 3, 1, "", "trajectory_sampler"], [30, 3, 1, "", "update"]], "trieste.models.gpflow.IndependentReparametrizationSampler": [[30, 3, 1, "", "sample"], [30, 7, 1, "", "skip"]], "trieste.models.gpflow.InducingPointSelector": [[30, 3, 1, "", "_recalculate_inducing_points"], [30, 3, 1, "", "calculate_inducing_points"]], "trieste.models.gpflow.KMeansInducingPointSelector": [[30, 3, 1, "", "_recalculate_inducing_points"]], "trieste.models.gpflow.MultifidelityAutoregressive": [[30, 3, 1, "", "_calculate_residual"], [30, 3, 1, "", "covariance_with_top_fidelity"], [30, 3, 1, "", "log"], [30, 4, 1, "", "num_fidelities"], [30, 3, 1, "", "optimize"], [30, 3, 1, "", "predict"], [30, 3, 1, "", "predict_y"], [30, 3, 1, "", "sample"], [30, 3, 1, "", "update"]], "trieste.models.gpflow.MultifidelityNonlinearAutoregressive": [[30, 3, 1, "", "_propagate_samples_through_level"], [30, 3, 1, "", "_sample_mean_and_var_at_fidelities"], [30, 3, 1, "", "covariance_with_top_fidelity"], [30, 3, 1, "", "log"], [30, 4, 1, "", "num_fidelities"], [30, 3, 1, "", "optimize"], [30, 3, 1, "", "predict"], [30, 3, 1, "", "predict_y"], [30, 3, 1, "", "sample"], [30, 3, 1, "", "update"]], "trieste.models.gpflow.RandomFourierFeatureTrajectorySampler": [[30, 3, 1, "", "_prepare_theta_posterior_in_design_space"], [30, 3, 1, "", "_prepare_theta_posterior_in_gram_space"], [30, 3, 1, "", "_prepare_weight_sampler"]], "trieste.models.gpflow.RandomSubSampleInducingPointSelector": [[30, 3, 1, "", "_recalculate_inducing_points"]], "trieste.models.gpflow.SparseGaussianProcessRegression": [[30, 3, 1, "", "_ensure_variable_model_data"], [30, 3, 1, "", "_update_inducing_variables"], [30, 3, 1, "", "covariance_between_points"], [30, 3, 1, "", "get_inducing_variables"], [30, 3, 1, "", "get_internal_data"], [30, 4, 1, "", "model"], [30, 3, 1, "", "optimize"], [30, 3, 1, "", "predict_y"], [30, 3, 1, "", "trajectory_sampler"], [30, 3, 1, "", "update"]], "trieste.models.gpflow.SparseVariational": [[30, 3, 1, "", "_ensure_variable_model_data"], [30, 3, 1, "", "_update_inducing_variables"], [30, 3, 1, "", "covariance_between_points"], [30, 3, 1, "", "get_inducing_variables"], [30, 4, 1, "", "model"], [30, 3, 1, "", "optimize"], [30, 3, 1, "", "predict_y"], [30, 3, 1, "", "trajectory_sampler"], [30, 3, 1, "", "update"]], "trieste.models.gpflow.UniformInducingPointSelector": [[30, 3, 1, "", "_recalculate_inducing_points"]], "trieste.models.gpflow.VariationalGaussianProcess": [[30, 3, 1, "", "_ensure_variable_model_data"], [30, 3, 1, "", "covariance_between_points"], [30, 3, 1, "", "get_inducing_variables"], [30, 4, 1, "", "model"], [30, 3, 1, "", "optimize"], [30, 3, 1, "", "predict_y"], [30, 3, 1, "", "trajectory_sampler"], [30, 3, 1, "", "update"]], "trieste.models.gpflow.builders": [[29, 1, 1, "", "CLASSIFICATION_KERNEL_VARIANCE"], [29, 1, 1, "", "CLASSIFICATION_KERNEL_VARIANCE_NOISE_FREE"], [29, 1, 1, "", "KERNEL_LENGTHSCALE"], [29, 1, 1, "", "KERNEL_PRIOR_SCALE"], [29, 1, 1, "", "MAX_NUM_INDUCING_POINTS"], [29, 1, 1, "", "NUM_INDUCING_POINTS_PER_DIM"], [29, 1, 1, "", "SIGNAL_NOISE_RATIO_LIKELIHOOD"], [29, 5, 1, "", "build_gpr"], [29, 5, 1, "", "build_multifidelity_autoregressive_models"], [29, 5, 1, "", "build_multifidelity_nonlinear_autoregressive_models"], [29, 5, 1, "", "build_sgpr"], [29, 5, 1, "", "build_svgp"], [29, 5, 1, "", "build_vgp_classifier"]], "trieste.models.gpflow.feature_decomposition_trajectory": [[30, 3, 1, "", "__call__"], [30, 3, 1, "", "resample"], [30, 3, 1, "", "update"]], "trieste.models.gpflow.inducing_point_selectors": [[31, 2, 1, "", "ConditionalImprovementReduction"], [31, 2, 1, "", "ConditionalVarianceReduction"], [31, 2, 1, "", "DPPInducingPointSelector"], [31, 2, 1, "", "InducingPointSelector"], [31, 2, 1, "", "KMeansInducingPointSelector"], [31, 2, 1, "", "ModelBasedImprovementQualityFunction"], [31, 2, 1, "", "QualityFunction"], [31, 2, 1, "", "RandomSubSampleInducingPointSelector"], [31, 2, 1, "", "UniformInducingPointSelector"], [31, 2, 1, "", "UnitQualityFunction"], [31, 5, 1, "", "greedy_inference_dpp"]], "trieste.models.gpflow.inducing_point_selectors.DPPInducingPointSelector": [[31, 3, 1, "", "_recalculate_inducing_points"]], "trieste.models.gpflow.inducing_point_selectors.InducingPointSelector": [[31, 3, 1, "", "_recalculate_inducing_points"], [31, 3, 1, "", "calculate_inducing_points"]], "trieste.models.gpflow.inducing_point_selectors.KMeansInducingPointSelector": [[31, 3, 1, "", "_recalculate_inducing_points"]], "trieste.models.gpflow.inducing_point_selectors.ModelBasedImprovementQualityFunction": [[31, 3, 1, "", "__call__"]], "trieste.models.gpflow.inducing_point_selectors.QualityFunction": [[31, 3, 1, "", "__call__"]], "trieste.models.gpflow.inducing_point_selectors.RandomSubSampleInducingPointSelector": [[31, 3, 1, "", "_recalculate_inducing_points"]], "trieste.models.gpflow.inducing_point_selectors.UniformInducingPointSelector": [[31, 3, 1, "", "_recalculate_inducing_points"]], "trieste.models.gpflow.inducing_point_selectors.UnitQualityFunction": [[31, 3, 1, "", "__call__"]], "trieste.models.gpflow.interface": [[32, 2, 1, "", "GPflowPredictor"], [32, 2, 1, "", "SupportsCovarianceBetweenPoints"]], "trieste.models.gpflow.interface.GPflowPredictor": [[32, 3, 1, "", "_ensure_variable_model_data"], [32, 3, 1, "", "create_posterior_cache"], [32, 3, 1, "", "get_kernel"], [32, 3, 1, "", "get_mean_function"], [32, 3, 1, "", "get_observation_noise"], [32, 3, 1, "", "log"], [32, 4, 1, "", "model"], [32, 4, 1, "", "optimizer"], [32, 3, 1, "", "predict"], [32, 3, 1, "", "predict_joint"], [32, 3, 1, "", "predict_y"], [32, 3, 1, "", "reparam_sampler"], [32, 3, 1, "", "sample"], [32, 3, 1, "", "update_posterior_cache"]], "trieste.models.gpflow.interface.SupportsCovarianceBetweenPoints": [[32, 3, 1, "", "covariance_between_points"]], "trieste.models.gpflow.models": [[33, 2, 1, "", "GaussianProcessRegression"], [33, 2, 1, "", "MultifidelityAutoregressive"], [33, 2, 1, "", "MultifidelityNonlinearAutoregressive"], [33, 2, 1, "", "SparseGaussianProcessRegression"], [33, 2, 1, "", "SparseVariational"], [33, 2, 1, "", "VariationalGaussianProcess"]], "trieste.models.gpflow.models.GaussianProcessRegression": [[33, 3, 1, "", "_ensure_variable_model_data"], [33, 3, 1, "", "conditional_predict_f"], [33, 3, 1, "", "conditional_predict_f_sample"], [33, 3, 1, "", "conditional_predict_joint"], [33, 3, 1, "", "conditional_predict_y"], [33, 3, 1, "", "covariance_between_points"], [33, 3, 1, "", "find_best_model_initialization"], [33, 3, 1, "", "get_internal_data"], [33, 4, 1, "", "model"], [33, 3, 1, "", "optimize"], [33, 3, 1, "", "predict_y"], [33, 3, 1, "", "trajectory_sampler"], [33, 3, 1, "", "update"]], "trieste.models.gpflow.models.MultifidelityAutoregressive": [[33, 3, 1, "", "_calculate_residual"], [33, 3, 1, "", "covariance_with_top_fidelity"], [33, 3, 1, "", "log"], [33, 4, 1, "", "num_fidelities"], [33, 3, 1, "", "optimize"], [33, 3, 1, "", "predict"], [33, 3, 1, "", "predict_y"], [33, 3, 1, "", "sample"], [33, 3, 1, "", "update"]], "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive": [[33, 3, 1, "", "_propagate_samples_through_level"], [33, 3, 1, "", "_sample_mean_and_var_at_fidelities"], [33, 3, 1, "", "covariance_with_top_fidelity"], [33, 3, 1, "", "log"], [33, 4, 1, "", "num_fidelities"], [33, 3, 1, "", "optimize"], [33, 3, 1, "", "predict"], [33, 3, 1, "", "predict_y"], [33, 3, 1, "", "sample"], [33, 3, 1, "", "update"]], "trieste.models.gpflow.models.SparseGaussianProcessRegression": [[33, 3, 1, "", "_ensure_variable_model_data"], [33, 3, 1, "", "_update_inducing_variables"], [33, 3, 1, "", "covariance_between_points"], [33, 3, 1, "", "get_inducing_variables"], [33, 3, 1, "", "get_internal_data"], [33, 4, 1, "", "model"], [33, 3, 1, "", "optimize"], [33, 3, 1, "", "predict_y"], [33, 3, 1, "", "trajectory_sampler"], [33, 3, 1, "", "update"]], "trieste.models.gpflow.models.SparseVariational": [[33, 3, 1, "", "_ensure_variable_model_data"], [33, 3, 1, "", "_update_inducing_variables"], [33, 3, 1, "", "covariance_between_points"], [33, 3, 1, "", "get_inducing_variables"], [33, 4, 1, "", "model"], [33, 3, 1, "", "optimize"], [33, 3, 1, "", "predict_y"], [33, 3, 1, "", "trajectory_sampler"], [33, 3, 1, "", "update"]], "trieste.models.gpflow.models.VariationalGaussianProcess": [[33, 3, 1, "", "_ensure_variable_model_data"], [33, 3, 1, "", "covariance_between_points"], [33, 3, 1, "", "get_inducing_variables"], [33, 4, 1, "", "model"], [33, 3, 1, "", "optimize"], [33, 3, 1, "", "predict_y"], [33, 3, 1, "", "trajectory_sampler"], [33, 3, 1, "", "update"]], "trieste.models.gpflow.sampler": [[35, 2, 1, "", "BatchReparametrizationSampler"], [35, 2, 1, "", "DecoupledTrajectorySampler"], [35, 2, 1, "", "FeatureDecompositionInducingPointModel"], [35, 2, 1, "", "FeatureDecompositionInternalDataModel"], [35, 2, 1, "", "FeatureDecompositionTrajectorySampler"], [35, 2, 1, "", "IndependentReparametrizationSampler"], [35, 2, 1, "", "RandomFourierFeatureTrajectorySampler"], [35, 2, 1, "", "ResampleableDecoupledFeatureFunctions"], [35, 2, 1, "", "ResampleableRandomFourierFeatureFunctions"], [35, 2, 1, "", "feature_decomposition_trajectory"], [35, 5, 1, "", "qmc_normal_samples"]], "trieste.models.gpflow.sampler.BatchReparametrizationSampler": [[35, 3, 1, "", "sample"], [35, 7, 1, "", "skip"]], "trieste.models.gpflow.sampler.DecoupledTrajectorySampler": [[35, 3, 1, "", "_prepare_weight_sampler"]], "trieste.models.gpflow.sampler.FeatureDecompositionTrajectorySampler": [[35, 3, 1, "", "_prepare_weight_sampler"], [35, 3, 1, "", "get_trajectory"], [35, 3, 1, "", "resample_trajectory"], [35, 3, 1, "", "update_trajectory"]], "trieste.models.gpflow.sampler.IndependentReparametrizationSampler": [[35, 3, 1, "", "sample"], [35, 7, 1, "", "skip"]], "trieste.models.gpflow.sampler.RandomFourierFeatureTrajectorySampler": [[35, 3, 1, "", "_prepare_theta_posterior_in_design_space"], [35, 3, 1, "", "_prepare_theta_posterior_in_gram_space"], [35, 3, 1, "", "_prepare_weight_sampler"]], "trieste.models.gpflow.sampler.ResampleableDecoupledFeatureFunctions": [[35, 3, 1, "", "call"]], "trieste.models.gpflow.sampler.ResampleableRandomFourierFeatureFunctions": [[35, 3, 1, "", "call"], [35, 3, 1, "", "resample"]], "trieste.models.gpflow.sampler.feature_decomposition_trajectory": [[35, 3, 1, "", "__call__"], [35, 3, 1, "", "resample"], [35, 3, 1, "", "update"]], "trieste.models.gpflow.utils": [[36, 5, 1, "", "_compute_kernel_blocks"], [36, 5, 1, "", "_covariance_between_points_for_variational_models"], [36, 5, 1, "", "_whiten_points"], [36, 5, 1, "", "assert_data_is_compatible"], [36, 5, 1, "", "check_optimizer"], [36, 5, 1, "", "randomize_hyperparameters"], [36, 5, 1, "", "squeeze_hyperparameters"]], "trieste.models.gpflux": [[38, 2, 1, "", "DeepGaussianProcess"], [38, 2, 1, "", "DeepGaussianProcessDecoupledLayer"], [38, 2, 1, "", "DeepGaussianProcessDecoupledTrajectorySampler"], [38, 2, 1, "", "DeepGaussianProcessReparamSampler"], [38, 2, 1, "", "GPfluxPredictor"], [38, 2, 1, "", "ResampleableDecoupledDeepGaussianProcessFeatureFunctions"], [38, 5, 1, "", "build_vanilla_deep_gp"], [37, 0, 0, "-", "builders"], [38, 2, 1, "", "dgp_feature_decomposition_trajectory"], [39, 0, 0, "-", "interface"], [40, 0, 0, "-", "models"], [41, 0, 0, "-", "sampler"]], "trieste.models.gpflux.DeepGaussianProcess": [[38, 3, 1, "", "log"], [38, 4, 1, "", "model_gpflux"], [38, 4, 1, "", "model_keras"], [38, 3, 1, "", "optimize"], [38, 3, 1, "", "reparam_sampler"], [38, 3, 1, "", "sample"], [38, 3, 1, "", "trajectory_sampler"], [38, 3, 1, "", "update"]], "trieste.models.gpflux.DeepGaussianProcessDecoupledLayer": [[38, 3, 1, "", "__call__"], [38, 3, 1, "", "_prepare_weight_sampler"], [38, 3, 1, "", "resample"], [38, 3, 1, "", "update"]], "trieste.models.gpflux.DeepGaussianProcessDecoupledTrajectorySampler": [[38, 3, 1, "", "get_trajectory"], [38, 3, 1, "", "resample_trajectory"], [38, 3, 1, "", "update_trajectory"]], "trieste.models.gpflux.DeepGaussianProcessReparamSampler": [[38, 3, 1, "", "sample"]], "trieste.models.gpflux.GPfluxPredictor": [[38, 3, 1, "", "get_observation_noise"], [38, 4, 1, "", "model_gpflux"], [38, 4, 1, "", "model_keras"], [38, 4, 1, "", "optimizer"], [38, 3, 1, "", "predict"], [38, 3, 1, "", "predict_y"], [38, 3, 1, "", "sample"]], "trieste.models.gpflux.ResampleableDecoupledDeepGaussianProcessFeatureFunctions": [[38, 3, 1, "", "__call__"], [38, 3, 1, "", "resample"]], "trieste.models.gpflux.builders": [[37, 1, 1, "", "INNER_LAYER_SQRT_FACTOR"], [37, 1, 1, "", "LIKELIHOOD_VARIANCE"], [37, 1, 1, "", "MAX_NUM_INDUCING_POINTS"], [37, 1, 1, "", "NUM_INDUCING_POINTS_PER_DIM"], [37, 1, 1, "", "NUM_LAYERS"], [37, 5, 1, "", "build_vanilla_deep_gp"]], "trieste.models.gpflux.dgp_feature_decomposition_trajectory": [[38, 3, 1, "", "__call__"], [38, 3, 1, "", "resample"], [38, 3, 1, "", "update"]], "trieste.models.gpflux.interface": [[39, 2, 1, "", "GPfluxPredictor"]], "trieste.models.gpflux.interface.GPfluxPredictor": [[39, 3, 1, "", "get_observation_noise"], [39, 4, 1, "", "model_gpflux"], [39, 4, 1, "", "model_keras"], [39, 4, 1, "", "optimizer"], [39, 3, 1, "", "predict"], [39, 3, 1, "", "predict_y"], [39, 3, 1, "", "sample"]], "trieste.models.gpflux.models": [[40, 2, 1, "", "DeepGaussianProcess"]], "trieste.models.gpflux.models.DeepGaussianProcess": [[40, 3, 1, "", "log"], [40, 4, 1, "", "model_gpflux"], [40, 4, 1, "", "model_keras"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "reparam_sampler"], [40, 3, 1, "", "sample"], [40, 3, 1, "", "trajectory_sampler"], [40, 3, 1, "", "update"]], "trieste.models.gpflux.sampler": [[41, 2, 1, "", "DeepGaussianProcessDecoupledLayer"], [41, 2, 1, "", "DeepGaussianProcessDecoupledTrajectorySampler"], [41, 2, 1, "", "DeepGaussianProcessReparamSampler"], [41, 2, 1, "", "ResampleableDecoupledDeepGaussianProcessFeatureFunctions"], [41, 2, 1, "", "dgp_feature_decomposition_trajectory"]], "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledLayer": [[41, 3, 1, "", "__call__"], [41, 3, 1, "", "_prepare_weight_sampler"], [41, 3, 1, "", "resample"], [41, 3, 1, "", "update"]], "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledTrajectorySampler": [[41, 3, 1, "", "get_trajectory"], [41, 3, 1, "", "resample_trajectory"], [41, 3, 1, "", "update_trajectory"]], "trieste.models.gpflux.sampler.DeepGaussianProcessReparamSampler": [[41, 3, 1, "", "sample"]], "trieste.models.gpflux.sampler.ResampleableDecoupledDeepGaussianProcessFeatureFunctions": [[41, 3, 1, "", "__call__"], [41, 3, 1, "", "resample"]], "trieste.models.gpflux.sampler.dgp_feature_decomposition_trajectory": [[41, 3, 1, "", "__call__"], [41, 3, 1, "", "resample"], [41, 3, 1, "", "update"]], "trieste.models.interfaces": [[43, 2, 1, "", "FastUpdateModel"], [43, 2, 1, "", "HasReparamSampler"], [43, 2, 1, "", "HasReparamSamplerModelStack"], [43, 2, 1, "", "HasTrajectorySampler"], [43, 2, 1, "", "ModelStack"], [43, 2, 1, "", "PredictJointModelStack"], [43, 2, 1, "", "PredictJointPredictYModelStack"], [43, 2, 1, "", "PredictYModelStack"], [43, 2, 1, "", "ProbabilisticModel"], [43, 1, 1, "", "ProbabilisticModelType"], [43, 2, 1, "", "ReparametrizationSampler"], [43, 2, 1, "", "SupportsCovarianceWithTopFidelity"], [43, 2, 1, "", "SupportsGetInducingVariables"], [43, 2, 1, "", "SupportsGetInternalData"], [43, 2, 1, "", "SupportsGetKernel"], [43, 2, 1, "", "SupportsGetMeanFunction"], [43, 2, 1, "", "SupportsGetObservationNoise"], [43, 2, 1, "", "SupportsPredictJoint"], [43, 2, 1, "", "SupportsPredictJointPredictY"], [43, 2, 1, "", "SupportsPredictY"], [43, 2, 1, "", "SupportsReparamSamplerObservationNoise"], [43, 2, 1, "", "TrainableModelStack"], [43, 2, 1, "", "TrainablePredictJointModelStack"], [43, 2, 1, "", "TrainablePredictJointReparamModelStack"], [43, 2, 1, "", "TrainablePredictYModelStack"], [43, 2, 1, "", "TrainableProbabilisticModel"], [43, 2, 1, "", "TrainableSupportsGetKernel"], [43, 2, 1, "", "TrainableSupportsPredictJoint"], [43, 2, 1, "", "TrainableSupportsPredictJointHasReparamSampler"], [43, 2, 1, "", "TrainableSupportsPredictY"], [43, 1, 1, "", "TrajectoryFunction"], [43, 2, 1, "", "TrajectoryFunctionClass"], [43, 2, 1, "", "TrajectorySampler"]], "trieste.models.interfaces.FastUpdateModel": [[43, 3, 1, "", "conditional_predict_f"], [43, 3, 1, "", "conditional_predict_f_sample"], [43, 3, 1, "", "conditional_predict_joint"], [43, 3, 1, "", "conditional_predict_y"]], "trieste.models.interfaces.HasReparamSampler": [[43, 3, 1, "", "reparam_sampler"]], "trieste.models.interfaces.HasReparamSamplerModelStack": [[43, 3, 1, "", "reparam_sampler"]], "trieste.models.interfaces.HasTrajectorySampler": [[43, 3, 1, "", "trajectory_sampler"]], "trieste.models.interfaces.ModelStack": [[43, 3, 1, "", "log"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "sample"]], "trieste.models.interfaces.PredictJointModelStack": [[43, 3, 1, "", "predict_joint"]], "trieste.models.interfaces.PredictYModelStack": [[43, 3, 1, "", "predict_y"]], "trieste.models.interfaces.ProbabilisticModel": [[43, 3, 1, "", "log"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "sample"]], "trieste.models.interfaces.ReparametrizationSampler": [[43, 3, 1, "", "reset_sampler"], [43, 3, 1, "", "sample"]], "trieste.models.interfaces.SupportsCovarianceWithTopFidelity": [[43, 3, 1, "", "covariance_with_top_fidelity"], [43, 4, 1, "", "num_fidelities"]], "trieste.models.interfaces.SupportsGetInducingVariables": [[43, 3, 1, "", "get_inducing_variables"]], "trieste.models.interfaces.SupportsGetInternalData": [[43, 3, 1, "", "get_internal_data"]], "trieste.models.interfaces.SupportsGetKernel": [[43, 3, 1, "", "get_kernel"]], "trieste.models.interfaces.SupportsGetMeanFunction": [[43, 3, 1, "", "get_mean_function"]], "trieste.models.interfaces.SupportsGetObservationNoise": [[43, 3, 1, "", "get_observation_noise"]], "trieste.models.interfaces.SupportsPredictJoint": [[43, 3, 1, "", "predict_joint"]], "trieste.models.interfaces.SupportsPredictY": [[43, 3, 1, "", "predict_y"]], "trieste.models.interfaces.TrainableModelStack": [[43, 3, 1, "", "optimize"], [43, 3, 1, "", "update"]], "trieste.models.interfaces.TrainableProbabilisticModel": [[43, 3, 1, "", "optimize"], [43, 3, 1, "", "update"]], "trieste.models.interfaces.TrajectoryFunctionClass": [[43, 3, 1, "", "__call__"]], "trieste.models.interfaces.TrajectorySampler": [[43, 3, 1, "", "get_trajectory"], [43, 3, 1, "", "resample_trajectory"], [43, 3, 1, "", "update_trajectory"]], "trieste.models.keras": [[46, 2, 1, "", "DeepEnsemble"], [46, 2, 1, "", "DeepEnsembleModel"], [46, 2, 1, "", "DeepEnsembleTrajectorySampler"], [46, 2, 1, "", "GaussianNetwork"], [46, 2, 1, "", "KerasEnsemble"], [46, 2, 1, "", "KerasEnsembleNetwork"], [46, 2, 1, "", "KerasPredictor"], [44, 0, 0, "-", "architectures"], [46, 5, 1, "", "build_keras_ensemble"], [45, 0, 0, "-", "builders"], [46, 2, 1, "", "deep_ensemble_trajectory"], [46, 5, 1, "", "get_tensor_spec_from_data"], [47, 0, 0, "-", "interface"], [48, 0, 0, "-", "models"], [46, 5, 1, "", "negative_log_likelihood"], [46, 5, 1, "", "sample_with_replacement"], [49, 0, 0, "-", "sampler"], [50, 0, 0, "-", "utils"]], "trieste.models.keras.DeepEnsemble": [[46, 4, 1, "", "dtype"], [46, 3, 1, "", "ensemble_distributions"], [46, 4, 1, "", "ensemble_size"], [46, 3, 1, "", "log"], [46, 4, 1, "", "model"], [46, 4, 1, "", "num_outputs"], [46, 3, 1, "", "optimize"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "predict_ensemble"], [46, 3, 1, "", "prepare_dataset"], [46, 3, 1, "", "prepare_query_points"], [46, 3, 1, "", "sample"], [46, 3, 1, "", "sample_ensemble"], [46, 3, 1, "", "trajectory_sampler"], [46, 3, 1, "", "update"]], "trieste.models.keras.DeepEnsembleModel": [[46, 4, 1, "", "dtype"], [46, 3, 1, "", "ensemble_distributions"], [46, 4, 1, "", "ensemble_size"], [46, 4, 1, "", "num_outputs"]], "trieste.models.keras.DeepEnsembleTrajectorySampler": [[46, 3, 1, "", "get_trajectory"], [46, 3, 1, "", "resample_trajectory"], [46, 3, 1, "", "update_trajectory"]], "trieste.models.keras.GaussianNetwork": [[46, 3, 1, "", "connect_layers"]], "trieste.models.keras.KerasEnsemble": [[46, 3, 1, "", "_build_ensemble"], [46, 4, 1, "", "ensemble_size"], [46, 4, 1, "", "model"]], "trieste.models.keras.KerasEnsembleNetwork": [[46, 3, 1, "", "connect_layers"]], "trieste.models.keras.KerasPredictor": [[46, 3, 1, "", "log"], [46, 4, 1, "", "model"], [46, 4, 1, "", "optimizer"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "sample"]], "trieste.models.keras.architectures": [[44, 2, 1, "", "GaussianNetwork"], [44, 2, 1, "", "KerasEnsemble"], [44, 2, 1, "", "KerasEnsembleNetwork"], [44, 2, 1, "", "MultivariateNormalTriL"]], "trieste.models.keras.architectures.GaussianNetwork": [[44, 3, 1, "", "connect_layers"]], "trieste.models.keras.architectures.KerasEnsemble": [[44, 3, 1, "", "_build_ensemble"], [44, 4, 1, "", "ensemble_size"], [44, 4, 1, "", "model"]], "trieste.models.keras.architectures.KerasEnsembleNetwork": [[44, 3, 1, "", "connect_layers"]], "trieste.models.keras.builders": [[45, 5, 1, "", "build_keras_ensemble"]], "trieste.models.keras.deep_ensemble_trajectory": [[46, 3, 1, "", "__call__"], [46, 3, 1, "", "get_state"], [46, 3, 1, "", "resample"]], "trieste.models.keras.interface": [[47, 2, 1, "", "DeepEnsembleModel"], [47, 2, 1, "", "KerasPredictor"]], "trieste.models.keras.interface.DeepEnsembleModel": [[47, 4, 1, "", "dtype"], [47, 3, 1, "", "ensemble_distributions"], [47, 4, 1, "", "ensemble_size"], [47, 4, 1, "", "num_outputs"]], "trieste.models.keras.interface.KerasPredictor": [[47, 3, 1, "", "log"], [47, 4, 1, "", "model"], [47, 4, 1, "", "optimizer"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "sample"]], "trieste.models.keras.models": [[48, 2, 1, "", "DeepEnsemble"]], "trieste.models.keras.models.DeepEnsemble": [[48, 4, 1, "", "dtype"], [48, 3, 1, "", "ensemble_distributions"], [48, 4, 1, "", "ensemble_size"], [48, 3, 1, "", "log"], [48, 4, 1, "", "model"], [48, 4, 1, "", "num_outputs"], [48, 3, 1, "", "optimize"], [48, 3, 1, "", "predict"], [48, 3, 1, "", "predict_ensemble"], [48, 3, 1, "", "prepare_dataset"], [48, 3, 1, "", "prepare_query_points"], [48, 3, 1, "", "sample"], [48, 3, 1, "", "sample_ensemble"], [48, 3, 1, "", "trajectory_sampler"], [48, 3, 1, "", "update"]], "trieste.models.keras.sampler": [[49, 2, 1, "", "DeepEnsembleTrajectorySampler"], [49, 2, 1, "", "deep_ensemble_trajectory"]], "trieste.models.keras.sampler.DeepEnsembleTrajectorySampler": [[49, 3, 1, "", "get_trajectory"], [49, 3, 1, "", "resample_trajectory"], [49, 3, 1, "", "update_trajectory"]], "trieste.models.keras.sampler.deep_ensemble_trajectory": [[49, 3, 1, "", "__call__"], [49, 3, 1, "", "get_state"], [49, 3, 1, "", "resample"]], "trieste.models.keras.utils": [[50, 5, 1, "", "get_tensor_spec_from_data"], [50, 5, 1, "", "negative_log_likelihood"], [50, 5, 1, "", "sample_model_index"], [50, 5, 1, "", "sample_with_replacement"]], "trieste.models.optimizer": [[51, 2, 1, "", "BatchOptimizer"], [51, 1, 1, "", "DatasetTransformer"], [51, 2, 1, "", "KerasOptimizer"], [51, 1, 1, "", "LossClosure"], [51, 1, 1, "", "OptimizeResult"], [51, 2, 1, "", "Optimizer"], [51, 1, 1, "", "TrainingData"], [51, 5, 1, "", "create_loss_function"]], "trieste.models.optimizer.BatchOptimizer": [[51, 7, 1, "", "batch_size"], [51, 3, 1, "", "create_loss"], [51, 7, 1, "", "dataset_builder"], [51, 7, 1, "", "max_iter"], [51, 3, 1, "", "optimize"]], "trieste.models.optimizer.KerasOptimizer": [[51, 7, 1, "", "fit_args"], [51, 7, 1, "", "loss"], [51, 7, 1, "", "metrics"], [51, 7, 1, "", "optimizer"]], "trieste.models.optimizer.Optimizer": [[51, 7, 1, "", "compile"], [51, 3, 1, "", "create_loss"], [51, 7, 1, "", "minimize_args"], [51, 3, 1, "", "optimize"], [51, 7, 1, "", "optimizer"]], "trieste.models.utils": [[52, 5, 1, "", "get_last_optimization_result"], [52, 5, 1, "", "get_module_with_variables"], [52, 5, 1, "", "optimize_model_and_save_result"], [52, 5, 1, "", "write_summary_data_based_metrics"], [52, 5, 1, "", "write_summary_kernel_parameters"], [52, 5, 1, "", "write_summary_likelihood_parameters"]], "trieste.objectives": [[53, 1, 1, "", "Ackley5"], [53, 1, 1, "", "Branin"], [53, 1, 1, "", "ConstrainedScaledBranin"], [53, 5, 1, "", "DTLZ1"], [53, 5, 1, "", "DTLZ2"], [53, 1, 1, "", "GramacyLee"], [53, 1, 1, "", "Hartmann3"], [53, 1, 1, "", "Hartmann6"], [53, 1, 1, "", "Levy8"], [53, 1, 1, "", "LogarithmicGoldsteinPrice"], [53, 1, 1, "", "Michalewicz10"], [53, 1, 1, "", "Michalewicz2"], [53, 1, 1, "", "Michalewicz5"], [53, 2, 1, "", "MultiObjectiveTestProblem"], [53, 2, 1, "", "ObjectiveTestProblem"], [53, 1, 1, "", "Rosenbrock4"], [53, 1, 1, "", "ScaledBranin"], [53, 1, 1, "", "Shekel4"], [53, 1, 1, "", "SimpleQuadratic"], [53, 2, 1, "", "SingleObjectiveMultifidelityTestProblem"], [53, 2, 1, "", "SingleObjectiveTestProblem"], [53, 1, 1, "", "Trid10"], [53, 5, 1, "", "VLMOP2"], [53, 5, 1, "", "mk_multi_observer"], [53, 5, 1, "", "mk_observer"], [54, 0, 0, "-", "multi_objectives"], [55, 0, 0, "-", "multifidelity_objectives"], [56, 0, 0, "-", "single_objectives"], [57, 0, 0, "-", "utils"]], "trieste.objectives.MultiObjectiveTestProblem": [[53, 7, 1, "", "gen_pareto_optimal_points"]], "trieste.objectives.ObjectiveTestProblem": [[53, 4, 1, "", "bounds"], [53, 4, 1, "", "dim"], [53, 7, 1, "", "name"], [53, 7, 1, "", "objective"], [53, 7, 1, "", "search_space"]], "trieste.objectives.SingleObjectiveMultifidelityTestProblem": [[53, 7, 1, "", "fidelity_search_space"], [53, 7, 1, "", "num_fidelities"]], "trieste.objectives.SingleObjectiveTestProblem": [[53, 7, 1, "", "minimizers"], [53, 7, 1, "", "minimum"]], "trieste.objectives.multi_objectives": [[54, 5, 1, "", "DTLZ1"], [54, 5, 1, "", "DTLZ2"], [54, 2, 1, "", "GenParetoOptimalPoints"], [54, 2, 1, "", "MultiObjectiveTestProblem"], [54, 5, 1, "", "VLMOP2"], [54, 5, 1, "", "dtlz1"], [54, 5, 1, "", "dtlz2"], [54, 5, 1, "", "dtlz_mkd"], [54, 5, 1, "", "vlmop2"]], "trieste.objectives.multi_objectives.GenParetoOptimalPoints": [[54, 3, 1, "", "__call__"]], "trieste.objectives.multi_objectives.MultiObjectiveTestProblem": [[54, 7, 1, "", "gen_pareto_optimal_points"]], "trieste.objectives.multifidelity_objectives": [[55, 2, 1, "", "SingleObjectiveMultifidelityTestProblem"]], "trieste.objectives.multifidelity_objectives.SingleObjectiveMultifidelityTestProblem": [[55, 7, 1, "", "fidelity_search_space"], [55, 7, 1, "", "num_fidelities"]], "trieste.objectives.single_objectives": [[56, 1, 1, "", "Ackley5"], [56, 1, 1, "", "Branin"], [56, 1, 1, "", "ConstrainedScaledBranin"], [56, 1, 1, "", "GramacyLee"], [56, 1, 1, "", "Hartmann3"], [56, 1, 1, "", "Hartmann6"], [56, 1, 1, "", "Levy8"], [56, 1, 1, "", "LogarithmicGoldsteinPrice"], [56, 1, 1, "", "Michalewicz10"], [56, 1, 1, "", "Michalewicz2"], [56, 1, 1, "", "Michalewicz5"], [56, 1, 1, "", "ObjectiveTestFunction"], [56, 2, 1, "", "ObjectiveTestProblem"], [56, 1, 1, "", "Rosenbrock4"], [56, 1, 1, "", "ScaledBranin"], [56, 1, 1, "", "Shekel4"], [56, 1, 1, "", "SimpleQuadratic"], [56, 2, 1, "", "SingleObjectiveTestProblem"], [56, 1, 1, "", "Trid10"], [56, 5, 1, "", "ackley_5"], [56, 5, 1, "", "branin"], [56, 5, 1, "", "check_objective_shapes"], [56, 5, 1, "", "gramacy_lee"], [56, 5, 1, "", "hartmann_3"], [56, 5, 1, "", "hartmann_6"], [56, 5, 1, "", "levy"], [56, 5, 1, "", "levy_8"], [56, 5, 1, "", "logarithmic_goldstein_price"], [56, 5, 1, "", "michalewicz"], [56, 5, 1, "", "michalewicz_10"], [56, 5, 1, "", "michalewicz_2"], [56, 5, 1, "", "michalewicz_5"], [56, 5, 1, "", "rosenbrock"], [56, 5, 1, "", "rosenbrock_4"], [56, 5, 1, "", "scaled_branin"], [56, 5, 1, "", "shekel_4"], [56, 5, 1, "", "simple_quadratic"], [56, 5, 1, "", "trid"], [56, 5, 1, "", "trid_10"]], "trieste.objectives.single_objectives.ObjectiveTestProblem": [[56, 4, 1, "", "bounds"], [56, 4, 1, "", "dim"], [56, 7, 1, "", "name"], [56, 7, 1, "", "objective"], [56, 7, 1, "", "search_space"]], "trieste.objectives.single_objectives.SingleObjectiveTestProblem": [[56, 7, 1, "", "minimizers"], [56, 7, 1, "", "minimum"]], "trieste.objectives.utils": [[57, 5, 1, "", "mk_batch_observer"], [57, 5, 1, "", "mk_multi_observer"], [57, 5, 1, "", "mk_observer"]], "trieste.observer": [[58, 1, 1, "", "MultiObserver"], [58, 1, 1, "", "OBJECTIVE"], [58, 1, 1, "", "Observer"], [58, 1, 1, "", "SingleObserver"], [58, 5, 1, "", "filter_finite"], [58, 5, 1, "", "map_is_finite"]], "trieste.space": [[59, 2, 1, "", "Box"], [59, 2, 1, "", "CategoricalSearchSpace"], [59, 2, 1, "", "CollectionSearchSpace"], [59, 1, 1, "", "Constraint"], [59, 1, 1, "", "DEFAULT_DTYPE"], [59, 2, 1, "", "DiscreteSearchSpace"], [59, 1, 1, "", "EncoderFunction"], [59, 2, 1, "", "GeneralDiscreteSearchSpace"], [59, 2, 1, "", "HasOneHotEncoder"], [59, 2, 1, "", "LinearConstraint"], [59, 2, 1, "", "NonlinearConstraint"], [59, 6, 1, "", "SampleTimeoutError"], [59, 2, 1, "", "SearchSpace"], [59, 1, 1, "", "SearchSpaceType"], [59, 2, 1, "", "TaggedMultiSearchSpace"], [59, 2, 1, "", "TaggedProductSearchSpace"], [59, 5, 1, "", "one_hot_encoder"]], "trieste.space.Box": [[59, 3, 1, "", "__eq__"], [59, 3, 1, "", "_contains"], [59, 3, 1, "", "_sample_feasible_loop"], [59, 4, 1, "", "constraints"], [59, 3, 1, "", "constraints_residuals"], [59, 4, 1, "", "dimension"], [59, 4, 1, "", "has_bounds"], [59, 4, 1, "", "has_constraints"], [59, 3, 1, "", "is_feasible"], [59, 4, 1, "", "lower"], [59, 3, 1, "", "product"], [59, 3, 1, "", "sample"], [59, 3, 1, "", "sample_feasible"], [59, 3, 1, "", "sample_halton"], [59, 3, 1, "", "sample_halton_feasible"], [59, 3, 1, "", "sample_sobol"], [59, 3, 1, "", "sample_sobol_feasible"], [59, 4, 1, "", "upper"]], "trieste.space.CategoricalSearchSpace": [[59, 3, 1, "", "__eq__"], [59, 4, 1, "", "has_bounds"], [59, 4, 1, "", "lower"], [59, 4, 1, "", "one_hot_encoder"], [59, 3, 1, "", "product"], [59, 4, 1, "", "tags"], [59, 3, 1, "", "to_tags"], [59, 4, 1, "", "upper"]], "trieste.space.CollectionSearchSpace": [[59, 3, 1, "", "__eq__"], [59, 3, 1, "", "__repr__"], [59, 3, 1, "", "get_subspace"], [59, 4, 1, "", "has_bounds"], [59, 4, 1, "", "subspace_dimension"], [59, 4, 1, "", "subspace_lower"], [59, 3, 1, "", "subspace_sample"], [59, 4, 1, "", "subspace_tags"], [59, 4, 1, "", "subspace_upper"]], "trieste.space.DiscreteSearchSpace": [[59, 3, 1, "", "__eq__"], [59, 4, 1, "", "has_bounds"], [59, 4, 1, "", "lower"], [59, 3, 1, "", "product"], [59, 4, 1, "", "upper"]], "trieste.space.GeneralDiscreteSearchSpace": [[59, 3, 1, "", "_contains"], [59, 4, 1, "", "dimension"], [59, 4, 1, "", "points"], [59, 3, 1, "", "sample"]], "trieste.space.HasOneHotEncoder": [[59, 4, 1, "", "one_hot_encoder"]], "trieste.space.LinearConstraint": [[59, 3, 1, "", "__eq__"], [59, 3, 1, "", "residual"]], "trieste.space.NonlinearConstraint": [[59, 3, 1, "", "__eq__"], [59, 3, 1, "", "residual"]], "trieste.space.SearchSpace": [[59, 3, 1, "", "__contains__"], [59, 3, 1, "", "__eq__"], [59, 3, 1, "", "__mul__"], [59, 3, 1, "", "__pow__"], [59, 3, 1, "", "_contains"], [59, 4, 1, "", "constraints"], [59, 3, 1, "", "constraints_residuals"], [59, 3, 1, "", "contains"], [59, 4, 1, "", "dimension"], [59, 3, 1, "", "discretize"], [59, 4, 1, "", "has_bounds"], [59, 4, 1, "", "has_constraints"], [59, 3, 1, "", "is_feasible"], [59, 4, 1, "", "lower"], [59, 3, 1, "", "product"], [59, 3, 1, "", "sample"], [59, 4, 1, "", "upper"]], "trieste.space.TaggedMultiSearchSpace": [[59, 3, 1, "", "_contains"], [59, 4, 1, "", "dimension"], [59, 3, 1, "", "discretize"], [59, 4, 1, "", "lower"], [59, 3, 1, "", "product"], [59, 3, 1, "", "sample"], [59, 4, 1, "", "upper"]], "trieste.space.TaggedProductSearchSpace": [[59, 3, 1, "", "_contains"], [59, 4, 1, "", "dimension"], [59, 3, 1, "", "fix_subspace"], [59, 3, 1, "", "get_subspace_component"], [59, 4, 1, "", "lower"], [59, 4, 1, "", "one_hot_encoder"], [59, 3, 1, "", "product"], [59, 3, 1, "", "sample"], [59, 4, 1, "", "upper"]], "trieste.types": [[60, 1, 1, "", "S"], [60, 1, 1, "", "State"], [60, 1, 1, "", "T"], [60, 1, 1, "", "Tag"], [60, 1, 1, "", "TensorType"]], "trieste.utils": [[61, 2, 1, "", "DEFAULTS"], [61, 2, 1, "", "Err"], [61, 1, 1, "", "K"], [61, 2, 1, "", "Ok"], [61, 2, 1, "", "Result"], [61, 1, 1, "", "ResultType"], [61, 2, 1, "", "Timer"], [61, 1, 1, "", "U"], [61, 1, 1, "", "V"], [61, 5, 1, "", "flatten_leading_dims"], [61, 5, 1, "", "jit"], [61, 5, 1, "", "map_values"], [62, 0, 0, "-", "misc"], [61, 5, 1, "", "shapes_equal"], [61, 5, 1, "", "to_numpy"]], "trieste.utils.DEFAULTS": [[61, 7, 1, "", "JITTER"]], "trieste.utils.Err": [[61, 4, 1, "", "is_ok"], [61, 3, 1, "", "unwrap"]], "trieste.utils.Ok": [[61, 4, 1, "", "is_ok"], [61, 3, 1, "", "unwrap"]], "trieste.utils.Result": [[61, 4, 1, "", "is_err"], [61, 4, 1, "", "is_ok"], [61, 3, 1, "", "unwrap"]], "trieste.utils.misc": [[62, 1, 1, "", "C"], [62, 2, 1, "", "DEFAULTS"], [62, 2, 1, "", "Err"], [62, 1, 1, "", "K"], [62, 2, 1, "", "LocalizedTag"], [62, 2, 1, "", "Ok"], [62, 2, 1, "", "Result"], [62, 1, 1, "", "ResultType"], [62, 1, 1, "", "T"], [62, 2, 1, "", "Timer"], [62, 1, 1, "", "U"], [62, 1, 1, "", "V"], [62, 5, 1, "", "_flatten"], [62, 5, 1, "", "_flatten_module"], [62, 5, 1, "", "flatten_leading_dims"], [62, 5, 1, "", "get_value_for_tag"], [62, 5, 1, "", "get_variables"], [62, 5, 1, "", "ignoring_local_tags"], [62, 5, 1, "", "jit"], [62, 5, 1, "", "map_values"], [62, 5, 1, "", "shapes_equal"], [62, 5, 1, "", "to_numpy"]], "trieste.utils.misc.DEFAULTS": [[62, 7, 1, "", "JITTER"]], "trieste.utils.misc.Err": [[62, 4, 1, "", "is_ok"], [62, 3, 1, "", "unwrap"]], "trieste.utils.misc.LocalizedTag": [[62, 3, 1, "", "from_tag"], [62, 7, 1, "", "global_tag"], [62, 4, 1, "", "is_local"], [62, 7, 1, "", "local_index"]], "trieste.utils.misc.Ok": [[62, 4, 1, "", "is_ok"], [62, 3, 1, "", "unwrap"]], "trieste.utils.misc.Result": [[62, 4, 1, "", "is_err"], [62, 4, 1, "", "is_ok"], [62, 3, 1, "", "unwrap"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "attribute", "Python attribute"]}, "titleterms": {"triest": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 71, 77, 83], "acquisit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 67, 68, 70, 71, 76, 77, 78, 79, 81, 87, 88, 89, 90], "combin": 0, "modul": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "function": [1, 2, 3, 4, 5, 6, 7, 8, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "active_learn": 1, "continuous_thompson_sampl": 2, "entropi": 3, "greedy_batch": 5, "submodul": [6, 9, 12, 27, 30, 38, 42, 46, 53], "packag": [6, 9, 12, 30, 38, 42, 46, 53, 61], "multi_object": [7, 11, 12, 13, 14, 54], "util": [8, 18, 36, 50, 52, 57, 61, 62], "subpackag": [9, 22, 27, 42], "interfac": [10, 32, 39, 43, 47, 68, 72], "domin": 11, "pareto": 13, "partit": 14, "optim": [15, 34, 51, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91], "rule": [16, 84, 87, 88, 89, 90], "sampler": [17, 35, 41, 49], "ask_tell_optim": 19, "bayesian_optim": 20, "data": [21, 72, 77], "experiment": [22, 23, 24, 25, 26], "plot": [23, 24, 25, 26, 82], "inequality_constraint": 24, "plotting_plotli": 26, "log": [28, 90], "model": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90], "gpflow": [29, 30, 31, 32, 33, 34, 35, 36, 77], "builder": [29, 37, 45, 71], "inducing_point_selector": 31, "gpflux": [37, 38, 39, 40, 41], "kera": [44, 45, 46, 47, 48, 49, 50], "architectur": 44, "object": [53, 54, 55, 56, 57, 72, 73, 74, 75, 78, 80, 81], "multifidelity_object": 55, "single_object": 56, "observ": [58, 71, 74, 75, 80], "space": [59, 74, 75, 80], "type": [60, 71], "misc": 62, "version": 63, "bibliographi": 64, "document": 65, "instal": 65, "get": 65, "help": [65, 72], "activ": [66, 67, 78], "learn": [66, 67, 78], "describ": [66, 70, 72, 74, 75, 76, 81, 82, 86], "problem": [66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91], "surrog": [66, 70, 76], "us": [66, 68, 84, 90], "predict": 66, "varianc": [66, 78], "batch": [66, 70, 79, 81, 84, 89], "licens": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90], "binari": 67, "classif": 67, "The": [67, 77, 79, 80], "task": 67, "process": [67, 74, 79], "run": [67, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91], "loop": [67, 70, 72, 73, 74, 75, 76, 79, 80, 81, 85, 87, 88, 89], "visualis": [67, 87, 88], "result": [67, 72, 73, 74, 75, 80, 82, 83, 85, 87, 88, 89], "ask": [68, 72, 90, 91], "tell": [68, 72, 90], "time": 68, "simpl": 68, "case": 68, "select": 68, "onli": 68, "part": 68, "extern": 68, "experi": 68, "store": 68, "state": 68, "asynchron": 69, "bayesian": [69, 70, 75, 84, 86, 89, 90], "multiprocess": 69, "setup": 69, "synchron": 69, "parallel": 69, "comparison": [69, 82], "an": 71, "overview": 71, "kei": 71, "dataset": [71, 82], "probabilisticmodel": 71, "searchspac": 71, "acquisitionrul": 71, "acquisitionfunct": 71, "acquisitionfunctionbuild": 71, "acquisitionoptim": 71, "bayesianoptim": 71, "asktelloptim": 71, "extend": 71, "new": 71, "probabilist": [71, 78], "transform": 72, "collect": 72, "initi": [72, 73, 82], "point": 72, "explor": [72, 73, 74, 75, 80], "deep": [73, 74], "ensembl": 73, "what": [73, 90], "ar": [73, 82], "how": 73, "good": 73, "i": 73, "uncertainti": 73, "represent": 73, "non": [73, 82], "stationari": 73, "toi": [73, 78], "design": 73, "gaussian": 74, "sampl": [74, 75, 80, 87, 88], "over": [74, 75, 80], "search": [74, 75, 80], "introduct": [75, 83], "more": [75, 79, 82], "step": 75, "save": [75, 85], "explicit": 76, "constraint": [76, 79, 81], "constrain": [76, 79], "method": 76, "penalti": 76, "failur": [77, 85], "region": [77, 78, 80, 89], "defin": [77, 79, 81, 87, 88, 89], "set": [77, 85, 90], "build": 77, "creat": [77, 82, 87, 88, 89], "custom": 77, "feasibl": 78, "A": [78, 82], "expect": 78, "integr": 78, "reduct": 78, "inequ": 79, "two": [79, 81], "sequenti": 79, "strategi": 79, "than": 79, "one": 79, "mix": 80, "trust": [80, 89], "multi": 81, "multipl": 81, "multifidel": 82, "fit": 82, "1": 82, "naiv": 82, "high": [82, 86], "fidel": 82, "complex": 82, "linear": 82, "openai": 83, "gym": 83, "crash": 83, "timeout": 83, "fly": 83, "out": [83, 85], "bound": 83, "slam": 83, "surfac": 83, "solv": 83, "analyz": 83, "sharp": 84, "ratio": 84, "acqusit": 84, "optimis": 84, "recov": 85, "from": 85, "error": 85, "up": [85, 90], "handl": 85, "success": 85, "disk": 85, "memori": 85, "dimension": 86, "standard": 86, "scalabl": 87, "thompson": [87, 88], "trego": 89, "visual": [89, 90], "turbo": 89, "tensorboard": 90, "track": 90, "decid": 90, "addit": 90, "paramet": 90, "metric": 90, "tutori": 91, "frequent": 91, "question": 91, "interact": 91}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"trieste.acquisition.combination": [[0, "module-trieste.acquisition.combination"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [28, "module-contents"], [29, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [62, "module-contents"]], "trieste.acquisition.function.active_learning": [[1, "module-trieste.acquisition.function.active_learning"]], "trieste.acquisition.function.continuous_thompson_sampling": [[2, "module-trieste.acquisition.function.continuous_thompson_sampling"]], "trieste.acquisition.function.entropy": [[3, "module-trieste.acquisition.function.entropy"]], "trieste.acquisition.function.function": [[4, "module-trieste.acquisition.function.function"]], "trieste.acquisition.function.greedy_batch": [[5, "module-trieste.acquisition.function.greedy_batch"]], "trieste.acquisition.function": [[6, "module-trieste.acquisition.function"]], "Submodules": [[6, "submodules"], [9, "submodules"], [12, "submodules"], [27, "submodules"], [30, "submodules"], [38, "submodules"], [42, "submodules"], [46, "submodules"], [53, "submodules"]], "Package Contents": [[6, "package-contents"], [9, "package-contents"], [12, "package-contents"], [30, "package-contents"], [38, "package-contents"], [42, "package-contents"], [46, "package-contents"], [53, "package-contents"], [61, "package-contents"]], "trieste.acquisition.function.multi_objective": [[7, "module-trieste.acquisition.function.multi_objective"]], "trieste.acquisition.function.utils": [[8, "module-trieste.acquisition.function.utils"]], "trieste.acquisition": [[9, "module-trieste.acquisition"]], "Subpackages": [[9, "subpackages"], [22, "subpackages"], [27, "subpackages"], [42, "subpackages"]], "trieste.acquisition.interface": [[10, "module-trieste.acquisition.interface"]], "trieste.acquisition.multi_objective.dominance": [[11, "module-trieste.acquisition.multi_objective.dominance"]], "trieste.acquisition.multi_objective": [[12, "module-trieste.acquisition.multi_objective"]], "trieste.acquisition.multi_objective.pareto": [[13, "module-trieste.acquisition.multi_objective.pareto"]], "trieste.acquisition.multi_objective.partition": [[14, "module-trieste.acquisition.multi_objective.partition"]], "trieste.acquisition.optimizer": [[15, "module-trieste.acquisition.optimizer"]], "trieste.acquisition.rule": [[16, "module-trieste.acquisition.rule"]], "trieste.acquisition.sampler": [[17, "module-trieste.acquisition.sampler"]], "trieste.acquisition.utils": [[18, "module-trieste.acquisition.utils"]], "trieste.ask_tell_optimization": [[19, "module-trieste.ask_tell_optimization"]], "trieste.bayesian_optimizer": [[20, "module-trieste.bayesian_optimizer"]], "trieste.data": [[21, "module-trieste.data"]], "trieste.experimental": [[22, "module-trieste.experimental"]], "trieste.experimental.plotting": [[23, "module-trieste.experimental.plotting"]], "trieste.experimental.plotting.inequality_constraints": [[24, "module-trieste.experimental.plotting.inequality_constraints"]], "trieste.experimental.plotting.plotting": [[25, "module-trieste.experimental.plotting.plotting"]], "trieste.experimental.plotting.plotting_plotly": [[26, "module-trieste.experimental.plotting.plotting_plotly"]], "trieste": [[27, "module-trieste"]], "trieste.logging": [[28, "module-trieste.logging"]], "trieste.models.gpflow.builders": [[29, "module-trieste.models.gpflow.builders"]], "trieste.models.gpflow": [[30, "module-trieste.models.gpflow"]], "trieste.models.gpflow.inducing_point_selectors": [[31, "module-trieste.models.gpflow.inducing_point_selectors"]], "trieste.models.gpflow.interface": [[32, "module-trieste.models.gpflow.interface"]], "trieste.models.gpflow.models": [[33, "module-trieste.models.gpflow.models"]], "trieste.models.gpflow.optimizer": [[34, "module-trieste.models.gpflow.optimizer"]], "trieste.models.gpflow.sampler": [[35, "module-trieste.models.gpflow.sampler"]], "trieste.models.gpflow.utils": [[36, "module-trieste.models.gpflow.utils"]], "trieste.models.gpflux.builders": [[37, "module-trieste.models.gpflux.builders"]], "trieste.models.gpflux": [[38, "module-trieste.models.gpflux"]], "trieste.models.gpflux.interface": [[39, "module-trieste.models.gpflux.interface"]], "trieste.models.gpflux.models": [[40, "module-trieste.models.gpflux.models"]], "trieste.models.gpflux.sampler": [[41, "module-trieste.models.gpflux.sampler"]], "trieste.models": [[42, "module-trieste.models"]], "trieste.models.interfaces": [[43, "module-trieste.models.interfaces"]], "trieste.models.keras.architectures": [[44, "module-trieste.models.keras.architectures"]], "trieste.models.keras.builders": [[45, "module-trieste.models.keras.builders"]], "trieste.models.keras": [[46, "module-trieste.models.keras"]], "trieste.models.keras.interface": [[47, "module-trieste.models.keras.interface"]], "trieste.models.keras.models": [[48, "module-trieste.models.keras.models"]], "trieste.models.keras.sampler": [[49, "module-trieste.models.keras.sampler"]], "trieste.models.keras.utils": [[50, "module-trieste.models.keras.utils"]], "trieste.models.optimizer": [[51, "module-trieste.models.optimizer"]], "trieste.models.utils": [[52, "module-trieste.models.utils"]], "trieste.objectives": [[53, "module-trieste.objectives"]], "trieste.objectives.multi_objectives": [[54, "module-trieste.objectives.multi_objectives"]], "trieste.objectives.multifidelity_objectives": [[55, "module-trieste.objectives.multifidelity_objectives"]], "trieste.objectives.single_objectives": [[56, "module-trieste.objectives.single_objectives"]], "trieste.objectives.utils": [[57, "module-trieste.objectives.utils"]], "trieste.observer": [[58, "module-trieste.observer"]], "trieste.space": [[59, "module-trieste.space"]], "trieste.types": [[60, "module-trieste.types"]], "trieste.utils": [[61, "module-trieste.utils"]], "trieste.utils.misc": [[62, "module-trieste.utils.misc"]], "trieste.version": [[63, "module-trieste.version"]], "Bibliography": [[64, "bibliography"]], "Trieste documentation": [[65, "trieste-documentation"]], "Installation": [[65, "installation"]], "Getting help": [[65, "getting-help"]], "Active learning": [[66, "Active-learning"]], "Describe the problem": [[66, "Describe-the-problem"], [70, "Describe-the-problem"], [72, "Describe-the-problem"], [74, "Describe-the-problem"], [75, "Describe-the-problem"], [76, "Describe-the-problem"], [81, "Describe-the-problem"], [82, "Describe-the-problem"], [86, "Describe-the-problem"]], "Surrogate model": [[66, "Surrogate-model"], [70, "Surrogate-model"], [76, "Surrogate-model"]], "Active learning using predictive variance": [[66, "Active-learning-using-predictive-variance"]], "Batch active learning using predictive variance": [[66, "Batch-active-learning-using-predictive-variance"]], "LICENSE": [[66, "LICENSE"], [67, "LICENSE"], [70, "LICENSE"], [71, "LICENSE"], [72, "LICENSE"], [73, "LICENSE"], [74, "LICENSE"], [75, "LICENSE"], [76, "LICENSE"], [77, "LICENSE"], [78, "LICENSE"], [79, "LICENSE"], [80, "LICENSE"], [81, "LICENSE"], [85, "LICENSE"], [86, "LICENSE"], [87, "LICENSE"], [88, "LICENSE"], [89, "LICENSE"], [90, "LICENSE"]], "Active learning for binary classification": [[67, "Active-learning-for-binary-classification"]], "The problem": [[67, "The-problem"], [77, "The-problem"], [79, "The-problem"], [80, "The-problem"]], "Modelling the binary classification task": [[67, "Modelling-the-binary-classification-task"]], "The acquisition process": [[67, "The-acquisition-process"]], "Run the active learning loop": [[67, "Run-the-active-learning-loop"]], "Visualising the result": [[67, "Visualising-the-result"], [87, "Visualising-the-result"], [88, "Visualising-the-result"]], "Ask-Tell optimization interface": [[68, "Ask-Tell-optimization-interface"]], "Timing acquisition function: simple use case for Ask-Tell": [[68, "Timing-acquisition-function:-simple-use-case-for-Ask-Tell"]], "Model selection: using only Ask part": [[68, "Model-selection:-using-only-Ask-part"]], "External experiment: storing optimizer state": [[68, "External-experiment:-storing-optimizer-state"]], "Asynchronous Bayesian Optimization": [[69, "Asynchronous-Bayesian-Optimization"]], "Multiprocessing setup": [[69, "Multiprocessing-setup"]], "Asynchronous optimization": [[69, "Asynchronous-optimization"]], "Synchronous parallel optimization": [[69, "Synchronous-parallel-optimization"]], "Comparison": [[69, "Comparison"]], "Batch Bayesian optimization": [[70, "Batch-Bayesian-optimization"]], "Batch acquisition functions.": [[70, "Batch-acquisition-functions."]], "Run the batch optimization loop": [[70, "Run-the-batch-optimization-loop"]], "An overview of Trieste types": [[71, "An-overview-of-Trieste-types"]], "Key types": [[71, "Key-types"]], "Observer": [[71, "Observer"]], "Dataset": [[71, "Dataset"]], "ProbabilisticModel": [[71, "ProbabilisticModel"]], "SearchSpace": [[71, "SearchSpace"]], "AcquisitionRule": [[71, "AcquisitionRule"]], "AcquisitionFunction and AcquisitionFunctionBuilder": [[71, "AcquisitionFunction-and-AcquisitionFunctionBuilder"]], "AcquisitionOptimizer": [[71, "AcquisitionOptimizer"]], "BayesianOptimizer and AskTellOptimizer": [[71, "BayesianOptimizer-and-AskTellOptimizer"]], "Extending the key types": [[71, "Extending-the-key-types"]], "New observers": [[71, "New-observers"]], "New probabilistic model types": [[71, "New-probabilistic-model-types"]], "New acquisition function builders": [[71, "New-acquisition-function-builders"]], "Data transformation": [[72, "Data-transformation"]], "Collect initial points": [[72, "Collect-initial-points"]], "Model the objective function": [[72, "Model-the-objective-function"], [74, "Model-the-objective-function"], [75, "Model-the-objective-function"], [80, "Model-the-objective-function"]], "Run the optimization loop": [[72, "Run-the-optimization-loop"], [73, "Run-the-optimization-loop"], [74, "Run-the-optimization-loop"], [75, "Run-the-optimization-loop"], [79, "Run-the-optimization-loop"], [80, "Run-the-optimization-loop"], [81, "Run-the-optimization-loop"], [85, "Run-the-optimization-loop"], [87, "Run-the-optimization-loop"], [88, "Run-the-optimization-loop"], [89, "Run-the-optimization-loop"]], "Explore the results": [[72, "Explore-the-results"], [73, "Explore-the-results"], [74, "Explore-the-results"], [75, "Explore-the-results"], [80, "Explore-the-results"]], "Data transformation with the help of Ask-Tell interface": [[72, "Data-transformation-with-the-help-of-Ask-Tell-interface"]], "Deep ensembles": [[73, "Deep-ensembles"]], "What are deep ensembles?": [[73, "What-are-deep-ensembles?"]], "How good is uncertainty representation of deep ensembles?": [[73, "How-good-is-uncertainty-representation-of-deep-ensembles?"]], "Non-stationary toy problem": [[73, "Non-stationary-toy-problem"]], "Initial design": [[73, "Initial-design"]], "Modelling the objective function": [[73, "Modelling-the-objective-function"]], "Deep Gaussian processes": [[74, "Deep-Gaussian-processes"]], "Sample the observer over the search space": [[74, "Sample-the-observer-over-the-search-space"], [75, "Sample-the-observer-over-the-search-space"], [80, "Sample-the-observer-over-the-search-space"]], "Introduction to Bayesian optimization": [[75, "Introduction-to-Bayesian-optimization"]], "Run the optimizer for more steps": [[75, "Run-the-optimizer-for-more-steps"]], "Save the results": [[75, "Save-the-results"]], "Explicit constraints": [[76, "Explicit-constraints"]], "Constrained optimization method": [[76, "Constrained-optimization-method"]], "Acquisition function (constrained optimization)": [[76, "Acquisition-function-(constrained-optimization)"]], "Run the optimization loop (constrained optimization)": [[76, "Run-the-optimization-loop-(constrained-optimization)"]], "Penalty method": [[76, "Penalty-method"]], "Acquisition function (penalty method)": [[76, "Acquisition-function-(penalty-method)"]], "Run the optimization loop (penalty method)": [[76, "Run-the-optimization-loop-(penalty-method)"]], "Failure regions": [[77, "Failure-regions"]], "Define the data sets": [[77, "Define-the-data-sets"]], "Build GPflow models": [[77, "Build-GPflow-models"]], "Build Trieste models": [[77, "Build-Trieste-models"]], "Create a custom acquisition function": [[77, "Create-a-custom-acquisition-function"]], "Run the optimizer": [[77, "Run-the-optimizer"]], "Active learning of feasibility regions": [[78, "Active-learning-of-feasibility-regions"]], "A toy problem": [[78, "A-toy-problem"]], "Probabilistic model of the objective function": [[78, "Probabilistic-model-of-the-objective-function"]], "Active learning with Expected feasibility acquisition function": [[78, "Active-learning-with-Expected-feasibility-acquisition-function"]], "Active learning with Integrated Variance Reduction acquisition function": [[78, "Active-learning-with-Integrated-Variance-Reduction-acquisition-function"]], "Inequality constraints": [[79, "Inequality-constraints"]], "Modelling the two functions": [[79, "Modelling-the-two-functions"], [81, "Modelling-the-two-functions"]], "Define the acquisition process": [[79, "Define-the-acquisition-process"]], "Batch-sequential strategy": [[79, "Batch-sequential-strategy"]], "Constrained optimization with more than one constraint": [[79, "Constrained-optimization-with-more-than-one-constraint"]], "Mixed search spaces": [[80, "Mixed-search-spaces"]], "Trust region with mixed search spaces": [[80, "Trust-region-with-mixed-search-spaces"]], "Multi-objective optimization": [[81, "Multi-objective-optimization"]], "Define the acquisition function": [[81, "Define-the-acquisition-function"]], "Batch multi-objective optimization": [[81, "Batch-multi-objective-optimization"]], "Multi-objective optimization with constraints": [[81, "Multi-objective-optimization-with-constraints"]], "Acquisition function for multiple objectives and constraints": [[81, "Acquisition-function-for-multiple-objectives-and-constraints"]], "Multifidelity modelling": [[82, "Multifidelity-modelling"]], "Create initial dataset": [[82, "Create-initial-dataset"]], "Fit AR(1) model": [[82, "Fit-AR(1)-model"]], "Plot Results": [[82, "Plot-Results"]], "Comparison with naive model fit on high fidelity": [[82, "Comparison-with-naive-model-fit-on-high-fidelity"]], "A more complex model for non-linear problems": [[82, "A-more-complex-model-for-non-linear-problems"]], "OpenAI Gym": [[83, "OpenAI-Gym"]], "Introduction": [[83, "Introduction"]], "Optimization problem": [[83, "Optimization-problem"]], "Crash": [[83, "Crash"]], "Timeout": [[83, "Timeout"]], "Flying out of bounds": [[83, "Flying-out-of-bounds"]], "Slamming on the surface": [[83, "Slamming-on-the-surface"]], "Solving the optimization problem with Trieste": [[83, "Solving-the-optimization-problem-with-Trieste"]], "Analyzing the results": [[83, "Analyzing-the-results"]], "Batching with Sharpe Ratio": [[84, "Batching-with-Sharpe-Ratio"]], "Using the Acqusition rule for Bayesian Optimisation": [[84, "Using-the-Acqusition-rule-for-Bayesian-Optimisation"]], "Recovering from errors": [[85, "Recovering-from-errors"]], "Set up the problem": [[85, "Set-up-the-problem"], [90, "Set-up-the-problem"]], "Handling success": [[85, "Handling-success"]], "Handling failure": [[85, "Handling-failure"]], "Saving results to disk": [[85, "Saving-results-to-disk"]], "Out of memory errors": [[85, "Out-of-memory-errors"]], "High-dimensional Bayesian optimization": [[86, "High-dimensional-Bayesian-optimization"]], "Run standard Bayesian optimization": [[86, "Run-standard-Bayesian-optimization"]], "Scalable Thompson sampling": [[87, "Scalable-Thompson-sampling"]], "Define the problem and model": [[87, "Define-the-problem-and-model"], [88, "Define-the-problem-and-model"], [89, "Define-the-problem-and-model"]], "Create the Thompson sampling acquisition rule": [[87, "Create-the-Thompson-sampling-acquisition-rule"], [88, "Create-the-Thompson-sampling-acquisition-rule"]], "Thompson sampling": [[88, "Thompson-sampling"]], "Trust region Bayesian optimization": [[89, "Trust-region-Bayesian-optimization"]], "Trust region TREGO acquisition rule": [[89, "Trust-region-TREGO-acquisition-rule"]], "Create TREGO rule and run optimization loop": [[89, "Create-TREGO-rule-and-run-optimization-loop"]], "Visualizing TREGO results": [[89, "Visualizing-TREGO-results"]], "Batch trust region rule": [[89, "Batch-trust-region-rule"]], "Create the batch trust region acquisition rule": [[89, "Create-the-batch-trust-region-acquisition-rule"]], "Visualizing batch trust region results": [[89, "Visualizing-batch-trust-region-results"]], "Trust region TuRBO acquisition rule": [[89, "Trust-region-TuRBO-acquisition-rule"]], "Create TuRBO rule and run optimization loop": [[89, "Create-TuRBO-rule-and-run-optimization-loop"]], "Visualizing TuRBO results": [[89, "Visualizing-TuRBO-results"]], "Visualizing with Tensorboard": [[90, "Visualizing-with-Tensorboard"]], "Setting up TensorBoard": [[90, "Setting-up-TensorBoard"]], "Running and tracking the Bayesian Optimizer": [[90, "Running-and-tracking-the-Bayesian-Optimizer"]], "Deciding what to log": [[90, "Deciding-what-to-log"]], "Logging additional model parameters": [[90, "Logging-additional-model-parameters"]], "Logging additional acquisition rule metrics": [[90, "Logging-additional-acquisition-rule-metrics"]], "Using Tensorboard with Ask-Tell Optimization": [[90, "Using-Tensorboard-with-Ask-Tell-Optimization"]], "Tutorials": [[91, "tutorials"]], "Optimization problems": [[91, "optimization-problems"]], "Frequently asked questions": [[91, "frequently-asked-questions"]], "Run the tutorials interactively": [[91, "run-the-tutorials-interactively"]]}, "indexentries": {"map (class in trieste.acquisition.combination)": [[0, "trieste.acquisition.combination.Map"]], "product (class in trieste.acquisition.combination)": [[0, "trieste.acquisition.combination.Product"]], "reducer (class in trieste.acquisition.combination)": [[0, "trieste.acquisition.combination.Reducer"]], "sum (class in trieste.acquisition.combination)": [[0, "trieste.acquisition.combination.Sum"]], "_reduce() (map method)": [[0, "trieste.acquisition.combination.Map._reduce"]], "_reduce() (product method)": [[0, "trieste.acquisition.combination.Product._reduce"], [9, "trieste.acquisition.Product._reduce"]], "_reduce() (reducer method)": [[0, "trieste.acquisition.combination.Reducer._reduce"], [9, "trieste.acquisition.Reducer._reduce"]], "_reduce() (sum method)": [[0, "trieste.acquisition.combination.Sum._reduce"], [9, "trieste.acquisition.Sum._reduce"]], "acquisitions (reducer property)": [[0, "trieste.acquisition.combination.Reducer.acquisitions"], [9, "trieste.acquisition.Reducer.acquisitions"]], "module": [[0, "module-trieste.acquisition.combination"], [1, "module-trieste.acquisition.function.active_learning"], [2, "module-trieste.acquisition.function.continuous_thompson_sampling"], [3, "module-trieste.acquisition.function.entropy"], [4, "module-trieste.acquisition.function.function"], [5, "module-trieste.acquisition.function.greedy_batch"], [6, "module-trieste.acquisition.function"], [7, "module-trieste.acquisition.function.multi_objective"], [8, "module-trieste.acquisition.function.utils"], [9, "module-trieste.acquisition"], [10, "module-trieste.acquisition.interface"], [11, "module-trieste.acquisition.multi_objective.dominance"], [12, "module-trieste.acquisition.multi_objective"], [13, "module-trieste.acquisition.multi_objective.pareto"], [14, "module-trieste.acquisition.multi_objective.partition"], [15, "module-trieste.acquisition.optimizer"], [16, "module-trieste.acquisition.rule"], [17, "module-trieste.acquisition.sampler"], [18, "module-trieste.acquisition.utils"], [19, "module-trieste.ask_tell_optimization"], [20, "module-trieste.bayesian_optimizer"], [21, "module-trieste.data"], [22, "module-trieste.experimental"], [23, "module-trieste.experimental.plotting"], [24, "module-trieste.experimental.plotting.inequality_constraints"], [25, "module-trieste.experimental.plotting.plotting"], [26, "module-trieste.experimental.plotting.plotting_plotly"], [27, "module-trieste"], [28, "module-trieste.logging"], [29, "module-trieste.models.gpflow.builders"], [30, "module-trieste.models.gpflow"], [31, "module-trieste.models.gpflow.inducing_point_selectors"], [32, "module-trieste.models.gpflow.interface"], [33, "module-trieste.models.gpflow.models"], [34, "module-trieste.models.gpflow.optimizer"], [35, "module-trieste.models.gpflow.sampler"], [36, "module-trieste.models.gpflow.utils"], [37, "module-trieste.models.gpflux.builders"], [38, "module-trieste.models.gpflux"], [39, "module-trieste.models.gpflux.interface"], [40, "module-trieste.models.gpflux.models"], [41, "module-trieste.models.gpflux.sampler"], [42, "module-trieste.models"], [43, "module-trieste.models.interfaces"], [44, "module-trieste.models.keras.architectures"], [45, "module-trieste.models.keras.builders"], [46, "module-trieste.models.keras"], [47, "module-trieste.models.keras.interface"], [48, "module-trieste.models.keras.models"], [49, "module-trieste.models.keras.sampler"], [50, "module-trieste.models.keras.utils"], [51, "module-trieste.models.optimizer"], [52, "module-trieste.models.utils"], [53, "module-trieste.objectives"], [54, "module-trieste.objectives.multi_objectives"], [55, "module-trieste.objectives.multifidelity_objectives"], [56, "module-trieste.objectives.single_objectives"], [57, "module-trieste.objectives.utils"], [58, "module-trieste.observer"], [59, "module-trieste.space"], [60, "module-trieste.types"], [61, "module-trieste.utils"], [62, "module-trieste.utils.misc"], [63, "module-trieste.version"]], "prepare_acquisition_function() (reducer method)": [[0, "trieste.acquisition.combination.Reducer.prepare_acquisition_function"], [9, "trieste.acquisition.Reducer.prepare_acquisition_function"]], "trieste.acquisition.combination": [[0, "module-trieste.acquisition.combination"]], "update_acquisition_function() (reducer method)": [[0, "trieste.acquisition.combination.Reducer.update_acquisition_function"], [9, "trieste.acquisition.Reducer.update_acquisition_function"]], "bayesianactivelearningbydisagreement (class in trieste.acquisition.function.active_learning)": [[1, "trieste.acquisition.function.active_learning.BayesianActiveLearningByDisagreement"]], "expectedfeasibility (class in trieste.acquisition.function.active_learning)": [[1, "trieste.acquisition.function.active_learning.ExpectedFeasibility"]], "integratedvariancereduction (class in trieste.acquisition.function.active_learning)": [[1, "trieste.acquisition.function.active_learning.IntegratedVarianceReduction"]], "predictivevariance (class in trieste.acquisition.function.active_learning)": [[1, "trieste.acquisition.function.active_learning.PredictiveVariance"]], "__call__() (bayesian_active_learning_by_disagreement method)": [[1, "trieste.acquisition.function.active_learning.bayesian_active_learning_by_disagreement.__call__"], [6, "trieste.acquisition.function.bayesian_active_learning_by_disagreement.__call__"], [9, "trieste.acquisition.bayesian_active_learning_by_disagreement.__call__"]], "__call__() (integrated_variance_reduction method)": [[1, "trieste.acquisition.function.active_learning.integrated_variance_reduction.__call__"], [6, "trieste.acquisition.function.integrated_variance_reduction.__call__"], [9, "trieste.acquisition.integrated_variance_reduction.__call__"]], "bayesian_active_learning_by_disagreement (class in trieste.acquisition.function.active_learning)": [[1, "trieste.acquisition.function.active_learning.bayesian_active_learning_by_disagreement"]], "bichon_ranjan_criterion() (in module trieste.acquisition.function.active_learning)": [[1, "trieste.acquisition.function.active_learning.bichon_ranjan_criterion"]], "integrated_variance_reduction (class in trieste.acquisition.function.active_learning)": [[1, "trieste.acquisition.function.active_learning.integrated_variance_reduction"]], "predictive_variance() (in module trieste.acquisition.function.active_learning)": [[1, "trieste.acquisition.function.active_learning.predictive_variance"]], "prepare_acquisition_function() (bayesianactivelearningbydisagreement method)": [[1, "trieste.acquisition.function.active_learning.BayesianActiveLearningByDisagreement.prepare_acquisition_function"], [6, "trieste.acquisition.function.BayesianActiveLearningByDisagreement.prepare_acquisition_function"], [9, "trieste.acquisition.BayesianActiveLearningByDisagreement.prepare_acquisition_function"]], "prepare_acquisition_function() (expectedfeasibility method)": [[1, "trieste.acquisition.function.active_learning.ExpectedFeasibility.prepare_acquisition_function"], [6, "trieste.acquisition.function.ExpectedFeasibility.prepare_acquisition_function"], [9, "trieste.acquisition.ExpectedFeasibility.prepare_acquisition_function"]], "prepare_acquisition_function() (integratedvariancereduction method)": [[1, "trieste.acquisition.function.active_learning.IntegratedVarianceReduction.prepare_acquisition_function"], [6, "trieste.acquisition.function.IntegratedVarianceReduction.prepare_acquisition_function"], [9, "trieste.acquisition.IntegratedVarianceReduction.prepare_acquisition_function"]], "prepare_acquisition_function() (predictivevariance method)": [[1, "trieste.acquisition.function.active_learning.PredictiveVariance.prepare_acquisition_function"], [6, "trieste.acquisition.function.PredictiveVariance.prepare_acquisition_function"], [9, "trieste.acquisition.PredictiveVariance.prepare_acquisition_function"]], "trieste.acquisition.function.active_learning": [[1, "module-trieste.acquisition.function.active_learning"]], "update_acquisition_function() (bayesianactivelearningbydisagreement method)": [[1, "trieste.acquisition.function.active_learning.BayesianActiveLearningByDisagreement.update_acquisition_function"], [6, "trieste.acquisition.function.BayesianActiveLearningByDisagreement.update_acquisition_function"], [9, "trieste.acquisition.BayesianActiveLearningByDisagreement.update_acquisition_function"]], "update_acquisition_function() (expectedfeasibility method)": [[1, "trieste.acquisition.function.active_learning.ExpectedFeasibility.update_acquisition_function"], [6, "trieste.acquisition.function.ExpectedFeasibility.update_acquisition_function"], [9, "trieste.acquisition.ExpectedFeasibility.update_acquisition_function"]], "update_acquisition_function() (integratedvariancereduction method)": [[1, "trieste.acquisition.function.active_learning.IntegratedVarianceReduction.update_acquisition_function"], [6, "trieste.acquisition.function.IntegratedVarianceReduction.update_acquisition_function"], [9, "trieste.acquisition.IntegratedVarianceReduction.update_acquisition_function"]], "update_acquisition_function() (predictivevariance method)": [[1, "trieste.acquisition.function.active_learning.PredictiveVariance.update_acquisition_function"], [6, "trieste.acquisition.function.PredictiveVariance.update_acquisition_function"], [9, "trieste.acquisition.PredictiveVariance.update_acquisition_function"]], "greedycontinuousthompsonsampling (class in trieste.acquisition.function.continuous_thompson_sampling)": [[2, "trieste.acquisition.function.continuous_thompson_sampling.GreedyContinuousThompsonSampling"]], "parallelcontinuousthompsonsampling (class in trieste.acquisition.function.continuous_thompson_sampling)": [[2, "trieste.acquisition.function.continuous_thompson_sampling.ParallelContinuousThompsonSampling"]], "_dummytrajectoryfunctionclass (class in trieste.acquisition.function.continuous_thompson_sampling)": [[2, "trieste.acquisition.function.continuous_thompson_sampling._DummyTrajectoryFunctionClass"]], "__call__() (_dummytrajectoryfunctionclass method)": [[2, "trieste.acquisition.function.continuous_thompson_sampling._DummyTrajectoryFunctionClass.__call__"]], "negate_trajectory_function() (in module trieste.acquisition.function.continuous_thompson_sampling)": [[2, "trieste.acquisition.function.continuous_thompson_sampling.negate_trajectory_function"]], "prepare_acquisition_function() (greedycontinuousthompsonsampling method)": [[2, "trieste.acquisition.function.continuous_thompson_sampling.GreedyContinuousThompsonSampling.prepare_acquisition_function"], [6, "trieste.acquisition.function.GreedyContinuousThompsonSampling.prepare_acquisition_function"], [9, "trieste.acquisition.GreedyContinuousThompsonSampling.prepare_acquisition_function"]], "prepare_acquisition_function() (parallelcontinuousthompsonsampling method)": [[2, "trieste.acquisition.function.continuous_thompson_sampling.ParallelContinuousThompsonSampling.prepare_acquisition_function"], [6, "trieste.acquisition.function.ParallelContinuousThompsonSampling.prepare_acquisition_function"], [9, "trieste.acquisition.ParallelContinuousThompsonSampling.prepare_acquisition_function"]], "trieste.acquisition.function.continuous_thompson_sampling": [[2, "module-trieste.acquisition.function.continuous_thompson_sampling"]], "update_acquisition_function() (greedycontinuousthompsonsampling method)": [[2, "trieste.acquisition.function.continuous_thompson_sampling.GreedyContinuousThompsonSampling.update_acquisition_function"], [6, "trieste.acquisition.function.GreedyContinuousThompsonSampling.update_acquisition_function"], [9, "trieste.acquisition.GreedyContinuousThompsonSampling.update_acquisition_function"]], "update_acquisition_function() (parallelcontinuousthompsonsampling method)": [[2, "trieste.acquisition.function.continuous_thompson_sampling.ParallelContinuousThompsonSampling.update_acquisition_function"], [6, "trieste.acquisition.function.ParallelContinuousThompsonSampling.update_acquisition_function"], [9, "trieste.acquisition.ParallelContinuousThompsonSampling.update_acquisition_function"]], "costweighting (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.CostWeighting"]], "gibbon (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.GIBBON"]], "gibbonmodeltype (in module trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.GIBBONModelType"]], "gibbonacquisition (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.GibbonAcquisition"]], "mumbo (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.MUMBO"], [3, "trieste.acquisition.function.entropy.mumbo"]], "mumbomodeltype (in module trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.MUMBOModelType"]], "minvalueentropysearch (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.MinValueEntropySearch"]], "supportscovarianceobservationnoise (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.SupportsCovarianceObservationNoise"]], "supportscovarianceobservationnoisetrajectory (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.SupportsCovarianceObservationNoiseTrajectory"]], "supportscovariancewithtopfidelitypredicty (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.SupportsCovarianceWithTopFidelityPredictY"]], "__call__() (gibbon_quality_term method)": [[3, "trieste.acquisition.function.entropy.gibbon_quality_term.__call__"], [6, "trieste.acquisition.function.gibbon_quality_term.__call__"], [9, "trieste.acquisition.gibbon_quality_term.__call__"]], "__call__() (gibbon_repulsion_term method)": [[3, "trieste.acquisition.function.entropy.gibbon_repulsion_term.__call__"], [6, "trieste.acquisition.function.gibbon_repulsion_term.__call__"], [9, "trieste.acquisition.gibbon_repulsion_term.__call__"]], "__call__() (min_value_entropy_search method)": [[3, "trieste.acquisition.function.entropy.min_value_entropy_search.__call__"], [6, "trieste.acquisition.function.min_value_entropy_search.__call__"], [9, "trieste.acquisition.min_value_entropy_search.__call__"]], "__call__() (mumbo method)": [[3, "trieste.acquisition.function.entropy.mumbo.__call__"]], "get_min_value_samples_on_top_fidelity() (mumbo method)": [[3, "trieste.acquisition.function.entropy.MUMBO.get_min_value_samples_on_top_fidelity"]], "gibbon_quality_term (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.gibbon_quality_term"]], "gibbon_repulsion_term (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.gibbon_repulsion_term"]], "min_value_entropy_search (class in trieste.acquisition.function.entropy)": [[3, "trieste.acquisition.function.entropy.min_value_entropy_search"]], "prepare_acquisition_function() (costweighting method)": [[3, "trieste.acquisition.function.entropy.CostWeighting.prepare_acquisition_function"]], "prepare_acquisition_function() (gibbon method)": [[3, "trieste.acquisition.function.entropy.GIBBON.prepare_acquisition_function"], [6, "trieste.acquisition.function.GIBBON.prepare_acquisition_function"], [9, "trieste.acquisition.GIBBON.prepare_acquisition_function"]], "prepare_acquisition_function() (mumbo method)": [[3, "trieste.acquisition.function.entropy.MUMBO.prepare_acquisition_function"]], "prepare_acquisition_function() (minvalueentropysearch method)": [[3, "trieste.acquisition.function.entropy.MinValueEntropySearch.prepare_acquisition_function"], [6, "trieste.acquisition.function.MinValueEntropySearch.prepare_acquisition_function"], [9, "trieste.acquisition.MinValueEntropySearch.prepare_acquisition_function"]], "trieste.acquisition.function.entropy": [[3, "module-trieste.acquisition.function.entropy"]], "update() (gibbon_quality_term method)": [[3, "trieste.acquisition.function.entropy.gibbon_quality_term.update"], [6, "trieste.acquisition.function.gibbon_quality_term.update"], [9, "trieste.acquisition.gibbon_quality_term.update"]], "update() (gibbon_repulsion_term method)": [[3, "trieste.acquisition.function.entropy.gibbon_repulsion_term.update"], [6, "trieste.acquisition.function.gibbon_repulsion_term.update"], [9, "trieste.acquisition.gibbon_repulsion_term.update"]], "update() (min_value_entropy_search method)": [[3, "trieste.acquisition.function.entropy.min_value_entropy_search.update"], [6, "trieste.acquisition.function.min_value_entropy_search.update"], [9, "trieste.acquisition.min_value_entropy_search.update"]], "update() (mumbo method)": [[3, "trieste.acquisition.function.entropy.mumbo.update"]], "update_acquisition_function() (costweighting method)": [[3, "trieste.acquisition.function.entropy.CostWeighting.update_acquisition_function"]], "update_acquisition_function() (gibbon method)": [[3, "trieste.acquisition.function.entropy.GIBBON.update_acquisition_function"], [6, "trieste.acquisition.function.GIBBON.update_acquisition_function"], [9, "trieste.acquisition.GIBBON.update_acquisition_function"]], "update_acquisition_function() (mumbo method)": [[3, "trieste.acquisition.function.entropy.MUMBO.update_acquisition_function"]], "update_acquisition_function() (minvalueentropysearch method)": [[3, "trieste.acquisition.function.entropy.MinValueEntropySearch.update_acquisition_function"], [6, "trieste.acquisition.function.MinValueEntropySearch.update_acquisition_function"], [9, "trieste.acquisition.MinValueEntropySearch.update_acquisition_function"]], "augmentedexpectedimprovement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.AugmentedExpectedImprovement"]], "batchexpectedimprovement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.BatchExpectedImprovement"]], "batchmontecarloexpectedimprovement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.BatchMonteCarloExpectedImprovement"]], "expectedconstrainedimprovement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.ExpectedConstrainedImprovement"]], "expectedimprovement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.ExpectedImprovement"]], "fastconstraintsfeasibility (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.FastConstraintsFeasibility"]], "makepositive (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.MakePositive"]], "montecarloaugmentedexpectedimprovement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.MonteCarloAugmentedExpectedImprovement"]], "montecarloexpectedimprovement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.MonteCarloExpectedImprovement"]], "multipleoptimismnegativelowerconfidencebound (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.MultipleOptimismNegativeLowerConfidenceBound"]], "negativelowerconfidencebound (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.NegativeLowerConfidenceBound"]], "negativepredictivemean (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.NegativePredictiveMean"]], "probabilityoffeasibility (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.ProbabilityOfFeasibility"]], "probabilityofimprovement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.ProbabilityOfImprovement"]], "__call__() (augmented_expected_improvement method)": [[4, "trieste.acquisition.function.function.augmented_expected_improvement.__call__"], [6, "trieste.acquisition.function.augmented_expected_improvement.__call__"], [9, "trieste.acquisition.augmented_expected_improvement.__call__"]], "__call__() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement.__call__"], [6, "trieste.acquisition.function.batch_expected_improvement.__call__"], [9, "trieste.acquisition.batch_expected_improvement.__call__"]], "__call__() (batch_monte_carlo_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_monte_carlo_expected_improvement.__call__"]], "__call__() (expected_improvement method)": [[4, "trieste.acquisition.function.function.expected_improvement.__call__"], [6, "trieste.acquisition.function.expected_improvement.__call__"], [9, "trieste.acquisition.expected_improvement.__call__"]], "__call__() (monte_carlo_augmented_expected_improvement method)": [[4, "trieste.acquisition.function.function.monte_carlo_augmented_expected_improvement.__call__"]], "__call__() (monte_carlo_expected_improvement method)": [[4, "trieste.acquisition.function.function.monte_carlo_expected_improvement.__call__"]], "__call__() (multiple_optimism_lower_confidence_bound method)": [[4, "trieste.acquisition.function.function.multiple_optimism_lower_confidence_bound.__call__"], [6, "trieste.acquisition.function.multiple_optimism_lower_confidence_bound.__call__"], [9, "trieste.acquisition.multiple_optimism_lower_confidence_bound.__call__"]], "__call__() (probability_below_threshold method)": [[4, "trieste.acquisition.function.function.probability_below_threshold.__call__"], [6, "trieste.acquisition.function.probability_below_threshold.__call__"], [9, "trieste.acquisition.probability_below_threshold.__call__"]], "_compute_phi() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement._compute_Phi"], [6, "trieste.acquisition.function.batch_expected_improvement._compute_Phi"], [9, "trieste.acquisition.batch_expected_improvement._compute_Phi"]], "_compute_r() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement._compute_R"], [6, "trieste.acquisition.function.batch_expected_improvement._compute_R"], [9, "trieste.acquisition.batch_expected_improvement._compute_R"]], "_compute_sigma() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement._compute_Sigma"], [6, "trieste.acquisition.function.batch_expected_improvement._compute_Sigma"], [9, "trieste.acquisition.batch_expected_improvement._compute_Sigma"]], "_compute_batch_expected_improvement() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement._compute_batch_expected_improvement"], [6, "trieste.acquisition.function.batch_expected_improvement._compute_batch_expected_improvement"], [9, "trieste.acquisition.batch_expected_improvement._compute_batch_expected_improvement"]], "_compute_bm() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement._compute_bm"], [6, "trieste.acquisition.function.batch_expected_improvement._compute_bm"], [9, "trieste.acquisition.batch_expected_improvement._compute_bm"]], "_compute_c() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement._compute_c"], [6, "trieste.acquisition.function.batch_expected_improvement._compute_c"], [9, "trieste.acquisition.batch_expected_improvement._compute_c"]], "_compute_p() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement._compute_p"], [6, "trieste.acquisition.function.batch_expected_improvement._compute_p"], [9, "trieste.acquisition.batch_expected_improvement._compute_p"]], "_delta() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement._delta"], [6, "trieste.acquisition.function.batch_expected_improvement._delta"], [9, "trieste.acquisition.batch_expected_improvement._delta"]], "_update_expected_improvement_fn() (expectedconstrainedimprovement method)": [[4, "trieste.acquisition.function.function.ExpectedConstrainedImprovement._update_expected_improvement_fn"], [6, "trieste.acquisition.function.ExpectedConstrainedImprovement._update_expected_improvement_fn"], [9, "trieste.acquisition.ExpectedConstrainedImprovement._update_expected_improvement_fn"]], "augmented_expected_improvement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.augmented_expected_improvement"]], "batch_expected_improvement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.batch_expected_improvement"]], "batch_monte_carlo_expected_improvement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.batch_monte_carlo_expected_improvement"]], "expected_improvement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.expected_improvement"]], "fast_constraints_feasibility() (in module trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.fast_constraints_feasibility"]], "lower_confidence_bound() (in module trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.lower_confidence_bound"]], "monte_carlo_augmented_expected_improvement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.monte_carlo_augmented_expected_improvement"]], "monte_carlo_expected_improvement (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.monte_carlo_expected_improvement"]], "multiple_optimism_lower_confidence_bound (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.multiple_optimism_lower_confidence_bound"]], "prepare_acquisition_function() (augmentedexpectedimprovement method)": [[4, "trieste.acquisition.function.function.AugmentedExpectedImprovement.prepare_acquisition_function"], [6, "trieste.acquisition.function.AugmentedExpectedImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.AugmentedExpectedImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (batchexpectedimprovement method)": [[4, "trieste.acquisition.function.function.BatchExpectedImprovement.prepare_acquisition_function"], [6, "trieste.acquisition.function.BatchExpectedImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.BatchExpectedImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (batchmontecarloexpectedimprovement method)": [[4, "trieste.acquisition.function.function.BatchMonteCarloExpectedImprovement.prepare_acquisition_function"], [6, "trieste.acquisition.function.BatchMonteCarloExpectedImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.BatchMonteCarloExpectedImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (expectedconstrainedimprovement method)": [[4, "trieste.acquisition.function.function.ExpectedConstrainedImprovement.prepare_acquisition_function"], [6, "trieste.acquisition.function.ExpectedConstrainedImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.ExpectedConstrainedImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (expectedimprovement method)": [[4, "trieste.acquisition.function.function.ExpectedImprovement.prepare_acquisition_function"], [6, "trieste.acquisition.function.ExpectedImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.ExpectedImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (fastconstraintsfeasibility method)": [[4, "trieste.acquisition.function.function.FastConstraintsFeasibility.prepare_acquisition_function"], [6, "trieste.acquisition.function.FastConstraintsFeasibility.prepare_acquisition_function"], [9, "trieste.acquisition.FastConstraintsFeasibility.prepare_acquisition_function"]], "prepare_acquisition_function() (makepositive method)": [[4, "trieste.acquisition.function.function.MakePositive.prepare_acquisition_function"], [6, "trieste.acquisition.function.MakePositive.prepare_acquisition_function"], [9, "trieste.acquisition.MakePositive.prepare_acquisition_function"]], "prepare_acquisition_function() (montecarloaugmentedexpectedimprovement method)": [[4, "trieste.acquisition.function.function.MonteCarloAugmentedExpectedImprovement.prepare_acquisition_function"], [6, "trieste.acquisition.function.MonteCarloAugmentedExpectedImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.MonteCarloAugmentedExpectedImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (montecarloexpectedimprovement method)": [[4, "trieste.acquisition.function.function.MonteCarloExpectedImprovement.prepare_acquisition_function"], [6, "trieste.acquisition.function.MonteCarloExpectedImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.MonteCarloExpectedImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (multipleoptimismnegativelowerconfidencebound method)": [[4, "trieste.acquisition.function.function.MultipleOptimismNegativeLowerConfidenceBound.prepare_acquisition_function"], [6, "trieste.acquisition.function.MultipleOptimismNegativeLowerConfidenceBound.prepare_acquisition_function"], [9, "trieste.acquisition.MultipleOptimismNegativeLowerConfidenceBound.prepare_acquisition_function"]], "prepare_acquisition_function() (negativelowerconfidencebound method)": [[4, "trieste.acquisition.function.function.NegativeLowerConfidenceBound.prepare_acquisition_function"], [6, "trieste.acquisition.function.NegativeLowerConfidenceBound.prepare_acquisition_function"], [9, "trieste.acquisition.NegativeLowerConfidenceBound.prepare_acquisition_function"]], "prepare_acquisition_function() (probabilityoffeasibility method)": [[4, "trieste.acquisition.function.function.ProbabilityOfFeasibility.prepare_acquisition_function"], [6, "trieste.acquisition.function.ProbabilityOfFeasibility.prepare_acquisition_function"], [9, "trieste.acquisition.ProbabilityOfFeasibility.prepare_acquisition_function"]], "prepare_acquisition_function() (probabilityofimprovement method)": [[4, "trieste.acquisition.function.function.ProbabilityOfImprovement.prepare_acquisition_function"], [6, "trieste.acquisition.function.ProbabilityOfImprovement.prepare_acquisition_function"]], "probability_below_threshold (class in trieste.acquisition.function.function)": [[4, "trieste.acquisition.function.function.probability_below_threshold"]], "threshold (probabilityoffeasibility property)": [[4, "trieste.acquisition.function.function.ProbabilityOfFeasibility.threshold"], [6, "trieste.acquisition.function.ProbabilityOfFeasibility.threshold"], [9, "trieste.acquisition.ProbabilityOfFeasibility.threshold"]], "trieste.acquisition.function.function": [[4, "module-trieste.acquisition.function.function"]], "update() (augmented_expected_improvement method)": [[4, "trieste.acquisition.function.function.augmented_expected_improvement.update"], [6, "trieste.acquisition.function.augmented_expected_improvement.update"], [9, "trieste.acquisition.augmented_expected_improvement.update"]], "update() (batch_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_expected_improvement.update"], [6, "trieste.acquisition.function.batch_expected_improvement.update"], [9, "trieste.acquisition.batch_expected_improvement.update"]], "update() (batch_monte_carlo_expected_improvement method)": [[4, "trieste.acquisition.function.function.batch_monte_carlo_expected_improvement.update"]], "update() (expected_improvement method)": [[4, "trieste.acquisition.function.function.expected_improvement.update"], [6, "trieste.acquisition.function.expected_improvement.update"], [9, "trieste.acquisition.expected_improvement.update"]], "update() (monte_carlo_augmented_expected_improvement method)": [[4, "trieste.acquisition.function.function.monte_carlo_augmented_expected_improvement.update"]], "update() (monte_carlo_expected_improvement method)": [[4, "trieste.acquisition.function.function.monte_carlo_expected_improvement.update"]], "update() (probability_below_threshold method)": [[4, "trieste.acquisition.function.function.probability_below_threshold.update"], [6, "trieste.acquisition.function.probability_below_threshold.update"], [9, "trieste.acquisition.probability_below_threshold.update"]], "update_acquisition_function() (augmentedexpectedimprovement method)": [[4, "trieste.acquisition.function.function.AugmentedExpectedImprovement.update_acquisition_function"], [6, "trieste.acquisition.function.AugmentedExpectedImprovement.update_acquisition_function"], [9, "trieste.acquisition.AugmentedExpectedImprovement.update_acquisition_function"]], "update_acquisition_function() (batchexpectedimprovement method)": [[4, "trieste.acquisition.function.function.BatchExpectedImprovement.update_acquisition_function"], [6, "trieste.acquisition.function.BatchExpectedImprovement.update_acquisition_function"], [9, "trieste.acquisition.BatchExpectedImprovement.update_acquisition_function"]], "update_acquisition_function() (batchmontecarloexpectedimprovement method)": [[4, "trieste.acquisition.function.function.BatchMonteCarloExpectedImprovement.update_acquisition_function"], [6, "trieste.acquisition.function.BatchMonteCarloExpectedImprovement.update_acquisition_function"], [9, "trieste.acquisition.BatchMonteCarloExpectedImprovement.update_acquisition_function"]], "update_acquisition_function() (expectedconstrainedimprovement method)": [[4, "trieste.acquisition.function.function.ExpectedConstrainedImprovement.update_acquisition_function"], [6, "trieste.acquisition.function.ExpectedConstrainedImprovement.update_acquisition_function"], [9, "trieste.acquisition.ExpectedConstrainedImprovement.update_acquisition_function"]], "update_acquisition_function() (expectedimprovement method)": [[4, "trieste.acquisition.function.function.ExpectedImprovement.update_acquisition_function"], [6, "trieste.acquisition.function.ExpectedImprovement.update_acquisition_function"], [9, "trieste.acquisition.ExpectedImprovement.update_acquisition_function"]], "update_acquisition_function() (fastconstraintsfeasibility method)": [[4, "trieste.acquisition.function.function.FastConstraintsFeasibility.update_acquisition_function"], [6, "trieste.acquisition.function.FastConstraintsFeasibility.update_acquisition_function"], [9, "trieste.acquisition.FastConstraintsFeasibility.update_acquisition_function"]], "update_acquisition_function() (makepositive method)": [[4, "trieste.acquisition.function.function.MakePositive.update_acquisition_function"], [6, "trieste.acquisition.function.MakePositive.update_acquisition_function"], [9, "trieste.acquisition.MakePositive.update_acquisition_function"]], "update_acquisition_function() (montecarloaugmentedexpectedimprovement method)": [[4, "trieste.acquisition.function.function.MonteCarloAugmentedExpectedImprovement.update_acquisition_function"], [6, "trieste.acquisition.function.MonteCarloAugmentedExpectedImprovement.update_acquisition_function"], [9, "trieste.acquisition.MonteCarloAugmentedExpectedImprovement.update_acquisition_function"]], "update_acquisition_function() (montecarloexpectedimprovement method)": [[4, "trieste.acquisition.function.function.MonteCarloExpectedImprovement.update_acquisition_function"], [6, "trieste.acquisition.function.MonteCarloExpectedImprovement.update_acquisition_function"], [9, "trieste.acquisition.MonteCarloExpectedImprovement.update_acquisition_function"]], "update_acquisition_function() (multipleoptimismnegativelowerconfidencebound method)": [[4, "trieste.acquisition.function.function.MultipleOptimismNegativeLowerConfidenceBound.update_acquisition_function"], [6, "trieste.acquisition.function.MultipleOptimismNegativeLowerConfidenceBound.update_acquisition_function"], [9, "trieste.acquisition.MultipleOptimismNegativeLowerConfidenceBound.update_acquisition_function"]], "update_acquisition_function() (negativelowerconfidencebound method)": [[4, "trieste.acquisition.function.function.NegativeLowerConfidenceBound.update_acquisition_function"], [6, "trieste.acquisition.function.NegativeLowerConfidenceBound.update_acquisition_function"], [9, "trieste.acquisition.NegativeLowerConfidenceBound.update_acquisition_function"]], "update_acquisition_function() (probabilityoffeasibility method)": [[4, "trieste.acquisition.function.function.ProbabilityOfFeasibility.update_acquisition_function"], [6, "trieste.acquisition.function.ProbabilityOfFeasibility.update_acquisition_function"], [9, "trieste.acquisition.ProbabilityOfFeasibility.update_acquisition_function"]], "update_acquisition_function() (probabilityofimprovement method)": [[4, "trieste.acquisition.function.function.ProbabilityOfImprovement.update_acquisition_function"], [6, "trieste.acquisition.function.ProbabilityOfImprovement.update_acquisition_function"]], "fantasizer (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch.Fantasizer"]], "fantasizermodelstack (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch.FantasizerModelStack"]], "fantasizermodeltype (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch.FantasizerModelType"]], "localpenalization (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch.LocalPenalization"]], "penalizedacquisition (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch.PenalizedAcquisition"]], "__call__() (hard_local_penalizer method)": [[5, "trieste.acquisition.function.greedy_batch.hard_local_penalizer.__call__"], [6, "trieste.acquisition.function.hard_local_penalizer.__call__"], [9, "trieste.acquisition.hard_local_penalizer.__call__"]], "__call__() (soft_local_penalizer method)": [[5, "trieste.acquisition.function.greedy_batch.soft_local_penalizer.__call__"], [6, "trieste.acquisition.function.soft_local_penalizer.__call__"], [9, "trieste.acquisition.soft_local_penalizer.__call__"]], "_broadcast_predict() (in module trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch._broadcast_predict"]], "_fantasized_model (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model"]], "_generate_fantasized_data() (in module trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch._generate_fantasized_data"]], "_get_leading_dim_and_flatten() (in module trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch._get_leading_dim_and_flatten"]], "_restore_leading_dim() (in module trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch._restore_leading_dim"]], "get_kernel() (_fantasized_model method)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model.get_kernel"]], "get_observation_noise() (_fantasized_model method)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model.get_observation_noise"]], "hard_local_penalizer (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch.hard_local_penalizer"]], "local_penalizer (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch.local_penalizer"]], "log() (_fantasized_model method)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model.log"]], "predict() (_fantasized_model method)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model.predict"]], "predict_joint() (_fantasized_model method)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model.predict_joint"]], "predict_y() (_fantasized_model method)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model.predict_y"]], "prepare_acquisition_function() (fantasizer method)": [[5, "trieste.acquisition.function.greedy_batch.Fantasizer.prepare_acquisition_function"], [6, "trieste.acquisition.function.Fantasizer.prepare_acquisition_function"], [9, "trieste.acquisition.Fantasizer.prepare_acquisition_function"]], "prepare_acquisition_function() (localpenalization method)": [[5, "trieste.acquisition.function.greedy_batch.LocalPenalization.prepare_acquisition_function"], [6, "trieste.acquisition.function.LocalPenalization.prepare_acquisition_function"], [9, "trieste.acquisition.LocalPenalization.prepare_acquisition_function"]], "sample() (_fantasized_model method)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model.sample"]], "soft_local_penalizer (class in trieste.acquisition.function.greedy_batch)": [[5, "trieste.acquisition.function.greedy_batch.soft_local_penalizer"]], "trieste.acquisition.function.greedy_batch": [[5, "module-trieste.acquisition.function.greedy_batch"]], "update() (local_penalizer method)": [[5, "trieste.acquisition.function.greedy_batch.local_penalizer.update"]], "update_acquisition_function() (fantasizer method)": [[5, "trieste.acquisition.function.greedy_batch.Fantasizer.update_acquisition_function"], [6, "trieste.acquisition.function.Fantasizer.update_acquisition_function"], [9, "trieste.acquisition.Fantasizer.update_acquisition_function"]], "update_acquisition_function() (localpenalization method)": [[5, "trieste.acquisition.function.greedy_batch.LocalPenalization.update_acquisition_function"], [6, "trieste.acquisition.function.LocalPenalization.update_acquisition_function"], [9, "trieste.acquisition.LocalPenalization.update_acquisition_function"]], "update_fantasized_data() (_fantasized_model method)": [[5, "trieste.acquisition.function.greedy_batch._fantasized_model.update_fantasized_data"]], "augmentedexpectedimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.AugmentedExpectedImprovement"]], "batchexpectedimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.BatchExpectedImprovement"]], "batchmontecarloexpectedhypervolumeimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.BatchMonteCarloExpectedHypervolumeImprovement"]], "batchmontecarloexpectedimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.BatchMonteCarloExpectedImprovement"]], "bayesianactivelearningbydisagreement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.BayesianActiveLearningByDisagreement"]], "expectedconstrainedhypervolumeimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.ExpectedConstrainedHypervolumeImprovement"]], "expectedconstrainedimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.ExpectedConstrainedImprovement"]], "expectedfeasibility (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.ExpectedFeasibility"]], "expectedhypervolumeimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.ExpectedHypervolumeImprovement"]], "expectedimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.ExpectedImprovement"]], "fantasizer (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.Fantasizer"]], "fastconstraintsfeasibility (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.FastConstraintsFeasibility"]], "gibbon (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.GIBBON"]], "greedycontinuousthompsonsampling (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.GreedyContinuousThompsonSampling"]], "hippo (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.HIPPO"]], "integratedvariancereduction (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.IntegratedVarianceReduction"]], "localpenalization (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.LocalPenalization"]], "makepositive (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.MakePositive"]], "minvalueentropysearch (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.MinValueEntropySearch"]], "montecarloaugmentedexpectedimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.MonteCarloAugmentedExpectedImprovement"]], "montecarloexpectedimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.MonteCarloExpectedImprovement"]], "multipleoptimismnegativelowerconfidencebound (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.MultipleOptimismNegativeLowerConfidenceBound"]], "multivariatenormalcdf (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.MultivariateNormalCDF"]], "negativelowerconfidencebound (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.NegativeLowerConfidenceBound"]], "negativepredictivemean (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.NegativePredictiveMean"]], "parallelcontinuousthompsonsampling (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.ParallelContinuousThompsonSampling"]], "predictivevariance (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.PredictiveVariance"]], "probabilityoffeasibility (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.ProbabilityOfFeasibility"]], "probabilityofimprovement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.ProbabilityOfImprovement"]], "__call__() (multivariatenormalcdf method)": [[6, "trieste.acquisition.function.MultivariateNormalCDF.__call__"], [8, "trieste.acquisition.function.utils.MultivariateNormalCDF.__call__"]], "__call__() (expected_hv_improvement method)": [[6, "trieste.acquisition.function.expected_hv_improvement.__call__"], [7, "trieste.acquisition.function.multi_objective.expected_hv_improvement.__call__"], [9, "trieste.acquisition.expected_hv_improvement.__call__"]], "_get_update_indices() (multivariatenormalcdf method)": [[6, "trieste.acquisition.function.MultivariateNormalCDF._get_update_indices"], [8, "trieste.acquisition.function.utils.MultivariateNormalCDF._get_update_indices"]], "_standard_normal_cdf_and_inverse_cdf() (multivariatenormalcdf method)": [[6, "trieste.acquisition.function.MultivariateNormalCDF._standard_normal_cdf_and_inverse_cdf"], [8, "trieste.acquisition.function.utils.MultivariateNormalCDF._standard_normal_cdf_and_inverse_cdf"]], "_update_expected_improvement_fn() (expectedconstrainedhypervolumeimprovement method)": [[6, "trieste.acquisition.function.ExpectedConstrainedHypervolumeImprovement._update_expected_improvement_fn"], [7, "trieste.acquisition.function.multi_objective.ExpectedConstrainedHypervolumeImprovement._update_expected_improvement_fn"], [9, "trieste.acquisition.ExpectedConstrainedHypervolumeImprovement._update_expected_improvement_fn"]], "augmented_expected_improvement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.augmented_expected_improvement"]], "batch_ehvi() (in module trieste.acquisition.function)": [[6, "trieste.acquisition.function.batch_ehvi"]], "batch_expected_improvement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.batch_expected_improvement"]], "bayesian_active_learning_by_disagreement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.bayesian_active_learning_by_disagreement"]], "bichon_ranjan_criterion() (in module trieste.acquisition.function)": [[6, "trieste.acquisition.function.bichon_ranjan_criterion"]], "expected_hv_improvement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.expected_hv_improvement"]], "expected_improvement (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.expected_improvement"]], "fast_constraints_feasibility() (in module trieste.acquisition.function)": [[6, "trieste.acquisition.function.fast_constraints_feasibility"]], "gibbon_quality_term (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.gibbon_quality_term"]], "gibbon_repulsion_term (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.gibbon_repulsion_term"]], "hard_local_penalizer (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.hard_local_penalizer"]], "integrated_variance_reduction (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.integrated_variance_reduction"]], "lower_confidence_bound() (in module trieste.acquisition.function)": [[6, "trieste.acquisition.function.lower_confidence_bound"]], "min_value_entropy_search (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.min_value_entropy_search"]], "multiple_optimism_lower_confidence_bound (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.multiple_optimism_lower_confidence_bound"]], "predictive_variance() (in module trieste.acquisition.function)": [[6, "trieste.acquisition.function.predictive_variance"]], "prepare_acquisition_function() (batchmontecarloexpectedhypervolumeimprovement method)": [[6, "trieste.acquisition.function.BatchMonteCarloExpectedHypervolumeImprovement.prepare_acquisition_function"], [7, "trieste.acquisition.function.multi_objective.BatchMonteCarloExpectedHypervolumeImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.BatchMonteCarloExpectedHypervolumeImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (expectedhypervolumeimprovement method)": [[6, "trieste.acquisition.function.ExpectedHypervolumeImprovement.prepare_acquisition_function"], [7, "trieste.acquisition.function.multi_objective.ExpectedHypervolumeImprovement.prepare_acquisition_function"], [9, "trieste.acquisition.ExpectedHypervolumeImprovement.prepare_acquisition_function"]], "prepare_acquisition_function() (hippo method)": [[6, "trieste.acquisition.function.HIPPO.prepare_acquisition_function"], [7, "trieste.acquisition.function.multi_objective.HIPPO.prepare_acquisition_function"], [9, "trieste.acquisition.HIPPO.prepare_acquisition_function"]], "probability_below_threshold (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.probability_below_threshold"]], "soft_local_penalizer (class in trieste.acquisition.function)": [[6, "trieste.acquisition.function.soft_local_penalizer"]], "trieste.acquisition.function": [[6, "module-trieste.acquisition.function"]], "update() (expected_hv_improvement method)": [[6, "trieste.acquisition.function.expected_hv_improvement.update"], [7, "trieste.acquisition.function.multi_objective.expected_hv_improvement.update"], [9, "trieste.acquisition.expected_hv_improvement.update"]], "update_acquisition_function() (expectedhypervolumeimprovement method)": [[6, "trieste.acquisition.function.ExpectedHypervolumeImprovement.update_acquisition_function"], [7, "trieste.acquisition.function.multi_objective.ExpectedHypervolumeImprovement.update_acquisition_function"], [9, "trieste.acquisition.ExpectedHypervolumeImprovement.update_acquisition_function"]], "update_acquisition_function() (hippo method)": [[6, "trieste.acquisition.function.HIPPO.update_acquisition_function"], [7, "trieste.acquisition.function.multi_objective.HIPPO.update_acquisition_function"], [9, "trieste.acquisition.HIPPO.update_acquisition_function"]], "batchmontecarloexpectedhypervolumeimprovement (class in trieste.acquisition.function.multi_objective)": [[7, "trieste.acquisition.function.multi_objective.BatchMonteCarloExpectedHypervolumeImprovement"]], "expectedconstrainedhypervolumeimprovement (class in trieste.acquisition.function.multi_objective)": [[7, "trieste.acquisition.function.multi_objective.ExpectedConstrainedHypervolumeImprovement"]], "expectedhypervolumeimprovement (class in trieste.acquisition.function.multi_objective)": [[7, "trieste.acquisition.function.multi_objective.ExpectedHypervolumeImprovement"]], "hippo (class in trieste.acquisition.function.multi_objective)": [[7, "trieste.acquisition.function.multi_objective.HIPPO"]], "batch_ehvi() (in module trieste.acquisition.function.multi_objective)": [[7, "trieste.acquisition.function.multi_objective.batch_ehvi"]], "expected_hv_improvement (class in trieste.acquisition.function.multi_objective)": [[7, "trieste.acquisition.function.multi_objective.expected_hv_improvement"]], "hippo_penalizer (class in trieste.acquisition.function.multi_objective)": [[7, "trieste.acquisition.function.multi_objective.hippo_penalizer"]], "trieste.acquisition.function.multi_objective": [[7, "module-trieste.acquisition.function.multi_objective"]], "update() (hippo_penalizer method)": [[7, "trieste.acquisition.function.multi_objective.hippo_penalizer.update"]], "multivariatenormalcdf (class in trieste.acquisition.function.utils)": [[8, "trieste.acquisition.function.utils.MultivariateNormalCDF"]], "trieste.acquisition.function.utils": [[8, "module-trieste.acquisition.function.utils"]], "acquisitionfunction (in module trieste.acquisition)": [[9, "trieste.acquisition.AcquisitionFunction"]], "acquisitionfunctionbuilder (class in trieste.acquisition)": [[9, "trieste.acquisition.AcquisitionFunctionBuilder"]], "acquisitionfunctionclass (class in trieste.acquisition)": [[9, "trieste.acquisition.AcquisitionFunctionClass"]], "acquisitionrule (class in trieste.acquisition)": [[9, "trieste.acquisition.AcquisitionRule"]], "asynchronousgreedy (class in trieste.acquisition)": [[9, "trieste.acquisition.AsynchronousGreedy"]], "asynchronousoptimization (class in trieste.acquisition)": [[9, "trieste.acquisition.AsynchronousOptimization"]], "augmentedexpectedimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.AugmentedExpectedImprovement"]], "batchexpectedimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.BatchExpectedImprovement"]], "batchhypervolumesharperatioindicator (class in trieste.acquisition)": [[9, "trieste.acquisition.BatchHypervolumeSharpeRatioIndicator"]], "batchmontecarloexpectedhypervolumeimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.BatchMonteCarloExpectedHypervolumeImprovement"]], "batchmontecarloexpectedimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.BatchMonteCarloExpectedImprovement"]], "batchtrustregion (class in trieste.acquisition)": [[9, "trieste.acquisition.BatchTrustRegion"]], "batchtrustregionbox (class in trieste.acquisition)": [[9, "trieste.acquisition.BatchTrustRegionBox"]], "batchtrustregionproduct (class in trieste.acquisition)": [[9, "trieste.acquisition.BatchTrustRegionProduct"]], "bayesianactivelearningbydisagreement (class in trieste.acquisition)": [[9, "trieste.acquisition.BayesianActiveLearningByDisagreement"]], "discretethompsonsampling (class in trieste.acquisition)": [[9, "trieste.acquisition.DiscreteThompsonSampling"]], "efficientglobaloptimization (class in trieste.acquisition)": [[9, "trieste.acquisition.EfficientGlobalOptimization"]], "exactthompsonsampler (class in trieste.acquisition)": [[9, "trieste.acquisition.ExactThompsonSampler"]], "expectedconstrainedhypervolumeimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.ExpectedConstrainedHypervolumeImprovement"]], "expectedconstrainedimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.ExpectedConstrainedImprovement"]], "expectedfeasibility (class in trieste.acquisition)": [[9, "trieste.acquisition.ExpectedFeasibility"]], "expectedhypervolumeimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.ExpectedHypervolumeImprovement"]], "expectedimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.ExpectedImprovement"]], "fantasizer (class in trieste.acquisition)": [[9, "trieste.acquisition.Fantasizer"]], "fastconstraintsfeasibility (class in trieste.acquisition)": [[9, "trieste.acquisition.FastConstraintsFeasibility"]], "fixedpointtrustregiondiscrete (class in trieste.acquisition)": [[9, "trieste.acquisition.FixedPointTrustRegionDiscrete"]], "gibbon (class in trieste.acquisition)": [[9, "trieste.acquisition.GIBBON"]], "greedyacquisitionfunctionbuilder (class in trieste.acquisition)": [[9, "trieste.acquisition.GreedyAcquisitionFunctionBuilder"]], "greedycontinuousthompsonsampling (class in trieste.acquisition)": [[9, "trieste.acquisition.GreedyContinuousThompsonSampling"]], "gumbelsampler (class in trieste.acquisition)": [[9, "trieste.acquisition.GumbelSampler"]], "hippo (class in trieste.acquisition)": [[9, "trieste.acquisition.HIPPO"]], "hypercubetrustregion (class in trieste.acquisition)": [[9, "trieste.acquisition.HypercubeTrustRegion"]], "integratedvariancereduction (class in trieste.acquisition)": [[9, "trieste.acquisition.IntegratedVarianceReduction"]], "localdatasetsacquisitionrule (class in trieste.acquisition)": [[9, "trieste.acquisition.LocalDatasetsAcquisitionRule"]], "localpenalization (class in trieste.acquisition)": [[9, "trieste.acquisition.LocalPenalization"]], "makepositive (class in trieste.acquisition)": [[9, "trieste.acquisition.MakePositive"]], "minvalueentropysearch (class in trieste.acquisition)": [[9, "trieste.acquisition.MinValueEntropySearch"]], "montecarloaugmentedexpectedimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.MonteCarloAugmentedExpectedImprovement"]], "montecarloexpectedimprovement (class in trieste.acquisition)": [[9, "trieste.acquisition.MonteCarloExpectedImprovement"]], "multipleoptimismnegativelowerconfidencebound (class in trieste.acquisition)": [[9, "trieste.acquisition.MultipleOptimismNegativeLowerConfidenceBound"]], "negativelowerconfidencebound (class in trieste.acquisition)": [[9, "trieste.acquisition.NegativeLowerConfidenceBound"]], "negativepredictivemean (class in trieste.acquisition)": [[9, "trieste.acquisition.NegativePredictiveMean"]], "parallelcontinuousthompsonsampling (class in trieste.acquisition)": [[9, "trieste.acquisition.ParallelContinuousThompsonSampling"]], "penalizationfunction (in module trieste.acquisition)": [[9, "trieste.acquisition.PenalizationFunction"]], "predictivevariance (class in trieste.acquisition)": [[9, "trieste.acquisition.PredictiveVariance"]], "probabilityoffeasibility (class in trieste.acquisition)": [[9, "trieste.acquisition.ProbabilityOfFeasibility"]], "product (class in trieste.acquisition)": [[9, "trieste.acquisition.Product"]], "randomsampling (class in trieste.acquisition)": [[9, "trieste.acquisition.RandomSampling"]], "reducer (class in trieste.acquisition)": [[9, "trieste.acquisition.Reducer"]], "singlemodelacquisitionbuilder (class in trieste.acquisition)": [[9, "trieste.acquisition.SingleModelAcquisitionBuilder"]], "singlemodelgreedyacquisitionbuilder (class in trieste.acquisition)": [[9, "trieste.acquisition.SingleModelGreedyAcquisitionBuilder"]], "singlemodelvectorizedacquisitionbuilder (class in trieste.acquisition)": [[9, "trieste.acquisition.SingleModelVectorizedAcquisitionBuilder"]], "singleobjectivetrustregionbox (class in trieste.acquisition)": [[9, "trieste.acquisition.SingleObjectiveTrustRegionBox"]], "singleobjectivetrustregiondiscrete (class in trieste.acquisition)": [[9, "trieste.acquisition.SingleObjectiveTrustRegionDiscrete"]], "sum (class in trieste.acquisition)": [[9, "trieste.acquisition.Sum"]], "tregobox (class in trieste.acquisition)": [[9, "trieste.acquisition.TREGOBox"]], "turbobox (class in trieste.acquisition)": [[9, "trieste.acquisition.TURBOBox"]], "thompsonsampler (class in trieste.acquisition)": [[9, "trieste.acquisition.ThompsonSampler"]], "thompsonsamplerfromtrajectory (class in trieste.acquisition)": [[9, "trieste.acquisition.ThompsonSamplerFromTrajectory"]], "updatablepenalizationfunction (class in trieste.acquisition)": [[9, "trieste.acquisition.UpdatablePenalizationFunction"]], "updatablesearchspace (class in trieste.acquisition)": [[9, "trieste.acquisition.UpdatableSearchSpace"]], "updatabletrustregion (class in trieste.acquisition)": [[9, "trieste.acquisition.UpdatableTrustRegion"]], "updatabletrustregionbox (class in trieste.acquisition)": [[9, "trieste.acquisition.UpdatableTrustRegionBox"]], "updatabletrustregiondiscrete (class in trieste.acquisition)": [[9, "trieste.acquisition.UpdatableTrustRegionDiscrete"]], "updatabletrustregionproduct (class in trieste.acquisition)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct"]], "vectorizedacquisitionfunctionbuilder (class in trieste.acquisition)": [[9, "trieste.acquisition.VectorizedAcquisitionFunctionBuilder"]], "__call__() (acquisitionfunctionclass method)": [[9, "trieste.acquisition.AcquisitionFunctionClass.__call__"], [10, "trieste.acquisition.interface.AcquisitionFunctionClass.__call__"]], "__call__() (updatablepenalizationfunction method)": [[9, "trieste.acquisition.UpdatablePenalizationFunction.__call__"], [10, "trieste.acquisition.interface.UpdatablePenalizationFunction.__call__"]], "_find_non_dominated_points() (batchhypervolumesharperatioindicator method)": [[9, "trieste.acquisition.BatchHypervolumeSharpeRatioIndicator._find_non_dominated_points"], [16, "trieste.acquisition.rule.BatchHypervolumeSharpeRatioIndicator._find_non_dominated_points"]], "_init_location() (updatabletrustregion method)": [[9, "trieste.acquisition.UpdatableTrustRegion._init_location"], [16, "trieste.acquisition.rule.UpdatableTrustRegion._init_location"]], "_update_domain() (hypercubetrustregion method)": [[9, "trieste.acquisition.HypercubeTrustRegion._update_domain"], [16, "trieste.acquisition.rule.HypercubeTrustRegion._update_domain"]], "_update_domain() (singleobjectivetrustregionbox method)": [[9, "trieste.acquisition.SingleObjectiveTrustRegionBox._update_domain"], [16, "trieste.acquisition.rule.SingleObjectiveTrustRegionBox._update_domain"]], "_update_domain() (singleobjectivetrustregiondiscrete method)": [[9, "trieste.acquisition.SingleObjectiveTrustRegionDiscrete._update_domain"], [16, "trieste.acquisition.rule.SingleObjectiveTrustRegionDiscrete._update_domain"]], "_update_domain() (tregobox method)": [[9, "trieste.acquisition.TREGOBox._update_domain"], [16, "trieste.acquisition.rule.TREGOBox._update_domain"]], "acquire() (acquisitionrule method)": [[9, "trieste.acquisition.AcquisitionRule.acquire"], [16, "trieste.acquisition.rule.AcquisitionRule.acquire"]], "acquire() (asynchronousgreedy method)": [[9, "trieste.acquisition.AsynchronousGreedy.acquire"], [16, "trieste.acquisition.rule.AsynchronousGreedy.acquire"]], "acquire() (asynchronousoptimization method)": [[9, "trieste.acquisition.AsynchronousOptimization.acquire"], [16, "trieste.acquisition.rule.AsynchronousOptimization.acquire"]], "acquire() (batchhypervolumesharperatioindicator method)": [[9, "trieste.acquisition.BatchHypervolumeSharpeRatioIndicator.acquire"], [16, "trieste.acquisition.rule.BatchHypervolumeSharpeRatioIndicator.acquire"]], "acquire() (batchtrustregion method)": [[9, "trieste.acquisition.BatchTrustRegion.acquire"], [16, "trieste.acquisition.rule.BatchTrustRegion.acquire"]], "acquire() (batchtrustregionbox method)": [[9, "trieste.acquisition.BatchTrustRegionBox.acquire"], [16, "trieste.acquisition.rule.BatchTrustRegionBox.acquire"]], "acquire() (batchtrustregionproduct method)": [[9, "trieste.acquisition.BatchTrustRegionProduct.acquire"], [16, "trieste.acquisition.rule.BatchTrustRegionProduct.acquire"]], "acquire() (discretethompsonsampling method)": [[9, "trieste.acquisition.DiscreteThompsonSampling.acquire"], [16, "trieste.acquisition.rule.DiscreteThompsonSampling.acquire"]], "acquire() (efficientglobaloptimization method)": [[9, "trieste.acquisition.EfficientGlobalOptimization.acquire"], [16, "trieste.acquisition.rule.EfficientGlobalOptimization.acquire"]], "acquire() (randomsampling method)": [[9, "trieste.acquisition.RandomSampling.acquire"], [16, "trieste.acquisition.rule.RandomSampling.acquire"]], "acquire_single() (acquisitionrule method)": [[9, "trieste.acquisition.AcquisitionRule.acquire_single"], [16, "trieste.acquisition.rule.AcquisitionRule.acquire_single"]], "acquisition_function (efficientglobaloptimization property)": [[9, "trieste.acquisition.EfficientGlobalOptimization.acquisition_function"], [16, "trieste.acquisition.rule.EfficientGlobalOptimization.acquisition_function"]], "augmented_expected_improvement (class in trieste.acquisition)": [[9, "trieste.acquisition.augmented_expected_improvement"]], "batch_ehvi() (in module trieste.acquisition)": [[9, "trieste.acquisition.batch_ehvi"]], "batch_expected_improvement (class in trieste.acquisition)": [[9, "trieste.acquisition.batch_expected_improvement"]], "bayesian_active_learning_by_disagreement (class in trieste.acquisition)": [[9, "trieste.acquisition.bayesian_active_learning_by_disagreement"]], "bichon_ranjan_criterion() (in module trieste.acquisition)": [[9, "trieste.acquisition.bichon_ranjan_criterion"]], "eps (tregobox property)": [[9, "trieste.acquisition.TREGOBox.eps"], [16, "trieste.acquisition.rule.TREGOBox.eps"]], "expected_hv_improvement (class in trieste.acquisition)": [[9, "trieste.acquisition.expected_hv_improvement"]], "expected_improvement (class in trieste.acquisition)": [[9, "trieste.acquisition.expected_improvement"]], "fast_constraints_feasibility() (in module trieste.acquisition)": [[9, "trieste.acquisition.fast_constraints_feasibility"]], "filter_datasets() (acquisitionrule method)": [[9, "trieste.acquisition.AcquisitionRule.filter_datasets"], [16, "trieste.acquisition.rule.AcquisitionRule.filter_datasets"]], "filter_datasets() (batchtrustregion method)": [[9, "trieste.acquisition.BatchTrustRegion.filter_datasets"], [16, "trieste.acquisition.rule.BatchTrustRegion.filter_datasets"]], "get_dataset_min() (hypercubetrustregion method)": [[9, "trieste.acquisition.HypercubeTrustRegion.get_dataset_min"], [16, "trieste.acquisition.rule.HypercubeTrustRegion.get_dataset_min"]], "get_dataset_min() (tregobox method)": [[9, "trieste.acquisition.TREGOBox.get_dataset_min"], [16, "trieste.acquisition.rule.TREGOBox.get_dataset_min"]], "get_dataset_min() (turbobox method)": [[9, "trieste.acquisition.TURBOBox.get_dataset_min"], [16, "trieste.acquisition.rule.TURBOBox.get_dataset_min"]], "get_datasets_filter_mask() (tregobox method)": [[9, "trieste.acquisition.TREGOBox.get_datasets_filter_mask"], [16, "trieste.acquisition.rule.TREGOBox.get_datasets_filter_mask"]], "get_datasets_filter_mask() (updatabletrustregion method)": [[9, "trieste.acquisition.UpdatableTrustRegion.get_datasets_filter_mask"], [16, "trieste.acquisition.rule.UpdatableTrustRegion.get_datasets_filter_mask"]], "get_datasets_filter_mask() (updatabletrustregionproduct method)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct.get_datasets_filter_mask"], [16, "trieste.acquisition.rule.UpdatableTrustRegionProduct.get_datasets_filter_mask"]], "get_initialize_subspaces_mask() (batchtrustregion method)": [[9, "trieste.acquisition.BatchTrustRegion.get_initialize_subspaces_mask"], [16, "trieste.acquisition.rule.BatchTrustRegion.get_initialize_subspaces_mask"]], "get_initialize_subspaces_mask() (batchtrustregionbox method)": [[9, "trieste.acquisition.BatchTrustRegionBox.get_initialize_subspaces_mask"], [16, "trieste.acquisition.rule.BatchTrustRegionBox.get_initialize_subspaces_mask"]], "get_initialize_subspaces_mask() (batchtrustregionproduct method)": [[9, "trieste.acquisition.BatchTrustRegionProduct.get_initialize_subspaces_mask"], [16, "trieste.acquisition.rule.BatchTrustRegionProduct.get_initialize_subspaces_mask"]], "get_values_min() (hypercubetrustregion method)": [[9, "trieste.acquisition.HypercubeTrustRegion.get_values_min"], [16, "trieste.acquisition.rule.HypercubeTrustRegion.get_values_min"]], "gibbon_quality_term (class in trieste.acquisition)": [[9, "trieste.acquisition.gibbon_quality_term"]], "gibbon_repulsion_term (class in trieste.acquisition)": [[9, "trieste.acquisition.gibbon_repulsion_term"]], "global_search_space (updatabletrustregion property)": [[9, "trieste.acquisition.UpdatableTrustRegion.global_search_space"], [16, "trieste.acquisition.rule.UpdatableTrustRegion.global_search_space"]], "global_search_space (updatabletrustregionbox property)": [[9, "trieste.acquisition.UpdatableTrustRegionBox.global_search_space"], [16, "trieste.acquisition.rule.UpdatableTrustRegionBox.global_search_space"]], "global_search_space (updatabletrustregiondiscrete property)": [[9, "trieste.acquisition.UpdatableTrustRegionDiscrete.global_search_space"], [16, "trieste.acquisition.rule.UpdatableTrustRegionDiscrete.global_search_space"]], "global_search_space (updatabletrustregionproduct property)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct.global_search_space"], [16, "trieste.acquisition.rule.UpdatableTrustRegionProduct.global_search_space"]], "hard_local_penalizer (class in trieste.acquisition)": [[9, "trieste.acquisition.hard_local_penalizer"]], "initialize() (fixedpointtrustregiondiscrete method)": [[9, "trieste.acquisition.FixedPointTrustRegionDiscrete.initialize"], [16, "trieste.acquisition.rule.FixedPointTrustRegionDiscrete.initialize"]], "initialize() (hypercubetrustregion method)": [[9, "trieste.acquisition.HypercubeTrustRegion.initialize"], [16, "trieste.acquisition.rule.HypercubeTrustRegion.initialize"]], "initialize() (tregobox method)": [[9, "trieste.acquisition.TREGOBox.initialize"], [16, "trieste.acquisition.rule.TREGOBox.initialize"]], "initialize() (turbobox method)": [[9, "trieste.acquisition.TURBOBox.initialize"], [16, "trieste.acquisition.rule.TURBOBox.initialize"]], "initialize() (updatablesearchspace method)": [[9, "trieste.acquisition.UpdatableSearchSpace.initialize"], [16, "trieste.acquisition.rule.UpdatableSearchSpace.initialize"]], "initialize() (updatabletrustregionproduct method)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct.initialize"], [16, "trieste.acquisition.rule.UpdatableTrustRegionProduct.initialize"]], "initialize_subspaces() (batchtrustregionbox method)": [[9, "trieste.acquisition.BatchTrustRegionBox.initialize_subspaces"], [16, "trieste.acquisition.rule.BatchTrustRegionBox.initialize_subspaces"]], "initialize_subspaces() (batchtrustregionproduct method)": [[9, "trieste.acquisition.BatchTrustRegionProduct.initialize_subspaces"], [16, "trieste.acquisition.rule.BatchTrustRegionProduct.initialize_subspaces"]], "initialize_subspaces() (localdatasetsacquisitionrule method)": [[9, "trieste.acquisition.LocalDatasetsAcquisitionRule.initialize_subspaces"], [16, "trieste.acquisition.rule.LocalDatasetsAcquisitionRule.initialize_subspaces"]], "integrated_variance_reduction (class in trieste.acquisition)": [[9, "trieste.acquisition.integrated_variance_reduction"]], "location (updatabletrustregion property)": [[9, "trieste.acquisition.UpdatableTrustRegion.location"], [16, "trieste.acquisition.rule.UpdatableTrustRegion.location"]], "location (updatabletrustregionbox property)": [[9, "trieste.acquisition.UpdatableTrustRegionBox.location"], [16, "trieste.acquisition.rule.UpdatableTrustRegionBox.location"]], "location (updatabletrustregiondiscrete property)": [[9, "trieste.acquisition.UpdatableTrustRegionDiscrete.location"], [16, "trieste.acquisition.rule.UpdatableTrustRegionDiscrete.location"]], "location (updatabletrustregionproduct property)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct.location"], [16, "trieste.acquisition.rule.UpdatableTrustRegionProduct.location"]], "lower_confidence_bound() (in module trieste.acquisition)": [[9, "trieste.acquisition.lower_confidence_bound"]], "maybe_initialize_subspaces() (batchtrustregion method)": [[9, "trieste.acquisition.BatchTrustRegion.maybe_initialize_subspaces"], [16, "trieste.acquisition.rule.BatchTrustRegion.maybe_initialize_subspaces"]], "min_value_entropy_search (class in trieste.acquisition)": [[9, "trieste.acquisition.min_value_entropy_search"]], "multiple_optimism_lower_confidence_bound (class in trieste.acquisition)": [[9, "trieste.acquisition.multiple_optimism_lower_confidence_bound"]], "num_local_datasets (batchtrustregion property)": [[9, "trieste.acquisition.BatchTrustRegion.num_local_datasets"], [16, "trieste.acquisition.rule.BatchTrustRegion.num_local_datasets"]], "num_local_datasets (localdatasetsacquisitionrule property)": [[9, "trieste.acquisition.LocalDatasetsAcquisitionRule.num_local_datasets"], [16, "trieste.acquisition.rule.LocalDatasetsAcquisitionRule.num_local_datasets"]], "predictive_variance() (in module trieste.acquisition)": [[9, "trieste.acquisition.predictive_variance"]], "prepare_acquisition_function() (acquisitionfunctionbuilder method)": [[9, "trieste.acquisition.AcquisitionFunctionBuilder.prepare_acquisition_function"], [10, "trieste.acquisition.interface.AcquisitionFunctionBuilder.prepare_acquisition_function"]], "prepare_acquisition_function() (greedyacquisitionfunctionbuilder method)": [[9, "trieste.acquisition.GreedyAcquisitionFunctionBuilder.prepare_acquisition_function"], [10, "trieste.acquisition.interface.GreedyAcquisitionFunctionBuilder.prepare_acquisition_function"]], "prepare_acquisition_function() (singlemodelacquisitionbuilder method)": [[9, "trieste.acquisition.SingleModelAcquisitionBuilder.prepare_acquisition_function"], [10, "trieste.acquisition.interface.SingleModelAcquisitionBuilder.prepare_acquisition_function"]], "prepare_acquisition_function() (singlemodelgreedyacquisitionbuilder method)": [[9, "trieste.acquisition.SingleModelGreedyAcquisitionBuilder.prepare_acquisition_function"], [10, "trieste.acquisition.interface.SingleModelGreedyAcquisitionBuilder.prepare_acquisition_function"]], "probability_below_threshold (class in trieste.acquisition)": [[9, "trieste.acquisition.probability_below_threshold"]], "region_index (updatabletrustregionproduct property)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct.region_index"], [16, "trieste.acquisition.rule.UpdatableTrustRegionProduct.region_index"]], "regions (updatabletrustregionproduct property)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct.regions"], [16, "trieste.acquisition.rule.UpdatableTrustRegionProduct.regions"]], "requires_initialization (hypercubetrustregion property)": [[9, "trieste.acquisition.HypercubeTrustRegion.requires_initialization"], [16, "trieste.acquisition.rule.HypercubeTrustRegion.requires_initialization"]], "requires_initialization (updatablesearchspace property)": [[9, "trieste.acquisition.UpdatableSearchSpace.requires_initialization"], [16, "trieste.acquisition.rule.UpdatableSearchSpace.requires_initialization"]], "requires_initialization (updatabletrustregionproduct property)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct.requires_initialization"], [16, "trieste.acquisition.rule.UpdatableTrustRegionProduct.requires_initialization"]], "sample() (exactthompsonsampler method)": [[9, "trieste.acquisition.ExactThompsonSampler.sample"], [17, "trieste.acquisition.sampler.ExactThompsonSampler.sample"]], "sample() (gumbelsampler method)": [[9, "trieste.acquisition.GumbelSampler.sample"], [17, "trieste.acquisition.sampler.GumbelSampler.sample"]], "sample() (thompsonsampler method)": [[9, "trieste.acquisition.ThompsonSampler.sample"], [17, "trieste.acquisition.sampler.ThompsonSampler.sample"]], "sample() (thompsonsamplerfromtrajectory method)": [[9, "trieste.acquisition.ThompsonSamplerFromTrajectory.sample"], [17, "trieste.acquisition.sampler.ThompsonSamplerFromTrajectory.sample"]], "sample_min_value (thompsonsampler property)": [[9, "trieste.acquisition.ThompsonSampler.sample_min_value"], [17, "trieste.acquisition.sampler.ThompsonSampler.sample_min_value"]], "select_in_region() (updatabletrustregion method)": [[9, "trieste.acquisition.UpdatableTrustRegion.select_in_region"], [16, "trieste.acquisition.rule.UpdatableTrustRegion.select_in_region"]], "soft_local_penalizer (class in trieste.acquisition)": [[9, "trieste.acquisition.soft_local_penalizer"]], "trieste.acquisition": [[9, "module-trieste.acquisition"]], "update() (fixedpointtrustregiondiscrete method)": [[9, "trieste.acquisition.FixedPointTrustRegionDiscrete.update"], [16, "trieste.acquisition.rule.FixedPointTrustRegionDiscrete.update"]], "update() (hypercubetrustregion method)": [[9, "trieste.acquisition.HypercubeTrustRegion.update"], [16, "trieste.acquisition.rule.HypercubeTrustRegion.update"]], "update() (turbobox method)": [[9, "trieste.acquisition.TURBOBox.update"], [16, "trieste.acquisition.rule.TURBOBox.update"]], "update() (updatablepenalizationfunction method)": [[9, "trieste.acquisition.UpdatablePenalizationFunction.update"], [10, "trieste.acquisition.interface.UpdatablePenalizationFunction.update"]], "update() (updatablesearchspace method)": [[9, "trieste.acquisition.UpdatableSearchSpace.update"], [16, "trieste.acquisition.rule.UpdatableSearchSpace.update"]], "update() (updatabletrustregionproduct method)": [[9, "trieste.acquisition.UpdatableTrustRegionProduct.update"], [16, "trieste.acquisition.rule.UpdatableTrustRegionProduct.update"]], "update_acquisition_function() (acquisitionfunctionbuilder method)": [[9, "trieste.acquisition.AcquisitionFunctionBuilder.update_acquisition_function"], [10, "trieste.acquisition.interface.AcquisitionFunctionBuilder.update_acquisition_function"]], "update_acquisition_function() (greedyacquisitionfunctionbuilder method)": [[9, "trieste.acquisition.GreedyAcquisitionFunctionBuilder.update_acquisition_function"], [10, "trieste.acquisition.interface.GreedyAcquisitionFunctionBuilder.update_acquisition_function"]], "update_acquisition_function() (singlemodelacquisitionbuilder method)": [[9, "trieste.acquisition.SingleModelAcquisitionBuilder.update_acquisition_function"], [10, "trieste.acquisition.interface.SingleModelAcquisitionBuilder.update_acquisition_function"]], "update_acquisition_function() (singlemodelgreedyacquisitionbuilder method)": [[9, "trieste.acquisition.SingleModelGreedyAcquisitionBuilder.update_acquisition_function"], [10, "trieste.acquisition.interface.SingleModelGreedyAcquisitionBuilder.update_acquisition_function"]], "using() (singlemodelacquisitionbuilder method)": [[9, "trieste.acquisition.SingleModelAcquisitionBuilder.using"], [10, "trieste.acquisition.interface.SingleModelAcquisitionBuilder.using"]], "using() (singlemodelgreedyacquisitionbuilder method)": [[9, "trieste.acquisition.SingleModelGreedyAcquisitionBuilder.using"], [10, "trieste.acquisition.interface.SingleModelGreedyAcquisitionBuilder.using"]], "using() (singlemodelvectorizedacquisitionbuilder method)": [[9, "trieste.acquisition.SingleModelVectorizedAcquisitionBuilder.using"], [10, "trieste.acquisition.interface.SingleModelVectorizedAcquisitionBuilder.using"]], "with_input_active_dims() (updatabletrustregion method)": [[9, "trieste.acquisition.UpdatableTrustRegion.with_input_active_dims"], [16, "trieste.acquisition.rule.UpdatableTrustRegion.with_input_active_dims"]], "acquisitionfunction (in module trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.AcquisitionFunction"]], "acquisitionfunctionbuilder (class in trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.AcquisitionFunctionBuilder"]], "acquisitionfunctionclass (class in trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.AcquisitionFunctionClass"]], "greedyacquisitionfunctionbuilder (class in trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.GreedyAcquisitionFunctionBuilder"]], "penalizationfunction (in module trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.PenalizationFunction"]], "singlemodelacquisitionbuilder (class in trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.SingleModelAcquisitionBuilder"]], "singlemodelgreedyacquisitionbuilder (class in trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.SingleModelGreedyAcquisitionBuilder"]], "singlemodelvectorizedacquisitionbuilder (class in trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.SingleModelVectorizedAcquisitionBuilder"]], "updatablepenalizationfunction (class in trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.UpdatablePenalizationFunction"]], "vectorizedacquisitionfunctionbuilder (class in trieste.acquisition.interface)": [[10, "trieste.acquisition.interface.VectorizedAcquisitionFunctionBuilder"]], "trieste.acquisition.interface": [[10, "module-trieste.acquisition.interface"]], "non_dominated() (in module trieste.acquisition.multi_objective.dominance)": [[11, "trieste.acquisition.multi_objective.dominance.non_dominated"]], "trieste.acquisition.multi_objective.dominance": [[11, "module-trieste.acquisition.multi_objective.dominance"]], "dividedandconquernondominated (class in trieste.acquisition.multi_objective)": [[12, "trieste.acquisition.multi_objective.DividedAndConquerNonDominated"]], "exactpartition2dnondominated (class in trieste.acquisition.multi_objective)": [[12, "trieste.acquisition.multi_objective.ExactPartition2dNonDominated"]], "pareto (class in trieste.acquisition.multi_objective)": [[12, "trieste.acquisition.multi_objective.Pareto"]], "get_reference_point() (in module trieste.acquisition.multi_objective)": [[12, "trieste.acquisition.multi_objective.get_reference_point"]], "hypervolume_indicator() (pareto method)": [[12, "trieste.acquisition.multi_objective.Pareto.hypervolume_indicator"], [13, "trieste.acquisition.multi_objective.pareto.Pareto.hypervolume_indicator"]], "non_dominated() (in module trieste.acquisition.multi_objective)": [[12, "trieste.acquisition.multi_objective.non_dominated"]], "prepare_default_non_dominated_partition_bounds() (in module trieste.acquisition.multi_objective)": [[12, "trieste.acquisition.multi_objective.prepare_default_non_dominated_partition_bounds"]], "sample_diverse_subset() (pareto method)": [[12, "trieste.acquisition.multi_objective.Pareto.sample_diverse_subset"], [13, "trieste.acquisition.multi_objective.pareto.Pareto.sample_diverse_subset"]], "trieste.acquisition.multi_objective": [[12, "module-trieste.acquisition.multi_objective"]], "pareto (class in trieste.acquisition.multi_objective.pareto)": [[13, "trieste.acquisition.multi_objective.pareto.Pareto"]], "get_reference_point() (in module trieste.acquisition.multi_objective.pareto)": [[13, "trieste.acquisition.multi_objective.pareto.get_reference_point"]], "trieste.acquisition.multi_objective.pareto": [[13, "module-trieste.acquisition.multi_objective.pareto"]], "dividedandconquernondominated (class in trieste.acquisition.multi_objective.partition)": [[14, "trieste.acquisition.multi_objective.partition.DividedAndConquerNonDominated"]], "exactpartition2dnondominated (class in trieste.acquisition.multi_objective.partition)": [[14, "trieste.acquisition.multi_objective.partition.ExactPartition2dNonDominated"]], "_boundindexpartition (class in trieste.acquisition.multi_objective.partition)": [[14, "trieste.acquisition.multi_objective.partition._BoundIndexPartition"]], "partition_bounds() (_boundindexpartition method)": [[14, "trieste.acquisition.multi_objective.partition._BoundIndexPartition.partition_bounds"]], "prepare_default_non_dominated_partition_bounds() (in module trieste.acquisition.multi_objective.partition)": [[14, "trieste.acquisition.multi_objective.partition.prepare_default_non_dominated_partition_bounds"]], "trieste.acquisition.multi_objective.partition": [[14, "module-trieste.acquisition.multi_objective.partition"]], "acquisitionoptimizer (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.AcquisitionOptimizer"]], "failedoptimizationerror": [[15, "trieste.acquisition.optimizer.FailedOptimizationError"]], "initialpointsampler (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.InitialPointSampler"]], "num_runs_dim (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.NUM_RUNS_DIM"]], "num_samples_dim (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.NUM_SAMPLES_DIM"]], "num_samples_min (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.NUM_SAMPLES_MIN"]], "scipyoptimizergreenlet (class in trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.ScipyOptimizerGreenlet"]], "_perform_parallel_continuous_optimization() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer._perform_parallel_continuous_optimization"]], "automatic_optimizer_selector() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.automatic_optimizer_selector"]], "batchify_joint() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.batchify_joint"]], "batchify_vectorize() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.batchify_vectorize"]], "generate_continuous_optimizer() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.generate_continuous_optimizer"]], "generate_initial_points() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.generate_initial_points"]], "generate_random_search_optimizer() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.generate_random_search_optimizer"]], "get_bounds_of_box_relaxation_around_point() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.get_bounds_of_box_relaxation_around_point"]], "get_bounds_of_optimization() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.get_bounds_of_optimization"]], "optimize_discrete() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.optimize_discrete"]], "run() (scipyoptimizergreenlet method)": [[15, "trieste.acquisition.optimizer.ScipyOptimizerGreenlet.run"]], "sample_from_space() (in module trieste.acquisition.optimizer)": [[15, "trieste.acquisition.optimizer.sample_from_space"]], "trieste.acquisition.optimizer": [[15, "module-trieste.acquisition.optimizer"]], "acquisitionrule (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.AcquisitionRule"]], "asynchronousgreedy (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.AsynchronousGreedy"]], "asynchronousoptimization (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.AsynchronousOptimization"]], "asynchronousrulestate (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.AsynchronousRuleState"]], "batchhypervolumesharperatioindicator (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.BatchHypervolumeSharpeRatioIndicator"]], "batchtrustregion (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.BatchTrustRegion"]], "batchtrustregionbox (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.BatchTrustRegionBox"]], "batchtrustregionproduct (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.BatchTrustRegionProduct"]], "batchtrustregionstate (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.BatchTrustRegionState"]], "discretethompsonsampling (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.DiscreteThompsonSampling"]], "efficientglobaloptimization (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.EfficientGlobalOptimization"]], "fixedpointtrustregiondiscrete (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.FixedPointTrustRegionDiscrete"]], "hypercubetrustregion (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.HypercubeTrustRegion"]], "localdatasetsacquisitionrule (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.LocalDatasetsAcquisitionRule"]], "randomsampling (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.RandomSampling"]], "resulttype (in module trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.ResultType"]], "searchspacetype (in module trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.SearchSpaceType"]], "singleobjectivetrustregionbox (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.SingleObjectiveTrustRegionBox"]], "singleobjectivetrustregiondiscrete (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.SingleObjectiveTrustRegionDiscrete"]], "t (in module trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.T"]], "tregobox (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.TREGOBox"]], "turbobox (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.TURBOBox"]], "updatablesearchspace (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.UpdatableSearchSpace"]], "updatabletrustregion (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.UpdatableTrustRegion"]], "updatabletrustregionbox (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.UpdatableTrustRegionBox"]], "updatabletrustregiondiscrete (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.UpdatableTrustRegionDiscrete"]], "updatabletrustregionproduct (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.UpdatableTrustRegionProduct"]], "updatabletrustregiontype (in module trieste.acquisition.rule)": [[16, "trieste.acquisition.rule.UpdatableTrustRegionType"]], "_meanstdtradeoff (class in trieste.acquisition.rule)": [[16, "trieste.acquisition.rule._MeanStdTradeoff"]], "acquisition_space (batchtrustregionstate property)": [[16, "trieste.acquisition.rule.BatchTrustRegionState.acquisition_space"]], "add_pending_points() (asynchronousrulestate method)": [[16, "trieste.acquisition.rule.AsynchronousRuleState.add_pending_points"]], "has_pending_points (asynchronousrulestate property)": [[16, "trieste.acquisition.rule.AsynchronousRuleState.has_pending_points"]], "remove_points() (asynchronousrulestate method)": [[16, "trieste.acquisition.rule.AsynchronousRuleState.remove_points"]], "subspace_tags (batchtrustregionstate attribute)": [[16, "trieste.acquisition.rule.BatchTrustRegionState.subspace_tags"]], "subspaces (batchtrustregionstate attribute)": [[16, "trieste.acquisition.rule.BatchTrustRegionState.subspaces"]], "trieste.acquisition.rule": [[16, "module-trieste.acquisition.rule"]], "exactthompsonsampler (class in trieste.acquisition.sampler)": [[17, "trieste.acquisition.sampler.ExactThompsonSampler"]], "gumbelsampler (class in trieste.acquisition.sampler)": [[17, "trieste.acquisition.sampler.GumbelSampler"]], "thompsonsampler (class in trieste.acquisition.sampler)": [[17, "trieste.acquisition.sampler.ThompsonSampler"]], "thompsonsamplerfromtrajectory (class in trieste.acquisition.sampler)": [[17, "trieste.acquisition.sampler.ThompsonSamplerFromTrajectory"]], "trieste.acquisition.sampler": [[17, "module-trieste.acquisition.sampler"]], "copy_to_local_models() (in module trieste.acquisition.utils)": [[18, "trieste.acquisition.utils.copy_to_local_models"]], "get_local_dataset() (in module trieste.acquisition.utils)": [[18, "trieste.acquisition.utils.get_local_dataset"]], "get_unique_points_mask() (in module trieste.acquisition.utils)": [[18, "trieste.acquisition.utils.get_unique_points_mask"]], "select_nth_output() (in module trieste.acquisition.utils)": [[18, "trieste.acquisition.utils.select_nth_output"]], "split_acquisition_function() (in module trieste.acquisition.utils)": [[18, "trieste.acquisition.utils.split_acquisition_function"]], "split_acquisition_function_calls() (in module trieste.acquisition.utils)": [[18, "trieste.acquisition.utils.split_acquisition_function_calls"]], "trieste.acquisition.utils": [[18, "module-trieste.acquisition.utils"]], "with_local_datasets() (in module trieste.acquisition.utils)": [[18, "trieste.acquisition.utils.with_local_datasets"]], "asktelloptimizer (class in trieste.ask_tell_optimization)": [[19, "trieste.ask_tell_optimization.AskTellOptimizer"]], "asktelloptimizerabc (class in trieste.ask_tell_optimization)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC"]], "asktelloptimizernotraining (class in trieste.ask_tell_optimization)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerNoTraining"]], "asktelloptimizerstate (class in trieste.ask_tell_optimization)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerState"]], "probabilisticmodeltype (in module trieste.ask_tell_optimization)": [[19, "trieste.ask_tell_optimization.ProbabilisticModelType"]], "searchspacetype (in module trieste.ask_tell_optimization)": [[19, "trieste.ask_tell_optimization.SearchSpaceType"]], "statetype (in module trieste.ask_tell_optimization)": [[19, "trieste.ask_tell_optimization.StateType"]], "trainableprobabilisticmodeltype (in module trieste.ask_tell_optimization)": [[19, "trieste.ask_tell_optimization.TrainableProbabilisticModelType"]], "__repr__() (asktelloptimizerabc method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.__repr__"]], "acquisition_state (asktelloptimizerabc property)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.acquisition_state"]], "ask() (asktelloptimizerabc method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.ask"]], "dataset (asktelloptimizerabc property)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.dataset"]], "dataset_len() (asktelloptimizerabc class method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.dataset_len"]], "datasets (asktelloptimizerabc property)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.datasets"]], "from_record() (asktelloptimizerabc class method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.from_record"]], "from_state() (asktelloptimizerabc class method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.from_state"]], "local_data_ixs (asktelloptimizerabc property)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.local_data_ixs"]], "local_data_ixs (asktelloptimizerstate attribute)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerState.local_data_ixs"]], "local_data_len (asktelloptimizerabc property)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.local_data_len"]], "local_data_len (asktelloptimizerstate attribute)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerState.local_data_len"]], "model (asktelloptimizerabc property)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.model"]], "models (asktelloptimizerabc property)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.models"]], "record (asktelloptimizerstate attribute)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerState.record"]], "tell() (asktelloptimizerabc method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.tell"]], "to_record() (asktelloptimizerabc method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.to_record"]], "to_result() (asktelloptimizerabc method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.to_result"]], "to_state() (asktelloptimizerabc method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.to_state"]], "trieste.ask_tell_optimization": [[19, "module-trieste.ask_tell_optimization"]], "update_model() (asktelloptimizer method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizer.update_model"]], "update_model() (asktelloptimizerabc method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerABC.update_model"]], "update_model() (asktelloptimizernotraining method)": [[19, "trieste.ask_tell_optimization.AskTellOptimizerNoTraining.update_model"]], "bayesianoptimizer (class in trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.BayesianOptimizer"]], "earlystopcallback (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.EarlyStopCallback"]], "frozenrecord (class in trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.FrozenRecord"]], "optimizationresult (class in trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.OptimizationResult"]], "probabilisticmodeltype (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.ProbabilisticModelType"]], "record (class in trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.Record"]], "searchspacetype (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.SearchSpaceType"]], "statetype (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.StateType"]], "trainableprobabilisticmodeltype (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.TrainableProbabilisticModelType"]], "acquisition_state (frozenrecord property)": [[20, "trieste.bayesian_optimizer.FrozenRecord.acquisition_state"]], "acquisition_state (record attribute)": [[20, "trieste.bayesian_optimizer.Record.acquisition_state"]], "astuple() (optimizationresult method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.astuple"]], "continue_optimization() (bayesianoptimizer method)": [[20, "trieste.bayesian_optimizer.BayesianOptimizer.continue_optimization"]], "dataset (frozenrecord property)": [[20, "trieste.bayesian_optimizer.FrozenRecord.dataset"]], "dataset (record property)": [[20, "trieste.bayesian_optimizer.Record.dataset"]], "datasets (frozenrecord property)": [[20, "trieste.bayesian_optimizer.FrozenRecord.datasets"]], "datasets (record attribute)": [[20, "trieste.bayesian_optimizer.Record.datasets"]], "final_result (optimizationresult attribute)": [[20, "trieste.bayesian_optimizer.OptimizationResult.final_result"]], "from_path() (optimizationresult class method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.from_path"]], "history (optimizationresult attribute)": [[20, "trieste.bayesian_optimizer.OptimizationResult.history"]], "is_err (optimizationresult property)": [[20, "trieste.bayesian_optimizer.OptimizationResult.is_err"]], "is_ok (optimizationresult property)": [[20, "trieste.bayesian_optimizer.OptimizationResult.is_ok"]], "load() (frozenrecord method)": [[20, "trieste.bayesian_optimizer.FrozenRecord.load"]], "loaded_history (optimizationresult property)": [[20, "trieste.bayesian_optimizer.OptimizationResult.loaded_history"]], "model (frozenrecord property)": [[20, "trieste.bayesian_optimizer.FrozenRecord.model"]], "model (record property)": [[20, "trieste.bayesian_optimizer.Record.model"]], "models (frozenrecord property)": [[20, "trieste.bayesian_optimizer.FrozenRecord.models"]], "models (record attribute)": [[20, "trieste.bayesian_optimizer.Record.models"]], "observation_plot_init() (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.observation_plot_init"]], "optimize() (bayesianoptimizer method)": [[20, "trieste.bayesian_optimizer.BayesianOptimizer.optimize"]], "path (frozenrecord attribute)": [[20, "trieste.bayesian_optimizer.FrozenRecord.path"]], "save() (optimizationresult method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.save"]], "save() (record method)": [[20, "trieste.bayesian_optimizer.Record.save"]], "save_result() (optimizationresult method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.save_result"]], "step_filename() (optimizationresult static method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.step_filename"]], "stop_at_minimum() (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.stop_at_minimum"]], "trieste.bayesian_optimizer": [[20, "module-trieste.bayesian_optimizer"]], "try_get_final_dataset() (optimizationresult method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.try_get_final_dataset"]], "try_get_final_datasets() (optimizationresult method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.try_get_final_datasets"]], "try_get_final_model() (optimizationresult method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.try_get_final_model"]], "try_get_final_models() (optimizationresult method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.try_get_final_models"]], "try_get_optimal_point() (optimizationresult method)": [[20, "trieste.bayesian_optimizer.OptimizationResult.try_get_optimal_point"]], "write_summary_init() (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.write_summary_init"]], "write_summary_initial_model_fit() (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.write_summary_initial_model_fit"]], "write_summary_observations() (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.write_summary_observations"]], "write_summary_query_points() (in module trieste.bayesian_optimizer)": [[20, "trieste.bayesian_optimizer.write_summary_query_points"]], "dataset (class in trieste.data)": [[21, "trieste.data.Dataset"]], "__add__() (dataset method)": [[21, "trieste.data.Dataset.__add__"]], "__len__() (dataset method)": [[21, "trieste.data.Dataset.__len__"]], "__post_init__() (dataset method)": [[21, "trieste.data.Dataset.__post_init__"]], "add_fidelity_column() (in module trieste.data)": [[21, "trieste.data.add_fidelity_column"]], "astuple() (dataset method)": [[21, "trieste.data.Dataset.astuple"]], "check_and_extract_fidelity_query_points() (in module trieste.data)": [[21, "trieste.data.check_and_extract_fidelity_query_points"]], "get_dataset_for_fidelity() (in module trieste.data)": [[21, "trieste.data.get_dataset_for_fidelity"]], "observations (dataset attribute)": [[21, "trieste.data.Dataset.observations"]], "query_points (dataset attribute)": [[21, "trieste.data.Dataset.query_points"]], "split_dataset_by_fidelity() (in module trieste.data)": [[21, "trieste.data.split_dataset_by_fidelity"]], "trieste.data": [[21, "module-trieste.data"]], "trieste.experimental": [[22, "module-trieste.experimental"]], "trieste.experimental.plotting": [[23, "module-trieste.experimental.plotting"]], "simulation (class in trieste.experimental.plotting.inequality_constraints)": [[24, "trieste.experimental.plotting.inequality_constraints.Simulation"]], "constraint() (simulation static method)": [[24, "trieste.experimental.plotting.inequality_constraints.Simulation.constraint"]], "objective() (simulation static method)": [[24, "trieste.experimental.plotting.inequality_constraints.Simulation.objective"]], "plot_2obj_cst_query_points() (in module trieste.experimental.plotting.inequality_constraints)": [[24, "trieste.experimental.plotting.inequality_constraints.plot_2obj_cst_query_points"]], "plot_init_query_points() (in module trieste.experimental.plotting.inequality_constraints)": [[24, "trieste.experimental.plotting.inequality_constraints.plot_init_query_points"]], "plot_objective_and_constraints() (in module trieste.experimental.plotting.inequality_constraints)": [[24, "trieste.experimental.plotting.inequality_constraints.plot_objective_and_constraints"]], "trieste.experimental.plotting.inequality_constraints": [[24, "module-trieste.experimental.plotting.inequality_constraints"]], "convert_figure_to_frame() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.convert_figure_to_frame"]], "convert_frames_to_gif() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.convert_frames_to_gif"]], "create_grid() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.create_grid"]], "format_point_markers() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.format_point_markers"]], "plot_acq_function_2d() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_acq_function_2d"]], "plot_bo_points() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_bo_points"]], "plot_function_2d() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_function_2d"]], "plot_gp_2d() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_gp_2d"]], "plot_mobo_history() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_mobo_history"]], "plot_mobo_points_in_obj_space() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_mobo_points_in_obj_space"]], "plot_regret() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_regret"]], "plot_surface() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_surface"]], "plot_trust_region_history_2d() (in module trieste.experimental.plotting.plotting)": [[25, "trieste.experimental.plotting.plotting.plot_trust_region_history_2d"]], "trieste.experimental.plotting.plotting": [[25, "module-trieste.experimental.plotting.plotting"]], "add_bo_points_plotly() (in module trieste.experimental.plotting.plotting_plotly)": [[26, "trieste.experimental.plotting.plotting_plotly.add_bo_points_plotly"]], "add_surface_plotly() (in module trieste.experimental.plotting.plotting_plotly)": [[26, "trieste.experimental.plotting.plotting_plotly.add_surface_plotly"]], "format_point_markers() (in module trieste.experimental.plotting.plotting_plotly)": [[26, "trieste.experimental.plotting.plotting_plotly.format_point_markers"]], "plot_function_plotly() (in module trieste.experimental.plotting.plotting_plotly)": [[26, "trieste.experimental.plotting.plotting_plotly.plot_function_plotly"]], "plot_model_predictions_plotly() (in module trieste.experimental.plotting.plotting_plotly)": [[26, "trieste.experimental.plotting.plotting_plotly.plot_model_predictions_plotly"]], "trieste.experimental.plotting.plotting_plotly": [[26, "module-trieste.experimental.plotting.plotting_plotly"]], "trieste": [[27, "module-trieste"]], "default_summary_filter() (in module trieste.logging)": [[28, "trieste.logging.default_summary_filter"]], "evaluate_data() (in module trieste.logging)": [[28, "trieste.logging.evaluate_data"]], "get_current_name_scope() (in module trieste.logging)": [[28, "trieste.logging.get_current_name_scope"]], "get_step_number() (in module trieste.logging)": [[28, "trieste.logging.get_step_number"]], "get_summary_filter() (in module trieste.logging)": [[28, "trieste.logging.get_summary_filter"]], "get_tensorboard_writer() (in module trieste.logging)": [[28, "trieste.logging.get_tensorboard_writer"]], "histogram() (in module trieste.logging)": [[28, "trieste.logging.histogram"]], "include_summary() (in module trieste.logging)": [[28, "trieste.logging.include_summary"]], "pyplot() (in module trieste.logging)": [[28, "trieste.logging.pyplot"]], "scalar() (in module trieste.logging)": [[28, "trieste.logging.scalar"]], "set_step_number() (in module trieste.logging)": [[28, "trieste.logging.set_step_number"]], "set_summary_filter() (in module trieste.logging)": [[28, "trieste.logging.set_summary_filter"]], "set_tensorboard_writer() (in module trieste.logging)": [[28, "trieste.logging.set_tensorboard_writer"]], "step_number() (in module trieste.logging)": [[28, "trieste.logging.step_number"]], "tensorboard_writer() (in module trieste.logging)": [[28, "trieste.logging.tensorboard_writer"]], "text() (in module trieste.logging)": [[28, "trieste.logging.text"]], "trieste.logging": [[28, "module-trieste.logging"]], "classification_kernel_variance (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.CLASSIFICATION_KERNEL_VARIANCE"]], "classification_kernel_variance_noise_free (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.CLASSIFICATION_KERNEL_VARIANCE_NOISE_FREE"]], "kernel_lengthscale (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.KERNEL_LENGTHSCALE"]], "kernel_prior_scale (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.KERNEL_PRIOR_SCALE"]], "max_num_inducing_points (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.MAX_NUM_INDUCING_POINTS"]], "num_inducing_points_per_dim (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.NUM_INDUCING_POINTS_PER_DIM"]], "signal_noise_ratio_likelihood (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.SIGNAL_NOISE_RATIO_LIKELIHOOD"]], "build_gpr() (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.build_gpr"]], "build_multifidelity_autoregressive_models() (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.build_multifidelity_autoregressive_models"]], "build_multifidelity_nonlinear_autoregressive_models() (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.build_multifidelity_nonlinear_autoregressive_models"]], "build_sgpr() (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.build_sgpr"]], "build_svgp() (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.build_svgp"]], "build_vgp_classifier() (in module trieste.models.gpflow.builders)": [[29, "trieste.models.gpflow.builders.build_vgp_classifier"]], "trieste.models.gpflow.builders": [[29, "module-trieste.models.gpflow.builders"]], "batchreparametrizationsampler (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.BatchReparametrizationSampler"]], "conditionalimprovementreduction (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.ConditionalImprovementReduction"]], "conditionalvariancereduction (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.ConditionalVarianceReduction"]], "decoupledtrajectorysampler (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.DecoupledTrajectorySampler"]], "gpflowpredictor (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.GPflowPredictor"]], "gaussianprocessregression (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.GaussianProcessRegression"]], "independentreparametrizationsampler (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.IndependentReparametrizationSampler"]], "inducingpointselector (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.InducingPointSelector"]], "kmeansinducingpointselector (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.KMeansInducingPointSelector"]], "multifidelityautoregressive (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive"]], "multifidelitynonlinearautoregressive (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive"]], "randomfourierfeaturetrajectorysampler (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.RandomFourierFeatureTrajectorySampler"]], "randomsubsampleinducingpointselector (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.RandomSubSampleInducingPointSelector"]], "sparsegaussianprocessregression (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression"]], "sparsevariational (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.SparseVariational"]], "uniforminducingpointselector (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.UniformInducingPointSelector"]], "variationalgaussianprocess (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.VariationalGaussianProcess"]], "__call__() (feature_decomposition_trajectory method)": [[30, "trieste.models.gpflow.feature_decomposition_trajectory.__call__"], [35, "trieste.models.gpflow.sampler.feature_decomposition_trajectory.__call__"]], "_calculate_residual() (multifidelityautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive._calculate_residual"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive._calculate_residual"]], "_ensure_variable_model_data() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor._ensure_variable_model_data"], [32, "trieste.models.gpflow.interface.GPflowPredictor._ensure_variable_model_data"]], "_ensure_variable_model_data() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression._ensure_variable_model_data"], [33, "trieste.models.gpflow.models.GaussianProcessRegression._ensure_variable_model_data"]], "_ensure_variable_model_data() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression._ensure_variable_model_data"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression._ensure_variable_model_data"]], "_ensure_variable_model_data() (sparsevariational method)": [[30, "trieste.models.gpflow.SparseVariational._ensure_variable_model_data"], [33, "trieste.models.gpflow.models.SparseVariational._ensure_variable_model_data"]], "_ensure_variable_model_data() (variationalgaussianprocess method)": [[30, "trieste.models.gpflow.VariationalGaussianProcess._ensure_variable_model_data"], [33, "trieste.models.gpflow.models.VariationalGaussianProcess._ensure_variable_model_data"]], "_prepare_theta_posterior_in_design_space() (randomfourierfeaturetrajectorysampler method)": [[30, "trieste.models.gpflow.RandomFourierFeatureTrajectorySampler._prepare_theta_posterior_in_design_space"], [35, "trieste.models.gpflow.sampler.RandomFourierFeatureTrajectorySampler._prepare_theta_posterior_in_design_space"]], "_prepare_theta_posterior_in_gram_space() (randomfourierfeaturetrajectorysampler method)": [[30, "trieste.models.gpflow.RandomFourierFeatureTrajectorySampler._prepare_theta_posterior_in_gram_space"], [35, "trieste.models.gpflow.sampler.RandomFourierFeatureTrajectorySampler._prepare_theta_posterior_in_gram_space"]], "_prepare_weight_sampler() (decoupledtrajectorysampler method)": [[30, "trieste.models.gpflow.DecoupledTrajectorySampler._prepare_weight_sampler"], [35, "trieste.models.gpflow.sampler.DecoupledTrajectorySampler._prepare_weight_sampler"]], "_prepare_weight_sampler() (randomfourierfeaturetrajectorysampler method)": [[30, "trieste.models.gpflow.RandomFourierFeatureTrajectorySampler._prepare_weight_sampler"], [35, "trieste.models.gpflow.sampler.RandomFourierFeatureTrajectorySampler._prepare_weight_sampler"]], "_propagate_samples_through_level() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive._propagate_samples_through_level"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive._propagate_samples_through_level"]], "_recalculate_inducing_points() (inducingpointselector method)": [[30, "trieste.models.gpflow.InducingPointSelector._recalculate_inducing_points"], [31, "trieste.models.gpflow.inducing_point_selectors.InducingPointSelector._recalculate_inducing_points"]], "_recalculate_inducing_points() (kmeansinducingpointselector method)": [[30, "trieste.models.gpflow.KMeansInducingPointSelector._recalculate_inducing_points"], [31, "trieste.models.gpflow.inducing_point_selectors.KMeansInducingPointSelector._recalculate_inducing_points"]], "_recalculate_inducing_points() (randomsubsampleinducingpointselector method)": [[30, "trieste.models.gpflow.RandomSubSampleInducingPointSelector._recalculate_inducing_points"], [31, "trieste.models.gpflow.inducing_point_selectors.RandomSubSampleInducingPointSelector._recalculate_inducing_points"]], "_recalculate_inducing_points() (uniforminducingpointselector method)": [[30, "trieste.models.gpflow.UniformInducingPointSelector._recalculate_inducing_points"], [31, "trieste.models.gpflow.inducing_point_selectors.UniformInducingPointSelector._recalculate_inducing_points"]], "_sample_mean_and_var_at_fidelities() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive._sample_mean_and_var_at_fidelities"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive._sample_mean_and_var_at_fidelities"]], "_update_inducing_variables() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression._update_inducing_variables"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression._update_inducing_variables"]], "_update_inducing_variables() (sparsevariational method)": [[30, "trieste.models.gpflow.SparseVariational._update_inducing_variables"], [33, "trieste.models.gpflow.models.SparseVariational._update_inducing_variables"]], "assert_data_is_compatible() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.assert_data_is_compatible"]], "build_gpr() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.build_gpr"]], "build_multifidelity_autoregressive_models() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.build_multifidelity_autoregressive_models"]], "build_multifidelity_nonlinear_autoregressive_models() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.build_multifidelity_nonlinear_autoregressive_models"]], "build_sgpr() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.build_sgpr"]], "build_svgp() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.build_svgp"]], "build_vgp_classifier() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.build_vgp_classifier"]], "calculate_inducing_points() (inducingpointselector method)": [[30, "trieste.models.gpflow.InducingPointSelector.calculate_inducing_points"], [31, "trieste.models.gpflow.inducing_point_selectors.InducingPointSelector.calculate_inducing_points"]], "check_optimizer() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.check_optimizer"]], "conditional_predict_f() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.conditional_predict_f"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.conditional_predict_f"]], "conditional_predict_f_sample() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.conditional_predict_f_sample"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.conditional_predict_f_sample"]], "conditional_predict_joint() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.conditional_predict_joint"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.conditional_predict_joint"]], "conditional_predict_y() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.conditional_predict_y"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.conditional_predict_y"]], "covariance_between_points() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.covariance_between_points"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.covariance_between_points"]], "covariance_between_points() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression.covariance_between_points"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression.covariance_between_points"]], "covariance_between_points() (sparsevariational method)": [[30, "trieste.models.gpflow.SparseVariational.covariance_between_points"], [33, "trieste.models.gpflow.models.SparseVariational.covariance_between_points"]], "covariance_between_points() (variationalgaussianprocess method)": [[30, "trieste.models.gpflow.VariationalGaussianProcess.covariance_between_points"], [33, "trieste.models.gpflow.models.VariationalGaussianProcess.covariance_between_points"]], "covariance_with_top_fidelity() (multifidelityautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive.covariance_with_top_fidelity"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive.covariance_with_top_fidelity"]], "covariance_with_top_fidelity() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive.covariance_with_top_fidelity"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive.covariance_with_top_fidelity"]], "create_posterior_cache() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.create_posterior_cache"], [32, "trieste.models.gpflow.interface.GPflowPredictor.create_posterior_cache"]], "feature_decomposition_trajectory (class in trieste.models.gpflow)": [[30, "trieste.models.gpflow.feature_decomposition_trajectory"]], "find_best_model_initialization() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.find_best_model_initialization"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.find_best_model_initialization"]], "get_inducing_variables() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression.get_inducing_variables"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression.get_inducing_variables"]], "get_inducing_variables() (sparsevariational method)": [[30, "trieste.models.gpflow.SparseVariational.get_inducing_variables"], [33, "trieste.models.gpflow.models.SparseVariational.get_inducing_variables"]], "get_inducing_variables() (variationalgaussianprocess method)": [[30, "trieste.models.gpflow.VariationalGaussianProcess.get_inducing_variables"], [33, "trieste.models.gpflow.models.VariationalGaussianProcess.get_inducing_variables"]], "get_internal_data() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.get_internal_data"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.get_internal_data"]], "get_internal_data() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression.get_internal_data"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression.get_internal_data"]], "get_kernel() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.get_kernel"], [32, "trieste.models.gpflow.interface.GPflowPredictor.get_kernel"]], "get_mean_function() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.get_mean_function"], [32, "trieste.models.gpflow.interface.GPflowPredictor.get_mean_function"]], "get_observation_noise() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.get_observation_noise"], [32, "trieste.models.gpflow.interface.GPflowPredictor.get_observation_noise"]], "log() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.log"], [32, "trieste.models.gpflow.interface.GPflowPredictor.log"]], "log() (multifidelityautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive.log"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive.log"]], "log() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive.log"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive.log"]], "model (gpflowpredictor property)": [[30, "trieste.models.gpflow.GPflowPredictor.model"], [32, "trieste.models.gpflow.interface.GPflowPredictor.model"]], "model (gaussianprocessregression property)": [[30, "trieste.models.gpflow.GaussianProcessRegression.model"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.model"]], "model (sparsegaussianprocessregression property)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression.model"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression.model"]], "model (sparsevariational property)": [[30, "trieste.models.gpflow.SparseVariational.model"], [33, "trieste.models.gpflow.models.SparseVariational.model"]], "model (variationalgaussianprocess property)": [[30, "trieste.models.gpflow.VariationalGaussianProcess.model"], [33, "trieste.models.gpflow.models.VariationalGaussianProcess.model"]], "num_fidelities (multifidelityautoregressive property)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive.num_fidelities"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive.num_fidelities"]], "num_fidelities (multifidelitynonlinearautoregressive property)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive.num_fidelities"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive.num_fidelities"]], "optimize() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.optimize"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.optimize"]], "optimize() (multifidelityautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive.optimize"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive.optimize"]], "optimize() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive.optimize"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive.optimize"]], "optimize() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression.optimize"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression.optimize"]], "optimize() (sparsevariational method)": [[30, "trieste.models.gpflow.SparseVariational.optimize"], [33, "trieste.models.gpflow.models.SparseVariational.optimize"]], "optimize() (variationalgaussianprocess method)": [[30, "trieste.models.gpflow.VariationalGaussianProcess.optimize"], [33, "trieste.models.gpflow.models.VariationalGaussianProcess.optimize"]], "optimizer (gpflowpredictor property)": [[30, "trieste.models.gpflow.GPflowPredictor.optimizer"], [32, "trieste.models.gpflow.interface.GPflowPredictor.optimizer"]], "predict() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.predict"], [32, "trieste.models.gpflow.interface.GPflowPredictor.predict"]], "predict() (multifidelityautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive.predict"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive.predict"]], "predict() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive.predict"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive.predict"]], "predict_joint() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.predict_joint"], [32, "trieste.models.gpflow.interface.GPflowPredictor.predict_joint"]], "predict_y() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.predict_y"], [32, "trieste.models.gpflow.interface.GPflowPredictor.predict_y"]], "predict_y() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.predict_y"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.predict_y"]], "predict_y() (multifidelityautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive.predict_y"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive.predict_y"]], "predict_y() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive.predict_y"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive.predict_y"]], "predict_y() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression.predict_y"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression.predict_y"]], "predict_y() (sparsevariational method)": [[30, "trieste.models.gpflow.SparseVariational.predict_y"], [33, "trieste.models.gpflow.models.SparseVariational.predict_y"]], "predict_y() (variationalgaussianprocess method)": [[30, "trieste.models.gpflow.VariationalGaussianProcess.predict_y"], [33, "trieste.models.gpflow.models.VariationalGaussianProcess.predict_y"]], "randomize_hyperparameters() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.randomize_hyperparameters"]], "reparam_sampler() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.reparam_sampler"], [32, "trieste.models.gpflow.interface.GPflowPredictor.reparam_sampler"]], "resample() (feature_decomposition_trajectory method)": [[30, "trieste.models.gpflow.feature_decomposition_trajectory.resample"], [35, "trieste.models.gpflow.sampler.feature_decomposition_trajectory.resample"]], "sample() (batchreparametrizationsampler method)": [[30, "trieste.models.gpflow.BatchReparametrizationSampler.sample"], [35, "trieste.models.gpflow.sampler.BatchReparametrizationSampler.sample"]], "sample() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.sample"], [32, "trieste.models.gpflow.interface.GPflowPredictor.sample"]], "sample() (independentreparametrizationsampler method)": [[30, "trieste.models.gpflow.IndependentReparametrizationSampler.sample"], [35, "trieste.models.gpflow.sampler.IndependentReparametrizationSampler.sample"]], "sample() (multifidelityautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive.sample"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive.sample"]], "sample() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive.sample"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive.sample"]], "skip (batchreparametrizationsampler attribute)": [[30, "trieste.models.gpflow.BatchReparametrizationSampler.skip"], [35, "trieste.models.gpflow.sampler.BatchReparametrizationSampler.skip"]], "skip (independentreparametrizationsampler attribute)": [[30, "trieste.models.gpflow.IndependentReparametrizationSampler.skip"], [35, "trieste.models.gpflow.sampler.IndependentReparametrizationSampler.skip"]], "squeeze_hyperparameters() (in module trieste.models.gpflow)": [[30, "trieste.models.gpflow.squeeze_hyperparameters"]], "trajectory_sampler() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.trajectory_sampler"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.trajectory_sampler"]], "trajectory_sampler() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression.trajectory_sampler"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression.trajectory_sampler"]], "trajectory_sampler() (sparsevariational method)": [[30, "trieste.models.gpflow.SparseVariational.trajectory_sampler"], [33, "trieste.models.gpflow.models.SparseVariational.trajectory_sampler"]], "trajectory_sampler() (variationalgaussianprocess method)": [[30, "trieste.models.gpflow.VariationalGaussianProcess.trajectory_sampler"], [33, "trieste.models.gpflow.models.VariationalGaussianProcess.trajectory_sampler"]], "trieste.models.gpflow": [[30, "module-trieste.models.gpflow"]], "update() (gaussianprocessregression method)": [[30, "trieste.models.gpflow.GaussianProcessRegression.update"], [33, "trieste.models.gpflow.models.GaussianProcessRegression.update"]], "update() (multifidelityautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityAutoregressive.update"], [33, "trieste.models.gpflow.models.MultifidelityAutoregressive.update"]], "update() (multifidelitynonlinearautoregressive method)": [[30, "trieste.models.gpflow.MultifidelityNonlinearAutoregressive.update"], [33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive.update"]], "update() (sparsegaussianprocessregression method)": [[30, "trieste.models.gpflow.SparseGaussianProcessRegression.update"], [33, "trieste.models.gpflow.models.SparseGaussianProcessRegression.update"]], "update() (sparsevariational method)": [[30, "trieste.models.gpflow.SparseVariational.update"], [33, "trieste.models.gpflow.models.SparseVariational.update"]], "update() (variationalgaussianprocess method)": [[30, "trieste.models.gpflow.VariationalGaussianProcess.update"], [33, "trieste.models.gpflow.models.VariationalGaussianProcess.update"]], "update() (feature_decomposition_trajectory method)": [[30, "trieste.models.gpflow.feature_decomposition_trajectory.update"], [35, "trieste.models.gpflow.sampler.feature_decomposition_trajectory.update"]], "update_posterior_cache() (gpflowpredictor method)": [[30, "trieste.models.gpflow.GPflowPredictor.update_posterior_cache"], [32, "trieste.models.gpflow.interface.GPflowPredictor.update_posterior_cache"]], "conditionalimprovementreduction (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.ConditionalImprovementReduction"]], "conditionalvariancereduction (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.ConditionalVarianceReduction"]], "dppinducingpointselector (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.DPPInducingPointSelector"]], "inducingpointselector (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.InducingPointSelector"]], "kmeansinducingpointselector (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.KMeansInducingPointSelector"]], "modelbasedimprovementqualityfunction (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.ModelBasedImprovementQualityFunction"]], "qualityfunction (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.QualityFunction"]], "randomsubsampleinducingpointselector (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.RandomSubSampleInducingPointSelector"]], "uniforminducingpointselector (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.UniformInducingPointSelector"]], "unitqualityfunction (class in trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.UnitQualityFunction"]], "__call__() (modelbasedimprovementqualityfunction method)": [[31, "trieste.models.gpflow.inducing_point_selectors.ModelBasedImprovementQualityFunction.__call__"]], "__call__() (qualityfunction method)": [[31, "trieste.models.gpflow.inducing_point_selectors.QualityFunction.__call__"]], "__call__() (unitqualityfunction method)": [[31, "trieste.models.gpflow.inducing_point_selectors.UnitQualityFunction.__call__"]], "_recalculate_inducing_points() (dppinducingpointselector method)": [[31, "trieste.models.gpflow.inducing_point_selectors.DPPInducingPointSelector._recalculate_inducing_points"]], "greedy_inference_dpp() (in module trieste.models.gpflow.inducing_point_selectors)": [[31, "trieste.models.gpflow.inducing_point_selectors.greedy_inference_dpp"]], "trieste.models.gpflow.inducing_point_selectors": [[31, "module-trieste.models.gpflow.inducing_point_selectors"]], "gpflowpredictor (class in trieste.models.gpflow.interface)": [[32, "trieste.models.gpflow.interface.GPflowPredictor"]], "supportscovariancebetweenpoints (class in trieste.models.gpflow.interface)": [[32, "trieste.models.gpflow.interface.SupportsCovarianceBetweenPoints"]], "covariance_between_points() (supportscovariancebetweenpoints method)": [[32, "trieste.models.gpflow.interface.SupportsCovarianceBetweenPoints.covariance_between_points"]], "trieste.models.gpflow.interface": [[32, "module-trieste.models.gpflow.interface"]], "gaussianprocessregression (class in trieste.models.gpflow.models)": [[33, "trieste.models.gpflow.models.GaussianProcessRegression"]], "multifidelityautoregressive (class in trieste.models.gpflow.models)": [[33, "trieste.models.gpflow.models.MultifidelityAutoregressive"]], "multifidelitynonlinearautoregressive (class in trieste.models.gpflow.models)": [[33, "trieste.models.gpflow.models.MultifidelityNonlinearAutoregressive"]], "sparsegaussianprocessregression (class in trieste.models.gpflow.models)": [[33, "trieste.models.gpflow.models.SparseGaussianProcessRegression"]], "sparsevariational (class in trieste.models.gpflow.models)": [[33, "trieste.models.gpflow.models.SparseVariational"]], "variationalgaussianprocess (class in trieste.models.gpflow.models)": [[33, "trieste.models.gpflow.models.VariationalGaussianProcess"]], "trieste.models.gpflow.models": [[33, "module-trieste.models.gpflow.models"]], "trieste.models.gpflow.optimizer": [[34, "module-trieste.models.gpflow.optimizer"]], "batchreparametrizationsampler (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.BatchReparametrizationSampler"]], "decoupledtrajectorysampler (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.DecoupledTrajectorySampler"]], "featuredecompositioninducingpointmodel (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.FeatureDecompositionInducingPointModel"]], "featuredecompositioninternaldatamodel (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.FeatureDecompositionInternalDataModel"]], "featuredecompositiontrajectorysampler (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.FeatureDecompositionTrajectorySampler"]], "independentreparametrizationsampler (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.IndependentReparametrizationSampler"]], "randomfourierfeaturetrajectorysampler (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.RandomFourierFeatureTrajectorySampler"]], "resampleabledecoupledfeaturefunctions (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.ResampleableDecoupledFeatureFunctions"]], "resampleablerandomfourierfeaturefunctions (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.ResampleableRandomFourierFeatureFunctions"]], "_prepare_weight_sampler() (featuredecompositiontrajectorysampler method)": [[35, "trieste.models.gpflow.sampler.FeatureDecompositionTrajectorySampler._prepare_weight_sampler"]], "call() (resampleabledecoupledfeaturefunctions method)": [[35, "trieste.models.gpflow.sampler.ResampleableDecoupledFeatureFunctions.call"]], "call() (resampleablerandomfourierfeaturefunctions method)": [[35, "trieste.models.gpflow.sampler.ResampleableRandomFourierFeatureFunctions.call"]], "feature_decomposition_trajectory (class in trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.feature_decomposition_trajectory"]], "get_trajectory() (featuredecompositiontrajectorysampler method)": [[35, "trieste.models.gpflow.sampler.FeatureDecompositionTrajectorySampler.get_trajectory"]], "qmc_normal_samples() (in module trieste.models.gpflow.sampler)": [[35, "trieste.models.gpflow.sampler.qmc_normal_samples"]], "resample() (resampleablerandomfourierfeaturefunctions method)": [[35, "trieste.models.gpflow.sampler.ResampleableRandomFourierFeatureFunctions.resample"]], "resample_trajectory() (featuredecompositiontrajectorysampler method)": [[35, "trieste.models.gpflow.sampler.FeatureDecompositionTrajectorySampler.resample_trajectory"]], "trieste.models.gpflow.sampler": [[35, "module-trieste.models.gpflow.sampler"]], "update_trajectory() (featuredecompositiontrajectorysampler method)": [[35, "trieste.models.gpflow.sampler.FeatureDecompositionTrajectorySampler.update_trajectory"]], "_compute_kernel_blocks() (in module trieste.models.gpflow.utils)": [[36, "trieste.models.gpflow.utils._compute_kernel_blocks"]], "_covariance_between_points_for_variational_models() (in module trieste.models.gpflow.utils)": [[36, "trieste.models.gpflow.utils._covariance_between_points_for_variational_models"]], "_whiten_points() (in module trieste.models.gpflow.utils)": [[36, "trieste.models.gpflow.utils._whiten_points"]], "assert_data_is_compatible() (in module trieste.models.gpflow.utils)": [[36, "trieste.models.gpflow.utils.assert_data_is_compatible"]], "check_optimizer() (in module trieste.models.gpflow.utils)": [[36, "trieste.models.gpflow.utils.check_optimizer"]], "randomize_hyperparameters() (in module trieste.models.gpflow.utils)": [[36, "trieste.models.gpflow.utils.randomize_hyperparameters"]], "squeeze_hyperparameters() (in module trieste.models.gpflow.utils)": [[36, "trieste.models.gpflow.utils.squeeze_hyperparameters"]], "trieste.models.gpflow.utils": [[36, "module-trieste.models.gpflow.utils"]], "inner_layer_sqrt_factor (in module trieste.models.gpflux.builders)": [[37, "trieste.models.gpflux.builders.INNER_LAYER_SQRT_FACTOR"]], "likelihood_variance (in module trieste.models.gpflux.builders)": [[37, "trieste.models.gpflux.builders.LIKELIHOOD_VARIANCE"]], "max_num_inducing_points (in module trieste.models.gpflux.builders)": [[37, "trieste.models.gpflux.builders.MAX_NUM_INDUCING_POINTS"]], "num_inducing_points_per_dim (in module trieste.models.gpflux.builders)": [[37, "trieste.models.gpflux.builders.NUM_INDUCING_POINTS_PER_DIM"]], "num_layers (in module trieste.models.gpflux.builders)": [[37, "trieste.models.gpflux.builders.NUM_LAYERS"]], "build_vanilla_deep_gp() (in module trieste.models.gpflux.builders)": [[37, "trieste.models.gpflux.builders.build_vanilla_deep_gp"]], "trieste.models.gpflux.builders": [[37, "module-trieste.models.gpflux.builders"]], "deepgaussianprocess (class in trieste.models.gpflux)": [[38, "trieste.models.gpflux.DeepGaussianProcess"]], "deepgaussianprocessdecoupledlayer (class in trieste.models.gpflux)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledLayer"]], "deepgaussianprocessdecoupledtrajectorysampler (class in trieste.models.gpflux)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledTrajectorySampler"]], "deepgaussianprocessreparamsampler (class in trieste.models.gpflux)": [[38, "trieste.models.gpflux.DeepGaussianProcessReparamSampler"]], "gpfluxpredictor (class in trieste.models.gpflux)": [[38, "trieste.models.gpflux.GPfluxPredictor"]], "resampleabledecoupleddeepgaussianprocessfeaturefunctions (class in trieste.models.gpflux)": [[38, "trieste.models.gpflux.ResampleableDecoupledDeepGaussianProcessFeatureFunctions"]], "__call__() (deepgaussianprocessdecoupledlayer method)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledLayer.__call__"], [41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledLayer.__call__"]], "__call__() (resampleabledecoupleddeepgaussianprocessfeaturefunctions method)": [[38, "trieste.models.gpflux.ResampleableDecoupledDeepGaussianProcessFeatureFunctions.__call__"], [41, "trieste.models.gpflux.sampler.ResampleableDecoupledDeepGaussianProcessFeatureFunctions.__call__"]], "__call__() (dgp_feature_decomposition_trajectory method)": [[38, "trieste.models.gpflux.dgp_feature_decomposition_trajectory.__call__"], [41, "trieste.models.gpflux.sampler.dgp_feature_decomposition_trajectory.__call__"]], "_prepare_weight_sampler() (deepgaussianprocessdecoupledlayer method)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledLayer._prepare_weight_sampler"], [41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledLayer._prepare_weight_sampler"]], "build_vanilla_deep_gp() (in module trieste.models.gpflux)": [[38, "trieste.models.gpflux.build_vanilla_deep_gp"]], "dgp_feature_decomposition_trajectory (class in trieste.models.gpflux)": [[38, "trieste.models.gpflux.dgp_feature_decomposition_trajectory"]], "get_observation_noise() (gpfluxpredictor method)": [[38, "trieste.models.gpflux.GPfluxPredictor.get_observation_noise"], [39, "trieste.models.gpflux.interface.GPfluxPredictor.get_observation_noise"]], "get_trajectory() (deepgaussianprocessdecoupledtrajectorysampler method)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledTrajectorySampler.get_trajectory"], [41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledTrajectorySampler.get_trajectory"]], "log() (deepgaussianprocess method)": [[38, "trieste.models.gpflux.DeepGaussianProcess.log"], [40, "trieste.models.gpflux.models.DeepGaussianProcess.log"]], "model_gpflux (deepgaussianprocess property)": [[38, "trieste.models.gpflux.DeepGaussianProcess.model_gpflux"], [40, "trieste.models.gpflux.models.DeepGaussianProcess.model_gpflux"]], "model_gpflux (gpfluxpredictor property)": [[38, "trieste.models.gpflux.GPfluxPredictor.model_gpflux"], [39, "trieste.models.gpflux.interface.GPfluxPredictor.model_gpflux"]], "model_keras (deepgaussianprocess property)": [[38, "trieste.models.gpflux.DeepGaussianProcess.model_keras"], [40, "trieste.models.gpflux.models.DeepGaussianProcess.model_keras"]], "model_keras (gpfluxpredictor property)": [[38, "trieste.models.gpflux.GPfluxPredictor.model_keras"], [39, "trieste.models.gpflux.interface.GPfluxPredictor.model_keras"]], "optimize() (deepgaussianprocess method)": [[38, "trieste.models.gpflux.DeepGaussianProcess.optimize"], [40, "trieste.models.gpflux.models.DeepGaussianProcess.optimize"]], "optimizer (gpfluxpredictor property)": [[38, "trieste.models.gpflux.GPfluxPredictor.optimizer"], [39, "trieste.models.gpflux.interface.GPfluxPredictor.optimizer"]], "predict() (gpfluxpredictor method)": [[38, "trieste.models.gpflux.GPfluxPredictor.predict"], [39, "trieste.models.gpflux.interface.GPfluxPredictor.predict"]], "predict_y() (gpfluxpredictor method)": [[38, "trieste.models.gpflux.GPfluxPredictor.predict_y"], [39, "trieste.models.gpflux.interface.GPfluxPredictor.predict_y"]], "reparam_sampler() (deepgaussianprocess method)": [[38, "trieste.models.gpflux.DeepGaussianProcess.reparam_sampler"], [40, "trieste.models.gpflux.models.DeepGaussianProcess.reparam_sampler"]], "resample() (deepgaussianprocessdecoupledlayer method)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledLayer.resample"], [41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledLayer.resample"]], "resample() (resampleabledecoupleddeepgaussianprocessfeaturefunctions method)": [[38, "trieste.models.gpflux.ResampleableDecoupledDeepGaussianProcessFeatureFunctions.resample"], [41, "trieste.models.gpflux.sampler.ResampleableDecoupledDeepGaussianProcessFeatureFunctions.resample"]], "resample() (dgp_feature_decomposition_trajectory method)": [[38, "trieste.models.gpflux.dgp_feature_decomposition_trajectory.resample"], [41, "trieste.models.gpflux.sampler.dgp_feature_decomposition_trajectory.resample"]], "resample_trajectory() (deepgaussianprocessdecoupledtrajectorysampler method)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledTrajectorySampler.resample_trajectory"], [41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledTrajectorySampler.resample_trajectory"]], "sample() (deepgaussianprocess method)": [[38, "trieste.models.gpflux.DeepGaussianProcess.sample"], [40, "trieste.models.gpflux.models.DeepGaussianProcess.sample"]], "sample() (deepgaussianprocessreparamsampler method)": [[38, "trieste.models.gpflux.DeepGaussianProcessReparamSampler.sample"], [41, "trieste.models.gpflux.sampler.DeepGaussianProcessReparamSampler.sample"]], "sample() (gpfluxpredictor method)": [[38, "trieste.models.gpflux.GPfluxPredictor.sample"], [39, "trieste.models.gpflux.interface.GPfluxPredictor.sample"]], "trajectory_sampler() (deepgaussianprocess method)": [[38, "trieste.models.gpflux.DeepGaussianProcess.trajectory_sampler"], [40, "trieste.models.gpflux.models.DeepGaussianProcess.trajectory_sampler"]], "trieste.models.gpflux": [[38, "module-trieste.models.gpflux"]], "update() (deepgaussianprocess method)": [[38, "trieste.models.gpflux.DeepGaussianProcess.update"], [40, "trieste.models.gpflux.models.DeepGaussianProcess.update"]], "update() (deepgaussianprocessdecoupledlayer method)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledLayer.update"], [41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledLayer.update"]], "update() (dgp_feature_decomposition_trajectory method)": [[38, "trieste.models.gpflux.dgp_feature_decomposition_trajectory.update"], [41, "trieste.models.gpflux.sampler.dgp_feature_decomposition_trajectory.update"]], "update_trajectory() (deepgaussianprocessdecoupledtrajectorysampler method)": [[38, "trieste.models.gpflux.DeepGaussianProcessDecoupledTrajectorySampler.update_trajectory"], [41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledTrajectorySampler.update_trajectory"]], "gpfluxpredictor (class in trieste.models.gpflux.interface)": [[39, "trieste.models.gpflux.interface.GPfluxPredictor"]], "trieste.models.gpflux.interface": [[39, "module-trieste.models.gpflux.interface"]], "deepgaussianprocess (class in trieste.models.gpflux.models)": [[40, "trieste.models.gpflux.models.DeepGaussianProcess"]], "trieste.models.gpflux.models": [[40, "module-trieste.models.gpflux.models"]], "deepgaussianprocessdecoupledlayer (class in trieste.models.gpflux.sampler)": [[41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledLayer"]], "deepgaussianprocessdecoupledtrajectorysampler (class in trieste.models.gpflux.sampler)": [[41, "trieste.models.gpflux.sampler.DeepGaussianProcessDecoupledTrajectorySampler"]], "deepgaussianprocessreparamsampler (class in trieste.models.gpflux.sampler)": [[41, "trieste.models.gpflux.sampler.DeepGaussianProcessReparamSampler"]], "resampleabledecoupleddeepgaussianprocessfeaturefunctions (class in trieste.models.gpflux.sampler)": [[41, "trieste.models.gpflux.sampler.ResampleableDecoupledDeepGaussianProcessFeatureFunctions"]], "dgp_feature_decomposition_trajectory (class in trieste.models.gpflux.sampler)": [[41, "trieste.models.gpflux.sampler.dgp_feature_decomposition_trajectory"]], "trieste.models.gpflux.sampler": [[41, "module-trieste.models.gpflux.sampler"]], "fastupdatemodel (class in trieste.models)": [[42, "trieste.models.FastUpdateModel"]], "modelstack (class in trieste.models)": [[42, "trieste.models.ModelStack"]], "probabilisticmodel (class in trieste.models)": [[42, "trieste.models.ProbabilisticModel"]], "probabilisticmodeltype (in module trieste.models)": [[42, "trieste.models.ProbabilisticModelType"]], "reparametrizationsampler (class in trieste.models)": [[42, "trieste.models.ReparametrizationSampler"]], "supportscovariancewithtopfidelity (class in trieste.models)": [[42, "trieste.models.SupportsCovarianceWithTopFidelity"]], "trainablemodelstack (class in trieste.models)": [[42, "trieste.models.TrainableModelStack"]], "trainableprobabilisticmodel (class in trieste.models)": [[42, "trieste.models.TrainableProbabilisticModel"]], "trajectoryfunction (in module trieste.models)": [[42, "trieste.models.TrajectoryFunction"]], "trajectoryfunctionclass (class in trieste.models)": [[42, "trieste.models.TrajectoryFunctionClass"]], "trajectorysampler (class in trieste.models)": [[42, "trieste.models.TrajectorySampler"]], "__call__() (trajectoryfunctionclass method)": [[42, "trieste.models.TrajectoryFunctionClass.__call__"], [43, "trieste.models.interfaces.TrajectoryFunctionClass.__call__"]], "conditional_predict_f() (fastupdatemodel method)": [[42, "trieste.models.FastUpdateModel.conditional_predict_f"], [43, "trieste.models.interfaces.FastUpdateModel.conditional_predict_f"]], "conditional_predict_f_sample() (fastupdatemodel method)": [[42, "trieste.models.FastUpdateModel.conditional_predict_f_sample"], [43, "trieste.models.interfaces.FastUpdateModel.conditional_predict_f_sample"]], "conditional_predict_joint() (fastupdatemodel method)": [[42, "trieste.models.FastUpdateModel.conditional_predict_joint"], [43, "trieste.models.interfaces.FastUpdateModel.conditional_predict_joint"]], "conditional_predict_y() (fastupdatemodel method)": [[42, "trieste.models.FastUpdateModel.conditional_predict_y"], [43, "trieste.models.interfaces.FastUpdateModel.conditional_predict_y"]], "covariance_with_top_fidelity() (supportscovariancewithtopfidelity method)": [[42, "trieste.models.SupportsCovarianceWithTopFidelity.covariance_with_top_fidelity"], [43, "trieste.models.interfaces.SupportsCovarianceWithTopFidelity.covariance_with_top_fidelity"]], "get_trajectory() (trajectorysampler method)": [[42, "trieste.models.TrajectorySampler.get_trajectory"], [43, "trieste.models.interfaces.TrajectorySampler.get_trajectory"]], "log() (modelstack method)": [[42, "trieste.models.ModelStack.log"], [43, "trieste.models.interfaces.ModelStack.log"]], "log() (probabilisticmodel method)": [[42, "trieste.models.ProbabilisticModel.log"], [43, "trieste.models.interfaces.ProbabilisticModel.log"]], "num_fidelities (supportscovariancewithtopfidelity property)": [[42, "trieste.models.SupportsCovarianceWithTopFidelity.num_fidelities"], [43, "trieste.models.interfaces.SupportsCovarianceWithTopFidelity.num_fidelities"]], "optimize() (trainablemodelstack method)": [[42, "trieste.models.TrainableModelStack.optimize"], [43, "trieste.models.interfaces.TrainableModelStack.optimize"]], "optimize() (trainableprobabilisticmodel method)": [[42, "trieste.models.TrainableProbabilisticModel.optimize"], [43, "trieste.models.interfaces.TrainableProbabilisticModel.optimize"]], "predict() (modelstack method)": [[42, "trieste.models.ModelStack.predict"], [43, "trieste.models.interfaces.ModelStack.predict"]], "predict() (probabilisticmodel method)": [[42, "trieste.models.ProbabilisticModel.predict"], [43, "trieste.models.interfaces.ProbabilisticModel.predict"]], "resample_trajectory() (trajectorysampler method)": [[42, "trieste.models.TrajectorySampler.resample_trajectory"], [43, "trieste.models.interfaces.TrajectorySampler.resample_trajectory"]], "reset_sampler() (reparametrizationsampler method)": [[42, "trieste.models.ReparametrizationSampler.reset_sampler"], [43, "trieste.models.interfaces.ReparametrizationSampler.reset_sampler"]], "sample() (modelstack method)": [[42, "trieste.models.ModelStack.sample"], [43, "trieste.models.interfaces.ModelStack.sample"]], "sample() (probabilisticmodel method)": [[42, "trieste.models.ProbabilisticModel.sample"], [43, "trieste.models.interfaces.ProbabilisticModel.sample"]], "sample() (reparametrizationsampler method)": [[42, "trieste.models.ReparametrizationSampler.sample"], [43, "trieste.models.interfaces.ReparametrizationSampler.sample"]], "trieste.models": [[42, "module-trieste.models"]], "update() (trainablemodelstack method)": [[42, "trieste.models.TrainableModelStack.update"], [43, "trieste.models.interfaces.TrainableModelStack.update"]], "update() (trainableprobabilisticmodel method)": [[42, "trieste.models.TrainableProbabilisticModel.update"], [43, "trieste.models.interfaces.TrainableProbabilisticModel.update"]], "update_trajectory() (trajectorysampler method)": [[42, "trieste.models.TrajectorySampler.update_trajectory"], [43, "trieste.models.interfaces.TrajectorySampler.update_trajectory"]], "fastupdatemodel (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.FastUpdateModel"]], "hasreparamsampler (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.HasReparamSampler"]], "hasreparamsamplermodelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.HasReparamSamplerModelStack"]], "hastrajectorysampler (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.HasTrajectorySampler"]], "modelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.ModelStack"]], "predictjointmodelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.PredictJointModelStack"]], "predictjointpredictymodelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.PredictJointPredictYModelStack"]], "predictymodelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.PredictYModelStack"]], "probabilisticmodel (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.ProbabilisticModel"]], "probabilisticmodeltype (in module trieste.models.interfaces)": [[43, "trieste.models.interfaces.ProbabilisticModelType"]], "reparametrizationsampler (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.ReparametrizationSampler"]], "supportscovariancewithtopfidelity (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsCovarianceWithTopFidelity"]], "supportsgetinducingvariables (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsGetInducingVariables"]], "supportsgetinternaldata (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsGetInternalData"]], "supportsgetkernel (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsGetKernel"]], "supportsgetmeanfunction (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsGetMeanFunction"]], "supportsgetobservationnoise (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsGetObservationNoise"]], "supportspredictjoint (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsPredictJoint"]], "supportspredictjointpredicty (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsPredictJointPredictY"]], "supportspredicty (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsPredictY"]], "supportsreparamsamplerobservationnoise (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.SupportsReparamSamplerObservationNoise"]], "trainablemodelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainableModelStack"]], "trainablepredictjointmodelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainablePredictJointModelStack"]], "trainablepredictjointreparammodelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainablePredictJointReparamModelStack"]], "trainablepredictymodelstack (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainablePredictYModelStack"]], "trainableprobabilisticmodel (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainableProbabilisticModel"]], "trainablesupportsgetkernel (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainableSupportsGetKernel"]], "trainablesupportspredictjoint (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainableSupportsPredictJoint"]], "trainablesupportspredictjointhasreparamsampler (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainableSupportsPredictJointHasReparamSampler"]], "trainablesupportspredicty (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrainableSupportsPredictY"]], "trajectoryfunction (in module trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrajectoryFunction"]], "trajectoryfunctionclass (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrajectoryFunctionClass"]], "trajectorysampler (class in trieste.models.interfaces)": [[43, "trieste.models.interfaces.TrajectorySampler"]], "get_inducing_variables() (supportsgetinducingvariables method)": [[43, "trieste.models.interfaces.SupportsGetInducingVariables.get_inducing_variables"]], "get_internal_data() (supportsgetinternaldata method)": [[43, "trieste.models.interfaces.SupportsGetInternalData.get_internal_data"]], "get_kernel() (supportsgetkernel method)": [[43, "trieste.models.interfaces.SupportsGetKernel.get_kernel"]], "get_mean_function() (supportsgetmeanfunction method)": [[43, "trieste.models.interfaces.SupportsGetMeanFunction.get_mean_function"]], "get_observation_noise() (supportsgetobservationnoise method)": [[43, "trieste.models.interfaces.SupportsGetObservationNoise.get_observation_noise"]], "predict_joint() (predictjointmodelstack method)": [[43, "trieste.models.interfaces.PredictJointModelStack.predict_joint"]], "predict_joint() (supportspredictjoint method)": [[43, "trieste.models.interfaces.SupportsPredictJoint.predict_joint"]], "predict_y() (predictymodelstack method)": [[43, "trieste.models.interfaces.PredictYModelStack.predict_y"]], "predict_y() (supportspredicty method)": [[43, "trieste.models.interfaces.SupportsPredictY.predict_y"]], "reparam_sampler() (hasreparamsampler method)": [[43, "trieste.models.interfaces.HasReparamSampler.reparam_sampler"]], "reparam_sampler() (hasreparamsamplermodelstack method)": [[43, "trieste.models.interfaces.HasReparamSamplerModelStack.reparam_sampler"]], "trajectory_sampler() (hastrajectorysampler method)": [[43, "trieste.models.interfaces.HasTrajectorySampler.trajectory_sampler"]], "trieste.models.interfaces": [[43, "module-trieste.models.interfaces"]], "gaussiannetwork (class in trieste.models.keras.architectures)": [[44, "trieste.models.keras.architectures.GaussianNetwork"]], "kerasensemble (class in trieste.models.keras.architectures)": [[44, "trieste.models.keras.architectures.KerasEnsemble"]], "kerasensemblenetwork (class in trieste.models.keras.architectures)": [[44, "trieste.models.keras.architectures.KerasEnsembleNetwork"]], "multivariatenormaltril (class in trieste.models.keras.architectures)": [[44, "trieste.models.keras.architectures.MultivariateNormalTriL"]], "_build_ensemble() (kerasensemble method)": [[44, "trieste.models.keras.architectures.KerasEnsemble._build_ensemble"], [46, "trieste.models.keras.KerasEnsemble._build_ensemble"]], "connect_layers() (gaussiannetwork method)": [[44, "trieste.models.keras.architectures.GaussianNetwork.connect_layers"], [46, "trieste.models.keras.GaussianNetwork.connect_layers"]], "connect_layers() (kerasensemblenetwork method)": [[44, "trieste.models.keras.architectures.KerasEnsembleNetwork.connect_layers"], [46, "trieste.models.keras.KerasEnsembleNetwork.connect_layers"]], "ensemble_size (kerasensemble property)": [[44, "trieste.models.keras.architectures.KerasEnsemble.ensemble_size"], [46, "trieste.models.keras.KerasEnsemble.ensemble_size"]], "model (kerasensemble property)": [[44, "trieste.models.keras.architectures.KerasEnsemble.model"], [46, "trieste.models.keras.KerasEnsemble.model"]], "trieste.models.keras.architectures": [[44, "module-trieste.models.keras.architectures"]], "build_keras_ensemble() (in module trieste.models.keras.builders)": [[45, "trieste.models.keras.builders.build_keras_ensemble"]], "trieste.models.keras.builders": [[45, "module-trieste.models.keras.builders"]], "deepensemble (class in trieste.models.keras)": [[46, "trieste.models.keras.DeepEnsemble"]], "deepensemblemodel (class in trieste.models.keras)": [[46, "trieste.models.keras.DeepEnsembleModel"]], "deepensembletrajectorysampler (class in trieste.models.keras)": [[46, "trieste.models.keras.DeepEnsembleTrajectorySampler"]], "gaussiannetwork (class in trieste.models.keras)": [[46, "trieste.models.keras.GaussianNetwork"]], "kerasensemble (class in trieste.models.keras)": [[46, "trieste.models.keras.KerasEnsemble"]], "kerasensemblenetwork (class in trieste.models.keras)": [[46, "trieste.models.keras.KerasEnsembleNetwork"]], "keraspredictor (class in trieste.models.keras)": [[46, "trieste.models.keras.KerasPredictor"]], "__call__() (deep_ensemble_trajectory method)": [[46, "trieste.models.keras.deep_ensemble_trajectory.__call__"], [49, "trieste.models.keras.sampler.deep_ensemble_trajectory.__call__"]], "build_keras_ensemble() (in module trieste.models.keras)": [[46, "trieste.models.keras.build_keras_ensemble"]], "deep_ensemble_trajectory (class in trieste.models.keras)": [[46, "trieste.models.keras.deep_ensemble_trajectory"]], "dtype (deepensemble property)": [[46, "trieste.models.keras.DeepEnsemble.dtype"], [48, "trieste.models.keras.models.DeepEnsemble.dtype"]], "dtype (deepensemblemodel property)": [[46, "trieste.models.keras.DeepEnsembleModel.dtype"], [47, "trieste.models.keras.interface.DeepEnsembleModel.dtype"]], "ensemble_distributions() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.ensemble_distributions"], [48, "trieste.models.keras.models.DeepEnsemble.ensemble_distributions"]], "ensemble_distributions() (deepensemblemodel method)": [[46, "trieste.models.keras.DeepEnsembleModel.ensemble_distributions"], [47, "trieste.models.keras.interface.DeepEnsembleModel.ensemble_distributions"]], "ensemble_size (deepensemble property)": [[46, "trieste.models.keras.DeepEnsemble.ensemble_size"], [48, "trieste.models.keras.models.DeepEnsemble.ensemble_size"]], "ensemble_size (deepensemblemodel property)": [[46, "trieste.models.keras.DeepEnsembleModel.ensemble_size"], [47, "trieste.models.keras.interface.DeepEnsembleModel.ensemble_size"]], "get_state() (deep_ensemble_trajectory method)": [[46, "trieste.models.keras.deep_ensemble_trajectory.get_state"], [49, "trieste.models.keras.sampler.deep_ensemble_trajectory.get_state"]], "get_tensor_spec_from_data() (in module trieste.models.keras)": [[46, "trieste.models.keras.get_tensor_spec_from_data"]], "get_trajectory() (deepensembletrajectorysampler method)": [[46, "trieste.models.keras.DeepEnsembleTrajectorySampler.get_trajectory"], [49, "trieste.models.keras.sampler.DeepEnsembleTrajectorySampler.get_trajectory"]], "log() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.log"], [48, "trieste.models.keras.models.DeepEnsemble.log"]], "log() (keraspredictor method)": [[46, "trieste.models.keras.KerasPredictor.log"], [47, "trieste.models.keras.interface.KerasPredictor.log"]], "model (deepensemble property)": [[46, "trieste.models.keras.DeepEnsemble.model"], [48, "trieste.models.keras.models.DeepEnsemble.model"]], "model (keraspredictor property)": [[46, "trieste.models.keras.KerasPredictor.model"], [47, "trieste.models.keras.interface.KerasPredictor.model"]], "negative_log_likelihood() (in module trieste.models.keras)": [[46, "trieste.models.keras.negative_log_likelihood"]], "num_outputs (deepensemble property)": [[46, "trieste.models.keras.DeepEnsemble.num_outputs"], [48, "trieste.models.keras.models.DeepEnsemble.num_outputs"]], "num_outputs (deepensemblemodel property)": [[46, "trieste.models.keras.DeepEnsembleModel.num_outputs"], [47, "trieste.models.keras.interface.DeepEnsembleModel.num_outputs"]], "optimize() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.optimize"], [48, "trieste.models.keras.models.DeepEnsemble.optimize"]], "optimizer (keraspredictor property)": [[46, "trieste.models.keras.KerasPredictor.optimizer"], [47, "trieste.models.keras.interface.KerasPredictor.optimizer"]], "predict() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.predict"], [48, "trieste.models.keras.models.DeepEnsemble.predict"]], "predict() (keraspredictor method)": [[46, "trieste.models.keras.KerasPredictor.predict"], [47, "trieste.models.keras.interface.KerasPredictor.predict"]], "predict_ensemble() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.predict_ensemble"], [48, "trieste.models.keras.models.DeepEnsemble.predict_ensemble"]], "prepare_dataset() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.prepare_dataset"], [48, "trieste.models.keras.models.DeepEnsemble.prepare_dataset"]], "prepare_query_points() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.prepare_query_points"], [48, "trieste.models.keras.models.DeepEnsemble.prepare_query_points"]], "resample() (deep_ensemble_trajectory method)": [[46, "trieste.models.keras.deep_ensemble_trajectory.resample"], [49, "trieste.models.keras.sampler.deep_ensemble_trajectory.resample"]], "resample_trajectory() (deepensembletrajectorysampler method)": [[46, "trieste.models.keras.DeepEnsembleTrajectorySampler.resample_trajectory"], [49, "trieste.models.keras.sampler.DeepEnsembleTrajectorySampler.resample_trajectory"]], "sample() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.sample"], [48, "trieste.models.keras.models.DeepEnsemble.sample"]], "sample() (keraspredictor method)": [[46, "trieste.models.keras.KerasPredictor.sample"], [47, "trieste.models.keras.interface.KerasPredictor.sample"]], "sample_ensemble() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.sample_ensemble"], [48, "trieste.models.keras.models.DeepEnsemble.sample_ensemble"]], "sample_with_replacement() (in module trieste.models.keras)": [[46, "trieste.models.keras.sample_with_replacement"]], "trajectory_sampler() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.trajectory_sampler"], [48, "trieste.models.keras.models.DeepEnsemble.trajectory_sampler"]], "trieste.models.keras": [[46, "module-trieste.models.keras"]], "update() (deepensemble method)": [[46, "trieste.models.keras.DeepEnsemble.update"], [48, "trieste.models.keras.models.DeepEnsemble.update"]], "update_trajectory() (deepensembletrajectorysampler method)": [[46, "trieste.models.keras.DeepEnsembleTrajectorySampler.update_trajectory"], [49, "trieste.models.keras.sampler.DeepEnsembleTrajectorySampler.update_trajectory"]], "deepensemblemodel (class in trieste.models.keras.interface)": [[47, "trieste.models.keras.interface.DeepEnsembleModel"]], "keraspredictor (class in trieste.models.keras.interface)": [[47, "trieste.models.keras.interface.KerasPredictor"]], "trieste.models.keras.interface": [[47, "module-trieste.models.keras.interface"]], "deepensemble (class in trieste.models.keras.models)": [[48, "trieste.models.keras.models.DeepEnsemble"]], "trieste.models.keras.models": [[48, "module-trieste.models.keras.models"]], "deepensembletrajectorysampler (class in trieste.models.keras.sampler)": [[49, "trieste.models.keras.sampler.DeepEnsembleTrajectorySampler"]], "deep_ensemble_trajectory (class in trieste.models.keras.sampler)": [[49, "trieste.models.keras.sampler.deep_ensemble_trajectory"]], "trieste.models.keras.sampler": [[49, "module-trieste.models.keras.sampler"]], "get_tensor_spec_from_data() (in module trieste.models.keras.utils)": [[50, "trieste.models.keras.utils.get_tensor_spec_from_data"]], "negative_log_likelihood() (in module trieste.models.keras.utils)": [[50, "trieste.models.keras.utils.negative_log_likelihood"]], "sample_model_index() (in module trieste.models.keras.utils)": [[50, "trieste.models.keras.utils.sample_model_index"]], "sample_with_replacement() (in module trieste.models.keras.utils)": [[50, "trieste.models.keras.utils.sample_with_replacement"]], "trieste.models.keras.utils": [[50, "module-trieste.models.keras.utils"]], "batchoptimizer (class in trieste.models.optimizer)": [[51, "trieste.models.optimizer.BatchOptimizer"]], "datasettransformer (in module trieste.models.optimizer)": [[51, "trieste.models.optimizer.DatasetTransformer"]], "kerasoptimizer (class in trieste.models.optimizer)": [[51, "trieste.models.optimizer.KerasOptimizer"]], "lossclosure (in module trieste.models.optimizer)": [[51, "trieste.models.optimizer.LossClosure"]], "optimizeresult (in module trieste.models.optimizer)": [[51, "trieste.models.optimizer.OptimizeResult"]], "optimizer (class in trieste.models.optimizer)": [[51, "trieste.models.optimizer.Optimizer"]], "trainingdata (in module trieste.models.optimizer)": [[51, "trieste.models.optimizer.TrainingData"]], "batch_size (batchoptimizer attribute)": [[51, "trieste.models.optimizer.BatchOptimizer.batch_size"]], "compile (optimizer attribute)": [[51, "trieste.models.optimizer.Optimizer.compile"]], "create_loss() (batchoptimizer method)": [[51, "trieste.models.optimizer.BatchOptimizer.create_loss"]], "create_loss() (optimizer method)": [[51, "trieste.models.optimizer.Optimizer.create_loss"]], "create_loss_function() (in module trieste.models.optimizer)": [[51, "trieste.models.optimizer.create_loss_function"]], "dataset_builder (batchoptimizer attribute)": [[51, "trieste.models.optimizer.BatchOptimizer.dataset_builder"]], "fit_args (kerasoptimizer attribute)": [[51, "trieste.models.optimizer.KerasOptimizer.fit_args"]], "loss (kerasoptimizer attribute)": [[51, "trieste.models.optimizer.KerasOptimizer.loss"]], "max_iter (batchoptimizer attribute)": [[51, "trieste.models.optimizer.BatchOptimizer.max_iter"]], "metrics (kerasoptimizer attribute)": [[51, "trieste.models.optimizer.KerasOptimizer.metrics"]], "minimize_args (optimizer attribute)": [[51, "trieste.models.optimizer.Optimizer.minimize_args"]], "optimize() (batchoptimizer method)": [[51, "trieste.models.optimizer.BatchOptimizer.optimize"]], "optimize() (optimizer method)": [[51, "trieste.models.optimizer.Optimizer.optimize"]], "optimizer (kerasoptimizer attribute)": [[51, "trieste.models.optimizer.KerasOptimizer.optimizer"]], "optimizer (optimizer attribute)": [[51, "trieste.models.optimizer.Optimizer.optimizer"]], "trieste.models.optimizer": [[51, "module-trieste.models.optimizer"]], "get_last_optimization_result() (in module trieste.models.utils)": [[52, "trieste.models.utils.get_last_optimization_result"]], "get_module_with_variables() (in module trieste.models.utils)": [[52, "trieste.models.utils.get_module_with_variables"]], "optimize_model_and_save_result() (in module trieste.models.utils)": [[52, "trieste.models.utils.optimize_model_and_save_result"]], "trieste.models.utils": [[52, "module-trieste.models.utils"]], "write_summary_data_based_metrics() (in module trieste.models.utils)": [[52, "trieste.models.utils.write_summary_data_based_metrics"]], "write_summary_kernel_parameters() (in module trieste.models.utils)": [[52, "trieste.models.utils.write_summary_kernel_parameters"]], "write_summary_likelihood_parameters() (in module trieste.models.utils)": [[52, "trieste.models.utils.write_summary_likelihood_parameters"]], "ackley5 (in module trieste.objectives)": [[53, "trieste.objectives.Ackley5"]], "branin (in module trieste.objectives)": [[53, "trieste.objectives.Branin"]], "constrainedscaledbranin (in module trieste.objectives)": [[53, "trieste.objectives.ConstrainedScaledBranin"]], "dtlz1() (in module trieste.objectives)": [[53, "trieste.objectives.DTLZ1"]], "dtlz2() (in module trieste.objectives)": [[53, "trieste.objectives.DTLZ2"]], "gramacylee (in module trieste.objectives)": [[53, "trieste.objectives.GramacyLee"]], "hartmann3 (in module trieste.objectives)": [[53, "trieste.objectives.Hartmann3"]], "hartmann6 (in module trieste.objectives)": [[53, "trieste.objectives.Hartmann6"]], "levy8 (in module trieste.objectives)": [[53, "trieste.objectives.Levy8"]], "logarithmicgoldsteinprice (in module trieste.objectives)": [[53, "trieste.objectives.LogarithmicGoldsteinPrice"]], "michalewicz10 (in module trieste.objectives)": [[53, "trieste.objectives.Michalewicz10"]], "michalewicz2 (in module trieste.objectives)": [[53, "trieste.objectives.Michalewicz2"]], "michalewicz5 (in module trieste.objectives)": [[53, "trieste.objectives.Michalewicz5"]], "multiobjectivetestproblem (class in trieste.objectives)": [[53, "trieste.objectives.MultiObjectiveTestProblem"]], "objectivetestproblem (class in trieste.objectives)": [[53, "trieste.objectives.ObjectiveTestProblem"]], "rosenbrock4 (in module trieste.objectives)": [[53, "trieste.objectives.Rosenbrock4"]], "scaledbranin (in module trieste.objectives)": [[53, "trieste.objectives.ScaledBranin"]], "shekel4 (in module trieste.objectives)": [[53, "trieste.objectives.Shekel4"]], "simplequadratic (in module trieste.objectives)": [[53, "trieste.objectives.SimpleQuadratic"]], "singleobjectivemultifidelitytestproblem (class in trieste.objectives)": [[53, "trieste.objectives.SingleObjectiveMultifidelityTestProblem"]], "singleobjectivetestproblem (class in trieste.objectives)": [[53, "trieste.objectives.SingleObjectiveTestProblem"]], "trid10 (in module trieste.objectives)": [[53, "trieste.objectives.Trid10"]], "vlmop2() (in module trieste.objectives)": [[53, "trieste.objectives.VLMOP2"]], "bounds (objectivetestproblem property)": [[53, "trieste.objectives.ObjectiveTestProblem.bounds"], [56, "trieste.objectives.single_objectives.ObjectiveTestProblem.bounds"]], "dim (objectivetestproblem property)": [[53, "trieste.objectives.ObjectiveTestProblem.dim"], [56, "trieste.objectives.single_objectives.ObjectiveTestProblem.dim"]], "fidelity_search_space (singleobjectivemultifidelitytestproblem attribute)": [[53, "trieste.objectives.SingleObjectiveMultifidelityTestProblem.fidelity_search_space"], [55, "trieste.objectives.multifidelity_objectives.SingleObjectiveMultifidelityTestProblem.fidelity_search_space"]], "gen_pareto_optimal_points (multiobjectivetestproblem attribute)": [[53, "trieste.objectives.MultiObjectiveTestProblem.gen_pareto_optimal_points"], [54, "trieste.objectives.multi_objectives.MultiObjectiveTestProblem.gen_pareto_optimal_points"]], "minimizers (singleobjectivetestproblem attribute)": [[53, "trieste.objectives.SingleObjectiveTestProblem.minimizers"], [56, "trieste.objectives.single_objectives.SingleObjectiveTestProblem.minimizers"]], "minimum (singleobjectivetestproblem attribute)": [[53, "trieste.objectives.SingleObjectiveTestProblem.minimum"], [56, "trieste.objectives.single_objectives.SingleObjectiveTestProblem.minimum"]], "mk_multi_observer() (in module trieste.objectives)": [[53, "trieste.objectives.mk_multi_observer"]], "mk_observer() (in module trieste.objectives)": [[53, "trieste.objectives.mk_observer"]], "name (objectivetestproblem attribute)": [[53, "trieste.objectives.ObjectiveTestProblem.name"], [56, "trieste.objectives.single_objectives.ObjectiveTestProblem.name"]], "num_fidelities (singleobjectivemultifidelitytestproblem attribute)": [[53, "trieste.objectives.SingleObjectiveMultifidelityTestProblem.num_fidelities"], [55, "trieste.objectives.multifidelity_objectives.SingleObjectiveMultifidelityTestProblem.num_fidelities"]], "objective (objectivetestproblem attribute)": [[53, "trieste.objectives.ObjectiveTestProblem.objective"], [56, "trieste.objectives.single_objectives.ObjectiveTestProblem.objective"]], "search_space (objectivetestproblem attribute)": [[53, "trieste.objectives.ObjectiveTestProblem.search_space"], [56, "trieste.objectives.single_objectives.ObjectiveTestProblem.search_space"]], "trieste.objectives": [[53, "module-trieste.objectives"]], "dtlz1() (in module trieste.objectives.multi_objectives)": [[54, "trieste.objectives.multi_objectives.DTLZ1"], [54, "trieste.objectives.multi_objectives.dtlz1"]], "dtlz2() (in module trieste.objectives.multi_objectives)": [[54, "trieste.objectives.multi_objectives.DTLZ2"], [54, "trieste.objectives.multi_objectives.dtlz2"]], "genparetooptimalpoints (class in trieste.objectives.multi_objectives)": [[54, "trieste.objectives.multi_objectives.GenParetoOptimalPoints"]], "multiobjectivetestproblem (class in trieste.objectives.multi_objectives)": [[54, "trieste.objectives.multi_objectives.MultiObjectiveTestProblem"]], "vlmop2() (in module trieste.objectives.multi_objectives)": [[54, "trieste.objectives.multi_objectives.VLMOP2"], [54, "trieste.objectives.multi_objectives.vlmop2"]], "__call__() (genparetooptimalpoints method)": [[54, "trieste.objectives.multi_objectives.GenParetoOptimalPoints.__call__"]], "dtlz_mkd() (in module trieste.objectives.multi_objectives)": [[54, "trieste.objectives.multi_objectives.dtlz_mkd"]], "trieste.objectives.multi_objectives": [[54, "module-trieste.objectives.multi_objectives"]], "singleobjectivemultifidelitytestproblem (class in trieste.objectives.multifidelity_objectives)": [[55, "trieste.objectives.multifidelity_objectives.SingleObjectiveMultifidelityTestProblem"]], "trieste.objectives.multifidelity_objectives": [[55, "module-trieste.objectives.multifidelity_objectives"]], "ackley5 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Ackley5"]], "branin (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Branin"]], "constrainedscaledbranin (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.ConstrainedScaledBranin"]], "gramacylee (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.GramacyLee"]], "hartmann3 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Hartmann3"]], "hartmann6 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Hartmann6"]], "levy8 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Levy8"]], "logarithmicgoldsteinprice (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.LogarithmicGoldsteinPrice"]], "michalewicz10 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Michalewicz10"]], "michalewicz2 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Michalewicz2"]], "michalewicz5 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Michalewicz5"]], "objectivetestfunction (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.ObjectiveTestFunction"]], "objectivetestproblem (class in trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.ObjectiveTestProblem"]], "rosenbrock4 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Rosenbrock4"]], "scaledbranin (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.ScaledBranin"]], "shekel4 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Shekel4"]], "simplequadratic (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.SimpleQuadratic"]], "singleobjectivetestproblem (class in trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.SingleObjectiveTestProblem"]], "trid10 (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.Trid10"]], "ackley_5() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.ackley_5"]], "branin() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.branin"]], "check_objective_shapes() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.check_objective_shapes"]], "gramacy_lee() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.gramacy_lee"]], "hartmann_3() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.hartmann_3"]], "hartmann_6() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.hartmann_6"]], "levy() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.levy"]], "levy_8() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.levy_8"]], "logarithmic_goldstein_price() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.logarithmic_goldstein_price"]], "michalewicz() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.michalewicz"]], "michalewicz_10() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.michalewicz_10"]], "michalewicz_2() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.michalewicz_2"]], "michalewicz_5() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.michalewicz_5"]], "rosenbrock() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.rosenbrock"]], "rosenbrock_4() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.rosenbrock_4"]], "scaled_branin() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.scaled_branin"]], "shekel_4() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.shekel_4"]], "simple_quadratic() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.simple_quadratic"]], "trid() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.trid"]], "trid_10() (in module trieste.objectives.single_objectives)": [[56, "trieste.objectives.single_objectives.trid_10"]], "trieste.objectives.single_objectives": [[56, "module-trieste.objectives.single_objectives"]], "mk_batch_observer() (in module trieste.objectives.utils)": [[57, "trieste.objectives.utils.mk_batch_observer"]], "mk_multi_observer() (in module trieste.objectives.utils)": [[57, "trieste.objectives.utils.mk_multi_observer"]], "mk_observer() (in module trieste.objectives.utils)": [[57, "trieste.objectives.utils.mk_observer"]], "trieste.objectives.utils": [[57, "module-trieste.objectives.utils"]], "multiobserver (in module trieste.observer)": [[58, "trieste.observer.MultiObserver"]], "objective (in module trieste.observer)": [[58, "trieste.observer.OBJECTIVE"]], "observer (in module trieste.observer)": [[58, "trieste.observer.Observer"]], "singleobserver (in module trieste.observer)": [[58, "trieste.observer.SingleObserver"]], "filter_finite() (in module trieste.observer)": [[58, "trieste.observer.filter_finite"]], "map_is_finite() (in module trieste.observer)": [[58, "trieste.observer.map_is_finite"]], "trieste.observer": [[58, "module-trieste.observer"]], "box (class in trieste.space)": [[59, "trieste.space.Box"]], "categoricalsearchspace (class in trieste.space)": [[59, "trieste.space.CategoricalSearchSpace"]], "collectionsearchspace (class in trieste.space)": [[59, "trieste.space.CollectionSearchSpace"]], "constraint (in module trieste.space)": [[59, "trieste.space.Constraint"]], "default_dtype (in module trieste.space)": [[59, "trieste.space.DEFAULT_DTYPE"]], "discretesearchspace (class in trieste.space)": [[59, "trieste.space.DiscreteSearchSpace"]], "encoderfunction (in module trieste.space)": [[59, "trieste.space.EncoderFunction"]], "generaldiscretesearchspace (class in trieste.space)": [[59, "trieste.space.GeneralDiscreteSearchSpace"]], "hasonehotencoder (class in trieste.space)": [[59, "trieste.space.HasOneHotEncoder"]], "linearconstraint (class in trieste.space)": [[59, "trieste.space.LinearConstraint"]], "nonlinearconstraint (class in trieste.space)": [[59, "trieste.space.NonlinearConstraint"]], "sampletimeouterror": [[59, "trieste.space.SampleTimeoutError"]], "searchspace (class in trieste.space)": [[59, "trieste.space.SearchSpace"]], "searchspacetype (in module trieste.space)": [[59, "trieste.space.SearchSpaceType"]], "taggedmultisearchspace (class in trieste.space)": [[59, "trieste.space.TaggedMultiSearchSpace"]], "taggedproductsearchspace (class in trieste.space)": [[59, "trieste.space.TaggedProductSearchSpace"]], "__contains__() (searchspace method)": [[59, "trieste.space.SearchSpace.__contains__"]], "__eq__() (box method)": [[59, "trieste.space.Box.__eq__"]], "__eq__() (categoricalsearchspace method)": [[59, "trieste.space.CategoricalSearchSpace.__eq__"]], "__eq__() (collectionsearchspace method)": [[59, "trieste.space.CollectionSearchSpace.__eq__"]], "__eq__() (discretesearchspace method)": [[59, "trieste.space.DiscreteSearchSpace.__eq__"]], "__eq__() (linearconstraint method)": [[59, "trieste.space.LinearConstraint.__eq__"]], "__eq__() (nonlinearconstraint method)": [[59, "trieste.space.NonlinearConstraint.__eq__"]], "__eq__() (searchspace method)": [[59, "trieste.space.SearchSpace.__eq__"]], "__mul__() (searchspace method)": [[59, "trieste.space.SearchSpace.__mul__"]], "__pow__() (searchspace method)": [[59, "trieste.space.SearchSpace.__pow__"]], "__repr__() (collectionsearchspace method)": [[59, "trieste.space.CollectionSearchSpace.__repr__"]], "_contains() (box method)": [[59, "trieste.space.Box._contains"]], "_contains() (generaldiscretesearchspace method)": [[59, "trieste.space.GeneralDiscreteSearchSpace._contains"]], "_contains() (searchspace method)": [[59, "trieste.space.SearchSpace._contains"]], "_contains() (taggedmultisearchspace method)": [[59, "trieste.space.TaggedMultiSearchSpace._contains"]], "_contains() (taggedproductsearchspace method)": [[59, "trieste.space.TaggedProductSearchSpace._contains"]], "_sample_feasible_loop() (box method)": [[59, "trieste.space.Box._sample_feasible_loop"]], "constraints (box property)": [[59, "trieste.space.Box.constraints"]], "constraints (searchspace property)": [[59, "trieste.space.SearchSpace.constraints"]], "constraints_residuals() (box method)": [[59, "trieste.space.Box.constraints_residuals"]], "constraints_residuals() (searchspace method)": [[59, "trieste.space.SearchSpace.constraints_residuals"]], "contains() (searchspace method)": [[59, "trieste.space.SearchSpace.contains"]], "dimension (box property)": [[59, "trieste.space.Box.dimension"]], "dimension (generaldiscretesearchspace property)": [[59, "trieste.space.GeneralDiscreteSearchSpace.dimension"]], "dimension (searchspace property)": [[59, "trieste.space.SearchSpace.dimension"]], "dimension (taggedmultisearchspace property)": [[59, "trieste.space.TaggedMultiSearchSpace.dimension"]], "dimension (taggedproductsearchspace property)": [[59, "trieste.space.TaggedProductSearchSpace.dimension"]], "discretize() (searchspace method)": [[59, "trieste.space.SearchSpace.discretize"]], "discretize() (taggedmultisearchspace method)": [[59, "trieste.space.TaggedMultiSearchSpace.discretize"]], "fix_subspace() (taggedproductsearchspace method)": [[59, "trieste.space.TaggedProductSearchSpace.fix_subspace"]], "get_subspace() (collectionsearchspace method)": [[59, "trieste.space.CollectionSearchSpace.get_subspace"]], "get_subspace_component() (taggedproductsearchspace method)": [[59, "trieste.space.TaggedProductSearchSpace.get_subspace_component"]], "has_bounds (box property)": [[59, "trieste.space.Box.has_bounds"]], "has_bounds (categoricalsearchspace property)": [[59, "trieste.space.CategoricalSearchSpace.has_bounds"]], "has_bounds (collectionsearchspace property)": [[59, "trieste.space.CollectionSearchSpace.has_bounds"]], "has_bounds (discretesearchspace property)": [[59, "trieste.space.DiscreteSearchSpace.has_bounds"]], "has_bounds (searchspace property)": [[59, "trieste.space.SearchSpace.has_bounds"]], "has_constraints (box property)": [[59, "trieste.space.Box.has_constraints"]], "has_constraints (searchspace property)": [[59, "trieste.space.SearchSpace.has_constraints"]], "is_feasible() (box method)": [[59, "trieste.space.Box.is_feasible"]], "is_feasible() (searchspace method)": [[59, "trieste.space.SearchSpace.is_feasible"]], "lower (box property)": [[59, "trieste.space.Box.lower"]], "lower (categoricalsearchspace property)": [[59, "trieste.space.CategoricalSearchSpace.lower"]], "lower (discretesearchspace property)": [[59, "trieste.space.DiscreteSearchSpace.lower"]], "lower (searchspace property)": [[59, "trieste.space.SearchSpace.lower"]], "lower (taggedmultisearchspace property)": [[59, "trieste.space.TaggedMultiSearchSpace.lower"]], "lower (taggedproductsearchspace property)": [[59, "trieste.space.TaggedProductSearchSpace.lower"]], "one_hot_encoder (categoricalsearchspace property)": [[59, "trieste.space.CategoricalSearchSpace.one_hot_encoder"]], "one_hot_encoder (hasonehotencoder property)": [[59, "trieste.space.HasOneHotEncoder.one_hot_encoder"]], "one_hot_encoder (taggedproductsearchspace property)": [[59, "trieste.space.TaggedProductSearchSpace.one_hot_encoder"]], "one_hot_encoder() (in module trieste.space)": [[59, "trieste.space.one_hot_encoder"]], "points (generaldiscretesearchspace property)": [[59, "trieste.space.GeneralDiscreteSearchSpace.points"]], "product() (box method)": [[59, "trieste.space.Box.product"]], "product() (categoricalsearchspace method)": [[59, "trieste.space.CategoricalSearchSpace.product"]], "product() (discretesearchspace method)": [[59, "trieste.space.DiscreteSearchSpace.product"]], "product() (searchspace method)": [[59, "trieste.space.SearchSpace.product"]], "product() (taggedmultisearchspace method)": [[59, "trieste.space.TaggedMultiSearchSpace.product"]], "product() (taggedproductsearchspace method)": [[59, "trieste.space.TaggedProductSearchSpace.product"]], "residual() (linearconstraint method)": [[59, "trieste.space.LinearConstraint.residual"]], "residual() (nonlinearconstraint method)": [[59, "trieste.space.NonlinearConstraint.residual"]], "sample() (box method)": [[59, "trieste.space.Box.sample"]], "sample() (generaldiscretesearchspace method)": [[59, "trieste.space.GeneralDiscreteSearchSpace.sample"]], "sample() (searchspace method)": [[59, "trieste.space.SearchSpace.sample"]], "sample() (taggedmultisearchspace method)": [[59, "trieste.space.TaggedMultiSearchSpace.sample"]], "sample() (taggedproductsearchspace method)": [[59, "trieste.space.TaggedProductSearchSpace.sample"]], "sample_feasible() (box method)": [[59, "trieste.space.Box.sample_feasible"]], "sample_halton() (box method)": [[59, "trieste.space.Box.sample_halton"]], "sample_halton_feasible() (box method)": [[59, "trieste.space.Box.sample_halton_feasible"]], "sample_sobol() (box method)": [[59, "trieste.space.Box.sample_sobol"]], "sample_sobol_feasible() (box method)": [[59, "trieste.space.Box.sample_sobol_feasible"]], "subspace_dimension (collectionsearchspace property)": [[59, "trieste.space.CollectionSearchSpace.subspace_dimension"]], "subspace_lower (collectionsearchspace property)": [[59, "trieste.space.CollectionSearchSpace.subspace_lower"]], "subspace_sample() (collectionsearchspace method)": [[59, "trieste.space.CollectionSearchSpace.subspace_sample"]], "subspace_tags (collectionsearchspace property)": [[59, "trieste.space.CollectionSearchSpace.subspace_tags"]], "subspace_upper (collectionsearchspace property)": [[59, "trieste.space.CollectionSearchSpace.subspace_upper"]], "tags (categoricalsearchspace property)": [[59, "trieste.space.CategoricalSearchSpace.tags"]], "to_tags() (categoricalsearchspace method)": [[59, "trieste.space.CategoricalSearchSpace.to_tags"]], "trieste.space": [[59, "module-trieste.space"]], "upper (box property)": [[59, "trieste.space.Box.upper"]], "upper (categoricalsearchspace property)": [[59, "trieste.space.CategoricalSearchSpace.upper"]], "upper (discretesearchspace property)": [[59, "trieste.space.DiscreteSearchSpace.upper"]], "upper (searchspace property)": [[59, "trieste.space.SearchSpace.upper"]], "upper (taggedmultisearchspace property)": [[59, "trieste.space.TaggedMultiSearchSpace.upper"]], "upper (taggedproductsearchspace property)": [[59, "trieste.space.TaggedProductSearchSpace.upper"]], "s (in module trieste.types)": [[60, "trieste.types.S"]], "state (in module trieste.types)": [[60, "trieste.types.State"]], "t (in module trieste.types)": [[60, "trieste.types.T"]], "tag (in module trieste.types)": [[60, "trieste.types.Tag"]], "tensortype (in module trieste.types)": [[60, "trieste.types.TensorType"]], "trieste.types": [[60, "module-trieste.types"]], "defaults (class in trieste.utils)": [[61, "trieste.utils.DEFAULTS"]], "err (class in trieste.utils)": [[61, "trieste.utils.Err"]], "jitter (defaults attribute)": [[61, "trieste.utils.DEFAULTS.JITTER"], [62, "trieste.utils.misc.DEFAULTS.JITTER"]], "k (in module trieste.utils)": [[61, "trieste.utils.K"]], "ok (class in trieste.utils)": [[61, "trieste.utils.Ok"]], "result (class in trieste.utils)": [[61, "trieste.utils.Result"]], "resulttype (in module trieste.utils)": [[61, "trieste.utils.ResultType"]], "timer (class in trieste.utils)": [[61, "trieste.utils.Timer"]], "u (in module trieste.utils)": [[61, "trieste.utils.U"]], "v (in module trieste.utils)": [[61, "trieste.utils.V"]], "flatten_leading_dims() (in module trieste.utils)": [[61, "trieste.utils.flatten_leading_dims"]], "is_err (result property)": [[61, "trieste.utils.Result.is_err"], [62, "trieste.utils.misc.Result.is_err"]], "is_ok (err property)": [[61, "trieste.utils.Err.is_ok"], [62, "trieste.utils.misc.Err.is_ok"]], "is_ok (ok property)": [[61, "trieste.utils.Ok.is_ok"], [62, "trieste.utils.misc.Ok.is_ok"]], "is_ok (result property)": [[61, "trieste.utils.Result.is_ok"], [62, "trieste.utils.misc.Result.is_ok"]], "jit() (in module trieste.utils)": [[61, "trieste.utils.jit"]], "map_values() (in module trieste.utils)": [[61, "trieste.utils.map_values"]], "shapes_equal() (in module trieste.utils)": [[61, "trieste.utils.shapes_equal"]], "to_numpy() (in module trieste.utils)": [[61, "trieste.utils.to_numpy"]], "trieste.utils": [[61, "module-trieste.utils"]], "unwrap() (err method)": [[61, "trieste.utils.Err.unwrap"], [62, "trieste.utils.misc.Err.unwrap"]], "unwrap() (ok method)": [[61, "trieste.utils.Ok.unwrap"], [62, "trieste.utils.misc.Ok.unwrap"]], "unwrap() (result method)": [[61, "trieste.utils.Result.unwrap"], [62, "trieste.utils.misc.Result.unwrap"]], "c (in module trieste.utils.misc)": [[62, "trieste.utils.misc.C"]], "defaults (class in trieste.utils.misc)": [[62, "trieste.utils.misc.DEFAULTS"]], "err (class in trieste.utils.misc)": [[62, "trieste.utils.misc.Err"]], "k (in module trieste.utils.misc)": [[62, "trieste.utils.misc.K"]], "localizedtag (class in trieste.utils.misc)": [[62, "trieste.utils.misc.LocalizedTag"]], "ok (class in trieste.utils.misc)": [[62, "trieste.utils.misc.Ok"]], "result (class in trieste.utils.misc)": [[62, "trieste.utils.misc.Result"]], "resulttype (in module trieste.utils.misc)": [[62, "trieste.utils.misc.ResultType"]], "t (in module trieste.utils.misc)": [[62, "trieste.utils.misc.T"]], "timer (class in trieste.utils.misc)": [[62, "trieste.utils.misc.Timer"]], "u (in module trieste.utils.misc)": [[62, "trieste.utils.misc.U"]], "v (in module trieste.utils.misc)": [[62, "trieste.utils.misc.V"]], "_flatten() (in module trieste.utils.misc)": [[62, "trieste.utils.misc._flatten"]], "_flatten_module() (in module trieste.utils.misc)": [[62, "trieste.utils.misc._flatten_module"]], "flatten_leading_dims() (in module trieste.utils.misc)": [[62, "trieste.utils.misc.flatten_leading_dims"]], "from_tag() (localizedtag static method)": [[62, "trieste.utils.misc.LocalizedTag.from_tag"]], "get_value_for_tag() (in module trieste.utils.misc)": [[62, "trieste.utils.misc.get_value_for_tag"]], "get_variables() (in module trieste.utils.misc)": [[62, "trieste.utils.misc.get_variables"]], "global_tag (localizedtag attribute)": [[62, "trieste.utils.misc.LocalizedTag.global_tag"]], "ignoring_local_tags() (in module trieste.utils.misc)": [[62, "trieste.utils.misc.ignoring_local_tags"]], "is_local (localizedtag property)": [[62, "trieste.utils.misc.LocalizedTag.is_local"]], "jit() (in module trieste.utils.misc)": [[62, "trieste.utils.misc.jit"]], "local_index (localizedtag attribute)": [[62, "trieste.utils.misc.LocalizedTag.local_index"]], "map_values() (in module trieste.utils.misc)": [[62, "trieste.utils.misc.map_values"]], "shapes_equal() (in module trieste.utils.misc)": [[62, "trieste.utils.misc.shapes_equal"]], "to_numpy() (in module trieste.utils.misc)": [[62, "trieste.utils.misc.to_numpy"]], "trieste.utils.misc": [[62, "module-trieste.utils.misc"]], "trieste.version": [[63, "module-trieste.version"]]}})